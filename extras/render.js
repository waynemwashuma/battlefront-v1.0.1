(globalThis.webpackChunksup_frontend=globalThis.webpackChunksup_frontend||[]).push([[70],{28942:(e,t,i)=>{i.d(t,{V:()=>o,k:()=>a});var n=i(92077),r=i(69430);let o;!function(e){e.PLAYER="player",e.PLAYER_SQUARE="player_square",e.TEAM="team"}(o||(o={}));class a{width=32;height=32;clip="arc";imageState=new n.L({pending:!0,rejected:!0});constructor(e,t,i,n){this.atlasMapper=e,this.imageLoader=t,this.playerState=i,Object.assign(this,n)}get(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:o.PLAYER;const i=`${t}_flag${e}`,n=this.atlasMapper.getMappingUnsafe(i);if(n)return-1!==n.page?n:null;if(this.imageState.isRejected(i)||this.imageState.isPending(i))return null;const a=this.getFlagImageURL(e,t);if(!a)return null;const s=()=>(0,r.ck)(this.imageLoader.loadImage(a)).then((e=>this.create(e))),l=s();return l.then((e=>this.atlasMapper.add(i,e,{loader:s}))).catch((e=>{console.error(`Flag image id=${i} src=${a} failed to load`,e)})),this.imageState.add(i,l),null}getFlagImageURL(e,t){var i;switch(t){case o.PLAYER:return this.playerState.getPlayer(e).getFlagImageURL();case o.PLAYER_SQUARE:return this.playerState.getPlayer(e).getSquareFlagImageURL();case o.TEAM:return null===(i=this.playerState.getTeam(e))||void 0===i?void 0:i.getFlagImageURL();default:return}}create(e){if("none"===this.clip)return e;const t=document.createElement("canvas");t.width=this.width,t.height=this.height;const i=t.getContext("2d");if(null!==i){const n=t.width/2,r=t.height/2;switch(this.clip){case"arc":i.arc(n,r,n,0,2*Math.PI),i.clip();break;case"ellipse":i.ellipse(n,r,n,r,0,0,2*Math.PI),i.clip()}i.drawImage(e,0,0,e.width,e.height,0,0,t.width,t.height)}return t}}},9892:(e,t,i)=>{i.d(t,{G:()=>a});var n=i(72243),r=i(72342);const o=e=>e>=.01;class a{systems=[];constructor(e,t){this.target=e,(t.systems??[]).forEach((t=>{const{length:i}=this.systems,r=e[t];if(r)if(Array.isArray(r)){const e=r.filter(n.u2).map(((e,i)=>[e,`${t}[${i}]`]));this.systems.push(...e)}else(0,n.u2)(r)&&this.systems.push([r,t])})),this.properties=t.properties??{},this.fadeThreshold=t.fadeThreshold??0,this.fadeThresholdLower=t.fadeThresholdLower??0,this.fadeSpeed=t.fadeSpeed??.05,this.fadeInverted=Boolean(t.fadeInverted),this.fadeChannels=(t.fadeChannels??"a").split("").filter(r.qR),this.fadeValue=1}get fade(){return this.fadeInverted?1-this.fadeValue:this.fadeValue}get visible(){return o(this.fade)}update(e,t){if(this.fadeThreshold>0){const i=t>this.fadeThreshold||t<this.fadeThresholdLower?1:-1;this.fadeValue=Math.max(Math.min(this.fadeValue+i*this.fadeSpeed*e,1),0);const{fade:n}=this,r=o(n);for(let e=0,t=this.systems.length;e<t;++e){const[t]=this.systems[e];t.visible=r}for(let e=0,t=this.systems.length;e<t;++e){const[t]=this.systems[e],{color:i}=t;if(i)for(let e=0,r=this.fadeChannels.length;e<r;++e)i[this.fadeChannels[e]]=n;else"alpha"in t&&(t.alpha=n)}}for(const i in this.properties){if(!this.properties.hasOwnProperty(i))continue;let e=this.properties[i];"function"==typeof e&&(e=e(t));for(let t=0,n=this.systems.length;t<n;++t){const[n]=this.systems[t];i in n&&(n[i]=e)}}}}},39891:(e,t,i)=>{i.d(t,{D:()=>_});var n=i(92893),r=i.n(n),o=i(90157),a=i(24151),s=i(91451),l=i(48438),c=i(12405),h=i(27512),d=i(72342),u=i(64292),f=i(69165);class m{minLassoX=0;maxLassoX=0;lassoPolygon=[];provinceSelectionMode=!1;constructor(e,t,i,n){this.viewport=e,this.gameState=t,this.armySelection=i,this.provinceSelection=n}lassoFinished(e){if(e.stopPropagation(),e.preventDefault(),this.lassoPolygon.length<3)return void(this.lassoPolygon=[]);const t=e.ctrlKey||e.shiftKey,i=[],n=[],r=this.splitLassoPolygon();if(this.provinceSelectionMode){const e=this.gameState.getMapState().getPlayerProvinces();for(const t of e){const{x:e,y:i}=t.getCapital();for(const o of r)(0,d.CI)(o,e,i)&&n.push(t)}}else{const e=this.gameState.getArmyState().getArmiesWithSpyInfoArray(),t=(0,f.$B)(),{totalWidth:n}=this.viewport;for(const o of e){const{x:e,y:a}=o.isFlying()?o.getDrawPosition():o.getPosition(t);for(const t of r)(0,d.CI)(t,e%n,a)&&i.push(o)}}this.provinceSelection.setSelected(n,!!this.provinceSelectionMode&&t),this.armySelection.setSelected(i,!this.provinceSelectionMode&&t,!1,!1,!0,!0),this.lassoPolygon=[]}splitLassoPolygon(){const e=this.viewport.totalWidth;let t;if(this.maxLassoX>e?t=-Math.floor(this.maxLassoX/e)*e:this.maxLassoX<0&&(t=Math.ceil(Math.abs(this.maxLassoX)/e)*e),t){this.maxLassoX+=t,this.minLassoX+=t;for(let e=0,i=this.lassoPolygon.length;e<i;e++)this.lassoPolygon[e].x+=t}if(this.minLassoX<0){const t=[],i=[],n=this.lassoPolygon[0].clone();for(let r=0,o=this.lassoPolygon.length;r<o;r++){const a=this.lassoPolygon[r],s=r<o-1?this.lassoPolygon[r+1]:n;if(a.x<0&&s.x>0||a.x>0&&s.x<0){const n=s.x-a.x,r=s.y-a.y,o=a.y-a.x*r/n;t.push(new u.E(e,o)),i.push(new u.E(0,o))}else 0===a.x?(t.push(new u.E(e,a.y)),i.push(a)):a.x<0?(a.x+=e,t.push(a)):i.push(a)}return[t,i]}return[this.lassoPolygon]}onLassoDrag(e){"ctrlKey"in e&&(this.provinceSelectionMode=e.ctrlKey);const{left:t,top:i}=c.hup.getGameContainer().offset();let n=new u.E(e.pageX-t,e.pageY-i);if(n=this.viewport.toMapPos(n,void 0,!1),0===this.lassoPolygon.length)this.addToLasso(n);else{this.lassoPolygon[this.lassoPolygon.length-1].getDistance(n)>9&&this.addToLasso(n)}}addToLasso(e){this.lassoPolygon.length?(this.maxLassoX=Math.max(this.maxLassoX,e.x),this.minLassoX=Math.min(this.minLassoX,e.x)):(this.maxLassoX=e.x,this.minLassoX=e.x),this.lassoPolygon.push(e)}}var g=i(36882),p=i(11267),v=i(51625),x=i(85304),S=i(51873);const y=i(31639);class _{viewport;armyController;armySelection;provinceSelection;constructor(e){(0,S.S$)(this,"armyController","ArmyController"),(0,S.S$)(this,"armySelection","ArmySelectionModel"),(0,S.S$)(this,"provinceSelection","ProvinceSelection"),this.viewport=e,this.armyTooltip=null,this.provinceTooltip=null,this.setClickStart(!1),this.clickStillActive=!1,this.dragStart=null,this.dragMode=_.DragModes.NONE,this.rightButtonDown=!1,this.lasso=new m(e,c.hup.gameState,this.armySelection,this.provinceSelection),c.hup.mapMouseController=this}onMouseExit(e,t){t=!1!==t,x.u.removeCurrentTooltip(),t&&this.reset(e)}reset(e){this.updateHighlights(null,null,null,null,null,e),this.stopDragging(e),a.J.reset()}processClickStillActive(){(a.J.absoluteDragDistance.getLongAxisMovement()>_.CLICK_DISTANCE_TOLERANCE||Date.now()-a.J.dragTimeStart>_.CLICK_TIME_TOLERANCE)&&(this.clickStillActive=!1)}onMouseDrag(e,t,i,n){if(this.rightButtonDown)return this.onRightMouseButtonDrag(e);let r=!1;if(null===this.dragStart){let e=a.J.getDragStartPos()||t;e&&(e=this.viewport.toMapPos(e),this.dragStart=e,x.u.removeCurrentTooltip(),r=!0)}if(null===this.dragStart)return!1;if(this.isDraggingMap())return!1;let o=null;if(c.hup.renderCfg.armies&&!n&&(o=this.armySelection.getHighlightedArmy(),null!==o||i||(o=this.getArmyAt(this.dragStart)),o&&!this.armyController.canBeDragged(o)&&(o=null)),o){if(r&&this.setDragMode(_.DragModes.DRAG_MODE_ARMY),this.armyController.isMovedArmy(o)||(this.provinceSelection.setSelected([]),this.armySelection.setSelected([o],!1,!0,!1,!1)),this.clickStillActive&&(this.processClickStillActive(),this.clickStillActive))return!0;const e=this.viewport.toMapPos(t||a.J.getPosition()),i=this.getArmyAt(e);return this.setArmyTarget(e,i),this.armyController.showArmyCommandTooltip(!1),!0}return r&&this.isNotDragging()&&(this.setDragMode(_.DragModes.DRAG_MODE_MAP),s.EventBus.publish(l.N.CLIENT_DRAG_STARTED)),!1}onMouseMove(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(this.armyController.isPlanningMode()&&this.armyController.isValidCommand&&!t)return;const i=this.viewport.toMapPos(a.J.getPosition(),a.J.transformedPosition);if(c.hup.provinceController.isDeploymentMode())this.updateRallyTarget(i);else{let t=null,n=null;if(c.hup.renderCfg.armies&&(t=this.getArmyAt(i)),t&&o.F.lastEventWasTouch()&&!this.armySelection.isSelected(t.getArmyID())&&(t=null),!t){const e=c.hup.gameState.getMapState().getProvinceAt(i);((null==e?void 0:e.getCapital().getDistanceSq(i.x,i.y))??100)<100&&(n=e)}let r=null;!t&&c.hup.getMod().hasNeutralProvinceFeature()&&(r=c.hup.gameState.getMapState().getNeutralProvinceAt(i)),this.updateHighlights(i,t,n,r,e)}}getArmyAt(e){var t;return(null===(t=c.hup.ui.mapWidget.mapRenderer)||void 0===t?void 0:t.getArmyAt(this.viewport.fromMapPos(e)))??null}updateHighlights(e,t,i,n,r){!this.armyController.getCommandMode()||!e||"function"==typeof TouchEvent&&r instanceof TouchEvent||(this.setArmyTarget(e,t),this.armyController.getDragTarget()||(i=null),this.armyController.getAttackedArmy()||(t=null)),this.armySelection.setHighlightedArmy(t)&&(c.hup.config.isInTouchMode||(this.toggleArmyTooltip(r),s.EventBus.publish(p.q.UI_ARMY_HOVER_CHANGED))),t&&(i=null),this.provinceSelection.setHighlightedProvince(i)&&(c.hup.config.isInTouchMode||this.toggleProvinceTooltip(r,i)),this.provinceSelection.setHighlightedNeutralProvince(n)&&(c.hup.config.isInTouchMode||(this.provinceTooltip=null,this.clearTooltip(),n&&this.showProvinceTooltip(r,n))),this.armyController.showArmyCommandTooltip(!0)}updateRallyTarget(e){e&&c.hup.provinceController.setDeploymentTarget(e)}setArmyTarget(e,t){this.armyController.setDragTarget(e,t,this.viewport.scale)}onMouseDown(e){this.dragStart=null,a.J.isRightClick(e)?(this.rightButtonDown=!0,this.setClickStart(!1),this.clickStillActive=!1):(this.setClickStart(!0),this.clickStillActive=!0)}onDeselectionClick(){c.hup.provinceController.isDeploymentMode()&&s.EventBus.publish(p.q.UI_TOGGLE_DEPLOYMENT_MODE,null),s.EventBus.publish(p.q.UI_ARMY_DESELECT),s.EventBus.publish(p.q.UI_PROVINCE_DESELECT)}onMouseUp(e,t){if(this.clickStillActive&&this.processClickStillActive(),t=(t||a.J.isDrag()||a.J.wasDrag())&&!this.clickStillActive,this.clickStillActive=!1,this.rightButtonDown){if(t&&!this.armyController.getCommandMode()&&!c.hup.provinceController.isDeploymentMode())return this.stopDragging(),this.rightButtonDown=!1,this.lasso.lassoFinished(e),!1;this.onDeselectionClick()}else if(!this.clickStart)return!1;if(t)this.isDraggingArmy()&&this.armyController.sendAction(),this.armyController.getCommandMode()||this.armyController.setDragTarget(null);else{if(c.hup.provinceController.isDeploymentMode())return c.hup.provinceController.isDeploymentPlanningMode()||c.hup.provinceController.finishDeploymentTarget(),!1;if(this.clickStart)if(this.armyController.getCommandMode()&&this.armyController.getCommandMode()!==g.OC.ADD_ARMY)this.armyController.isPlanningMode()?this.onMouseMove(e,!0):this.armyController.getCommandMode()===g.OC.DEPLOY_UNIT?s.EventBus.publish(p.q.UI_ARMY_DEPLOY_TARGET_SELECTED):(this.armyController.sendAction(),this.armyController.setDragTarget(null));else{const t=e.ctrlKey,i=e.altKey,n=e.shiftKey,r=this.armyController.getCommandMode()===g.OC.ADD_ARMY,o=a.J.isLongTouch();this.onSelectionClick(t||i||n||r||o)}else this.rightButtonDown&&(s.EventBus.publish(p.q.UI_COMMAND_MODE_SELECTED,g.OC.NONE),this.armyController.setDragTarget(null));this.armyController.isValidCommand||this.armyController.message&&(c.hup.ui.helper.showFloatingTip(this.armyController.message),this.armyController.message=null,this.armyController.setDragTarget(null),this.armyController.isPlanningMode()||s.EventBus.publish(p.q.UI_COMMAND_MODE_SELECTED,g.OC.NONE))}return this.stopDragging(e),t||this.onMouseMove(e),this.setClickStart(!1),this.rightButtonDown=!1,this.armyController.hideArmyCommandTooltip(),!0}onSelectionClick(e,t){c.hup.config.useMapSelector?s.EventBus.publish(p.q.UI_SELECTION_CLICK,{add:e,pos:t}):this.selectOnMap(e,t)}selectOnMap(e,t){t=t||this.viewport.toMapPos(a.J.getPosition(),a.J.transformedPosition);let i=null;if(c.hup.renderCfg.armies&&(!c.hup.config.isMobileClient||this.viewport.scale>.5)&&(i=this.getArmyAt(t)),null!==i){if(this.provinceSelection.setSelected([]),c.hup.armyController.isAttackArmySelectionMode()&&!c.hup.armyController.isValidArmyForAttackArmySelection(i))return;this.armySelection.setSelected([i],e,!0,!1,!0,!0)}else if(this.armyController.getCommandMode()!==g.OC.ADD_ARMY){this.armySelection.setSelected([]);const i=c.hup.gameState.getMapState().getProvinceAt(t);if(null!==i){i.getCapital().getDistanceSq(t.x,t.y)<100&&c.hup.spyWidget&&!c.hup.spyWidget.spyModeOn?this.provinceSelection.setSelected([i],!1,!1):this.provinceSelection.setSelected([i],e,!0,!1,!1,!0,!1,!0)}else this.provinceSelection.setSelected([],void 0,void 0,void 0,void 0,void 0,void 0,!0)}}onDoubleClick(){const e=this.viewport.toMapPos(a.J.getPosition(),a.J.transformedPosition);if(!c.hup.renderCfg.armies)return;const t=this.getArmyAt(e);if(t){const e=t.getPrefightType(),i=c.hup.gameState.getArmyState().getArmiesArray().filter((e=>e.getOwnerID()===t.getOwnerID())).filter((t=>t.getUnit(e))).filter((e=>this.viewport.rect.contains(e.getPosition())));this.armySelection.setSelected(i,!0,!1,!1,!0,!0),s.EventBus.publish(p.q.UI_ARMY_DOUBLE_CLICK_SELECTION)}}toggleArmyTooltipMobile(e){const t=this.armySelection.getHighlightedArmy();!t||null!==this.armyTooltip&&this.armyTooltip.army===t||(this.armyTooltip=new v.N(t),this.armyTooltip.showAtTouch(e),x.u.registerMoveListener(r()(document.body)))}toggleArmyTooltip(e){const t=this.armySelection.getHighlightedArmy();if(!t||null!==this.armyTooltip&&this.armyTooltip.army===t)this.armyTooltip&&(this.armyTooltip=null,this.clearTooltip());else if(this.armyTooltip=new v.N(t),this.armyTooltip.setMousePositionOffset(c.hup.config.mapMouseControllerConfig.mousePositionArmy),c.hup.config.mapMouseControllerConfig.useStickyTooltipsForArmies){const e=this.viewport.fromMapPos(t.getPosition());this.armyTooltip.showAtScreenPosition(e.x,e.y,c.hup.config.mapMouseControllerConfig.stickyTooltipPositionArmy,!0)}else this.armyTooltip.showAtMouse(e),x.u.registerMoveListener(r()(document.body))}showProvinceTooltip(e,t){if(!y)return;const i=h.F.getProvinceTooltipModel(t),n=c.hup.ui.helper.render(y,i);if(this.provinceTooltip=new x.u(n),this.provinceTooltip.setMousePositionOffset(c.hup.config.mapMouseControllerConfig.mousePositionProvince),c.hup.config.mapMouseControllerConfig.useStickyTooltipsForProvinces&&!t.isNeutral()){const e=this.viewport.fromMapPos(t.getCapital());this.provinceTooltip.showAtScreenPosition(e.x,e.y,c.hup.config.mapMouseControllerConfig.stickyTooltipPositionProvince,!0)}else this.provinceTooltip.showAtMouse(e),x.u.registerMoveListener(r()(document.body))}toggleProvinceTooltip(e,t){t&&null===this.provinceTooltip?this.showProvinceTooltip(e,t):this.provinceTooltip&&(this.provinceTooltip=null,this.clearTooltip())}clearTooltip(){this.provinceTooltip||this.armyTooltip||(x.u.unregisterMoveListener(r()(document.body)),x.u.removeCurrentTooltip())}onRightMouseButtonDrag(e){return!!e&&(this.lasso.onLassoDrag(e),!0)}stopDragging(e){this.dragStart=null,this.isDraggingMap()&&s.EventBus.publish(l.N.CLIENT_DRAG_FINISHED),this.resetDragMode()}getLassoTool(){return this.lasso}setDragMode(e){this.dragMode=e}resetDragMode(){this.dragMode=_.DragModes.NONE}isDraggingArmy(){return this.dragMode===_.DragModes.DRAG_MODE_ARMY}isDraggingMap(){return this.dragMode===_.DragModes.DRAG_MODE_MAP}isNotDragging(){return this.dragMode===_.DragModes.NONE}getClickStart(){return this.clickStart}setClickStart(e){this.clickStart=e}}_.CLICK_TIME_TOLERANCE=300,_.CLICK_DISTANCE_TOLERANCE=5,_.DragModes={NONE:0,DRAG_MODE_MAP:1,DRAG_MODE_ARMY:2}},86065:(e,t,i)=>{i.d(t,{A:()=>r,c:()=>n});var n={NEVER:0,ABROAD:1,FOREIGN:2,ALWAYS:3},r={NEVER:0,MULTI:1,ALWAYS:2}},51552:(e,t,i)=>{i.d(t,{Z:()=>n});class n{static IDs={AIRPLANE:"airplane",SUBMARINE:"submarine",BALLOON:"balloon",SHIP:"ship",TANK:"tank",ARTILLERY:"artillery",CAVALRY:"cavalry",INFANTRY:"infantry"}}},88824:(e,t,i)=>{i.d(t,{F:()=>h});i(37554),i(72342);var n,r=i(26027),o=i(53754),a=i(6665),s=i(65880);class l{innerBorder=[];edge=[];edgeNormal=[];triangulation=[];bevelLineIndexes=[];bevelVertexCount=[];bevel=!1;constructor(e){this.model=e,this.borders=e.borders,this.bounds=e.getBoundsArray()}getCapital(){return this.model.getCapital()}getBorderVertexCount(e){return this.borders[e].length/2}getBorderIndexCount(e){return this.triangulation[e].length}getBevelVertexCount(e){return this.bevelVertexCount[e]}getBevelIndexCount(e){if(!this.bevel||this.getBevelVertexCount(e)<=0)return 0;const t=this.bevelLineIndexes[e];return 6*(t?t.length/2:this.getBorderVertexCount(e))}getVertexAndIndexCounts(){let e=0,t=0;if(arguments.length>0&&void 0!==arguments[0]&&arguments[0])for(let i=0;i<this.borders.length;++i)e+=this.getBorderVertexCount(i),t+=this.getBorderIndexCount(i),e+=this.getBevelVertexCount(i),t+=this.getBevelIndexCount(i);else for(let i=0;i<this.borders.length;++i)e+=this.getBorderVertexCount(i),t+=this.getBorderIndexCount(i);return[e,t]}getVertexCount(){if(!(arguments.length>0&&void 0!==arguments[0]&&arguments[0]))return this.borders.reduce(((e,t)=>e+t.length/2),0);let e=0;for(let t=0;t<this.borders.length;++t)e+=this.getBorderVertexCount(t),e+=this.getBevelVertexCount(t);return e}getIndexCount(){if(!(arguments.length>0&&void 0!==arguments[0]&&arguments[0]))return this.triangulation.reduce(((e,t)=>e+t.length),0);let e=0;for(let t=0;t<this.borders.length;++t)e+=this.getBorderIndexCount(t),e+=this.getBevelIndexCount(t);return e}}function c(e){if(!(0,a.f)(e))return!1;switch(e.terrainType){case s.K.COASTAL:case s.K.SHALLOWSEA:case s.K.RIVER:return!1;default:return!0}}!function(e){e[e.province=0]="province",e[e.simpleProvince=1]="simpleProvince",e[e.urban=2]="urban"}(n||(n={}));class h{locations=[];sliceWidth=0;sliceCount=0;mapBounds=new r.T;safeRegion=new r.T;constructor(e){this.mapWidth=e,this.info=Object.keys(n).reduce(((e,t)=>(e[t]={locations:[],counts:[],slices:[],bevel:!1},e)),{})}generate(e){const{triangulations:t,locationLookup:i,locationFilter:n=c,urbanLocationFilter:r=(e=>e.isUrban()),useBevel:o=(e=>!e.isOnSea()),maxSliceWidth:a=500,maxVertexCount:s=65535}=e;if(!t)throw new Error("invalid triangulation input parameter");this.fromData(i,t,n,o),h.sortLocations(this.locations),this.calculateNumberOfSlices(a);const{sliceGeometries:l}=h,{sliceCount:d,sliceWidth:u,locations:f}=this,m=e=>{let{locations:t,simple:i}=e;return l(t,i,d,u,s)};Object.assign(this.info,{province:m({locations:f,simple:!1}),simpleProvince:m({locations:f,simple:!0}),urban:m({locations:f.filter((e=>r(e.model))),simple:!0})})}fromData(e,t,i,n){const{version:r}=t;if(!r||r<2||r>3)throw new Error(`incompatible triangulations version (${r})`);const{mapBounds:s,safeRegion:c,provinceInfo:h}=t,{indexData:d,innerPosData:u,edgeData:f,edgeNormalData:m,edgeIndexData:g}=t;this.mapBounds.set(new o.F(s.minX,s.minY),new o.F(s.maxX,s.maxY)),c&&this.safeRegion.set(new o.F(c.minX,c.minY),new o.F(c.maxX,c.maxY));const p=[];let v=-1,x=0,S=0,y=0,_=0;for(let o=0,w=h.length-4;o<w;){const t=h[o++],r=t!==v,s=h[o++],c=h[o++],w=h[o++],b=h[o++],C=x+s,P=S+w,M=y+c,A=_+b,T=e.get(t);if((0,a.f)(T)){let e;if(i(T))if(r?(e=new l(T),e.bevel=n(T),p.push(e)):e=p[p.length-1],e.triangulation.push(d.subarray(x,C)),e.innerBorder.push(u.subarray(y,M)),e.bevel&&w>0){if(e.edge.push(f.subarray(S,P)),e.edgeNormal.push(m.subarray(S,P)),e.bevelVertexCount.push(w/2),b>0){const t=e.triangulation.length-1,i=T.getBorder(t).length/2,n=g.subarray(_,A),r=new Set(n),o=[];for(let e=0;e<n.length;e++){const t=n[e];r.has((t+1)%i)&&o.push(t,e)}e.bevelLineIndexes[t]=o}}else e.edge.push([]),e.edgeNormal.push([]),e.bevelVertexCount.push(0)}else console.warn(`location with id ${t} not in given locations`);x=C,S=P,y=M,_=A,v=t}for(const o of p)o.bevel=o.bevel&&o.bevelVertexCount.some((e=>e>0));this.locations=p}calculateNumberOfSlices(e){this.sliceCount=Math.floor((this.mapWidth+e-1)/e),this.sliceWidth=this.sliceCount>0?this.mapWidth/this.sliceCount:0}static sortLocations(e){return e.sort(((e,t)=>e.bounds[0]-t.bounds[0]))}static sliceGeometries(e,t,i,n,r){const o=[...Array(i)].map((()=>({vertex:0,index:0,scale:0})));for(const c of e){const e=Math.max(c.bounds[0],0),i=c.bounds[2],r=Math.floor(e/n),a=(i-r*n)/n,s=!t&&c.bevel,[l,h]=c.getVertexAndIndexCounts(s),d=o[r];void 0===d&&console.error(`invalid slice index: ${r}`),d.vertex+=l,d.index+=h,d.scale=Math.max(d.scale,a)}const{splitBuffers:a}=h,[s,l]=a(o,r);return 0===s[0].vertex&&s.splice(0),{locations:e,counts:s,slices:l,bevel:!t}}static splitBuffers(e,t){const i=[{vertex:0,index:0}],n=[];let r=0,o=i[r];for(const a of e){if(a.vertex>t)throw new Error("slice vertex count exceeding maximum");o.vertex+a.vertex>t&&(i.push({vertex:0,index:0}),o=i[++r]);const{scale:e}=a,s=o.index,l=a.index;o.vertex+=a.vertex,o.index+=a.index,n.push({scale:e,geometryIndex:r,start:s,count:l})}return[i,n]}}},67271:(e,t,i)=>{i.d(t,{a:()=>l,y:()=>h});i(53703);var n=i(52949),r=i(77433),o=i(74226);const a=JSON.parse('{"Adreno (TM) 304":20,"Adreno (TM) 305":25,"Adreno (TM) 306":31,"Adreno (TM) 308":38,"Adreno (TM) 320":45,"Adreno (TM) 330":55,"Adreno (TM) 405":50,"Adreno (TM) 418":55,"Adreno (TM) 420":56,"Adreno (TM) 430":57,"Adreno (TM) 504":60,"Adreno (TM) 505":61,"Adreno (TM) 506":62,"Adreno (TM) 508":63,"Adreno (TM) 509":64,"Adreno (TM) 510":75,"Adreno (TM) 512":76,"Adreno (TM) 530":85,"Adreno (TM) 540":85,"Adreno (TM) 610":90,"Adreno (TM) 612":92,"Adreno (TM) 615":94,"Adreno (TM) 616":96,"Adreno (TM) 618":98,"Adreno (TM) 619":90,"Adreno (TM) 620":100,"Adreno (TM) 630":105,"Adreno (TM) 640":110,"Adreno (TM) 650":115,"Mali-400 MP":15,"Mali-400 MP2":18,"Mali-450 MP":27,"Mali-G31":40,"Mali-G51":60,"Mali-G52":65,"Mali-G52 MC1":66,"Mali-G52 MC2":66,"Mali-G57":75,"Mali-G71":86,"Mali-G71 MP2":86,"Mali-G72":93,"Mali-G72 MP3":93,"Mali-G76":96,"Mali-G76 MC4":96,"Mali-G77":111,"Mali-G78":131,"Mali-T604":31,"Mali-T624":32,"Mali-T628":46,"Mali-T720":32,"Mali-T760":35,"Mali-T820":43,"Mali-T830":45,"Mali-T860":51,"Mali-T880":53,"Mali-TNAX":51,"Mesa DRI Intel(R) HD Graphics 400 (Braswell)":70,"Mesa DRI Intel(R) HD Graphics 500 (Broxton 2x6)":77,"Mesa DRI Intel(R) HD Graphics 505 (Broxton)":82,"Mesa DRI Intel(R) HD Graphics 605 (Broxton)":86,"Mesa DRI Intel(R) HD Graphics 615 (Kaby Lake GT2)":90,"Mesa DRI Intel(R) UHD Graphics 600 (Geminilake 2x6)":107,"Mesa DRI Intel(R) UHD Graphics 605 (Geminilake)":108,"Mesa DRI Intel(R) UHD Graphics 620 (Kabylake GT2)":115,"PowerVR Rogue G6200":51,"PowerVR Rogue G6430":55,"PowerVR Rogue GE8100":32,"PowerVR Rogue GE8300":44,"PowerVR Rogue GE8320":45,"PowerVR Rogue GE8322":45,"PowerVR Rogue GM9446":82,"PowerVR Rogue GT7400 Plus":74,"PowerVR Rogue GT7600 Plus":94,"PowerVR Rogue GX6250":38,"PowerVR Rogue GX6450":66,"PowerVR SGX 540":28,"PowerVR SGX 544":33,"PowerVR SGX 544MP":34,"PowerVR SGX Auckland":34,"PowerVR SGX Clark":36,"PowerVR SGX Doma":36,"PowerVR SGX Lorne":36,"Vivante GC7000UL":25,"iPad5,1":30,"iPad5,2":30,"iPad5,3":30,"iPad6,1":50,"iPad6,2":50,"iPad6,3":50,"iPad6,4":50,"iPad6,5":50,"iPad6,6":50,"iPad6,7":50,"iPad6,8":50,"iPad6,9":50,"iPad6,10":50,"iPad6,11":50,"iPad6,12":50,"iPad7,1":70,"iPad7,2":70,"iPad7,3":70,"iPad7,4":70,"iPad7,5":70,"iPad7,6":70,"iPad7,7":70,"iPad7,8":70,"iPad7,9":70,"iPad7,10":70,"iPad7,11":70,"iPad7,12":70,"iPhone6,1":30,"iPhone6,2":30,"iPhone7,1":50,"iPhone7,2":50,"iPhone8,1":70,"iPhone8,2":70,"iPhone8,4":70,"iPhone9,1":80,"iPhone9,2":80,"iPhone9,3":80,"iPhone9,4":80,"iPhone10,1":90,"iPhone10,2":90,"iPhone10,3":90,"iPhone10,4":90,"iPhone10,5":90,"iPhone10,6":90,"iPhone11,2":100,"iPhone11,4":100,"iPhone11,6":100,"iPhone11,8":100,"iPhone12,1":110,"iPhone12,3":110,"iPhone12,5":110,"iPhone12,8":110,"iPhone13,1":120,"iPhone13,2":120,"iPhone13,3":120,"iPhone13,4":120}');var s=i(63216);let l;function c(e){return function(e){return Object.values(l).includes(e)}(e)&&e!==l.UNDEFINED}!function(e){e.LOW="low",e.MID="mid",e.HIGH="high",e.UNDEFINED="undefined"}(l||(l={}));class h{gpuLevel=l.UNDEFINED;memoryLevel=l.UNDEFINED;assetQualityLevel=l.UNDEFINED;mapQualityLevel=l.UNDEFINED;constructor(e){this.webGLState=e.webGLState,this.isNativeApp=e.isNativeApp,this.config=e.config??{},this.bounds=e.bounds??{}}getGPULevel(){return this.gpuLevel===l.UNDEFINED&&(this.gpuLevel=this.determineGPULevel()),this.gpuLevel}determineGPULevel(){var e;if(null!==(e=this.webGLState)&&void 0!==e&&e.majorPerformanceCaveat)return l.LOW;const t=this.getUserPreferredGPULevel()??l.UNDEFINED;if(t!==l.UNDEFINED)return t;const i=this.getPredeterminedGPULevel();return i||this.getAutoDeterminedGPULevel()}getPredeterminedGPULevel(){const{gpuLevel:e}=this.config;return c(e)?e:null}getAutoDeterminedGPULevel(){var e;const t=(o.S.isiOSApp()?o.S.getDeviceIdentifier():void 0)??(null===(e=this.webGLState)||void 0===e?void 0:e.rendererString)??"unknown_gpu",i=this.bounds.gpu;return i?this.classifyGPU(t,a,i):l.HIGH}getUserPreferredGPULevel(){const e=r.P.getString(n.F.USER_PREFERRED_GPU_MODE);return c(e)?e:null}setUserPreferredGPULevel(e){e&&e!==l.UNDEFINED?r.P.set(n.F.USER_PREFERRED_GPU_MODE,e):r.P.removeItem(n.F.USER_PREFERRED_GPU_MODE)}classifyGPU(e,t,i){const n=t[e];if(!n)return this.isNativeApp?l.MID:l.HIGH;const[r]=i.find((e=>{let[,t]=e;return n<t}))??[l.HIGH];return r}getMemoryLevel(){return this.memoryLevel===l.UNDEFINED&&(this.memoryLevel=this.calcMemoryLevel()),this.memoryLevel}calcMemoryLevel(){var e;if(null!==(e=this.webGLState)&&void 0!==e&&e.majorPerformanceCaveat)return l.LOW;if(!this.hasPlatformMemoryInfo())return l.HIGH;let t=0,i=l.HIGH;if(navigator.deviceMemory?(t=1e3*navigator.deviceMemory,t*=.6):o.S.isAndroidApp()?t=Number(s.J.getAvailableMemory()):o.S.isiOSApp()&&(t=Number(s.J.getPhysicalMemory()),Number.isFinite(t)?t*=.6:t=0),t>0){const e=this.bounds.memory;if(e){const n=e.find((e=>{let[,i]=e;return t<i}));n&&([i]=n)}}else i=l.LOW;return i}hasPlatformMemoryInfo(){return!!navigator.deviceMemory||this.isNativeApp}getAssetQualityLevel(){var e;if(this.assetQualityLevel===l.UNDEFINED)if(null!==(e=this.webGLState)&&void 0!==e&&e.majorPerformanceCaveat)this.assetQualityLevel=l.LOW;else{const{assetQualityLevel:e}=this.config;this.assetQualityLevel=c(e)?e:this.getMemoryLevel()}return this.assetQualityLevel}getMapQualityLevel(){var e;if(this.mapQualityLevel===l.UNDEFINED)if(null!==(e=this.webGLState)&&void 0!==e&&e.majorPerformanceCaveat)this.mapQualityLevel=l.LOW;else{const{mapQualityLevel:e}=this.config;this.mapQualityLevel=c(e)?e:this.getGPULevel()}return this.mapQualityLevel}}},89813:(e,t,i)=>{i.d(t,{e:()=>n});class n{armyStacks={}}},48470:(e,t,i)=>{i.d(t,{D:()=>je});i(5741),i(19202),i(37554),i(92967);var n=i(32515),r=i(72243),o=i(72342),a=i(89725),s=i(28388),l=i(37025),c=i(84300),h=i(18498),d=i(55975),u=i(53754),f=i(74023),m=i(9166),g=i(84232),p=i(58375),v=i(67585),x=i(42342),S=i(26027),y=i(9377),_=i(9364),w=i(57885),b=i(91451),C=i(69165),P=i(99083),M=i(2058),A=i(25526),T=i(44771),L=i(32893),D=i(91776),I=i(65880);i(49573),i(29396);class E{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new Set;this.lineSystem=e,this.linesDrawn=t}drawLocationBorders(e,t,i){if(!e.borders)return;const n=e.getBorderSegments(),r=e.getBorder();for(const o of n)t(0,o.borderType,e)&&this.drawBorderSegment(r,o.start,o.end,i);for(let o=1;o<e.borders.length;++o)if(t(o,-1,e)){const t=e.borders[o];this.lineSystem.lineStrip(t,0,t.length+1,{color:i})}}drawBorderSegment(e,t,i,n){const r=new o.nK(e,t,i+1),a=r.at(0),s=r.at(r.length-1),l=(0,o.O9)(...a,...s)^i-t;this.linesDrawn.has(l)||(this.lineSystem.lineStrip(e,t,i+1,{color:n}),this.linesDrawn.add(l))}drawLine(e,t,i){const n=(0,o.ht)(e,t);this.linesDrawn.has(n)||(this.lineSystem.line(e,t,{color:i}),this.linesDrawn.add(n))}}var R=i(28942),U=i(9892);class N{cellSize=16;searchRadius=48;rndSpread=.71317;originConstrain=.03;maxUnitStrength=40;maxDistance=100;strengthUnitFactor=.5;defaultOffset=new u.F(2,1);maxNewArmyCount=16;initialSimulationSteps=64;simulationSteps=8;currentSimulationStep=0;armyCount=0;oldArmyCount=0;initialState=!1;fullSimulationState=!1;collisionMap=new Map;entryMap=new Map;insertedArmies=[];newArmies=[];armyPainter=null;constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.widthIC=Math.floor(e/this.cellSize),this.defaultStrengthCity=t.defaultStrengthCity??10,this.defaultStrengthUnit=t.defaultStrengthUnit??10,this.defaultStrengthPusher=t.defaultStrengthPusher??44}init(e,t,i){let n=0;this.newArmies=[],this.collisionMap=new Map,this.armyPainter=i;const r=t.getProvinceArray(),o=new u.F,a=new u.F,s=new u.F;for(let h=0;h<r.length;++h){const e=r[h],i=e.getCapital(),n=this.hashFunction(i.x,i.y);this.insert(n,new u.F(i.x,i.y),this.defaultStrengthCity,-1);const l=e.getConnections();for(let r=0;r<l.length;++r){const e=l[r];if(e.x1===i.x&&e.y1===i.y)o.set(e.x0,e.y0),a.set(e.x1,e.y1);else{if(e.x0!==i.x||e.y0!==i.y)continue;o.set(e.x1,e.y1),a.set(e.x0,e.y0)}a.sub(o),a.normalize(),s.copy(o),s.sub(a);if(!t.getProvinceAt(s)){o.addScaledVector(a,4);const e=this.hashFunction(o.x,o.y);this.insert(e,new u.F(o.x,o.y),this.defaultStrengthPusher,-2)}}}let l;const c=new u.F;for(let h=0;h<e.length;++h){const t=e[h],i=t.getArmyID(),r=this.getArmyPosition(t),o=this.hashFunction(r.x,r.y);this.entryMap.has(i)?(l=this.entryMap.get(i).position,c.subVectors(r,l),c.length()>this.maxDistance&&(l=new u.F(r.x+this.defaultOffset.x,r.y+this.defaultOffset.y),this.newArmies.push(t))):(l=new u.F(r.x+this.defaultOffset.x,r.y+this.defaultOffset.y),this.newArmies.push(t),++n);const a=Math.min(this.defaultStrengthUnit+t.getStrength()*this.strengthUnitFactor,this.maxUnitStrength),s=t.isFlying()?-1:h;this.insert(o,l,a,s),this.entryMap.set(i,this.collisionMap.get(o))}this.fullSimulationState=this.newArmies.length>0,n>this.maxNewArmyCount?(console.log(`LayoutSystem: reinit due to ${n} new armies!`),this.fullSimulationState=!0,this.initialState=!0):this.initialState=!1,this.insertedArmies=e,this.armyCount=e.length,this.currentSimulationStep=0}insert(e,t,i,n){const r=this.collisionMap.get(e);this.collisionMap.set(e,{position:t,strength:i,index:n,next:r})}simulationManager(){if(this.fullSimulationState){const e=this.initialState?this.insertedArmies:this.newArmies;for(let t=0;t<this.initialSimulationSteps;++t)this.simulate(e);return this.fullSimulationState=!1,!0}return this.currentSimulationStep<this.simulationSteps&&this.simulate(this.insertedArmies),++this.currentSimulationStep,this.currentSimulationStep===this.simulationSteps}getEntry(e){return this.entryMap.get(e.getArmyID())}simulate(e){if(!e)return;const t=new u.F,i=new u.F;for(let n=0;n<e.length;++n){const r=e[n],o=r.getArmyID(),a=this.entryMap.get(o);if(!a)continue;const s=this.getArmyPosition(r),l=this.getNeighbours(s.x,s.y);for(let e=0;e<l.length;++e){let i=l[e];do{if(a.index!==i.index){if(!r.isOnSea()&&-2===i.index){i=i.next;continue}t.subVectors(a.position,i.position);const e=t.length(),n=a.strength+i.strength;if(e<.1){const e=a.index*this.rndSpread;t.set(Math.sin(e),Math.cos(e)),a.position.add(t)}else e<n&&(t.normalize(),a.position.add(t.multiplyScalar(1-e/n)))}i=i.next}while(i)}i.set(s.x,s.y),t.subVectors(i,a.position);const c=t.length()/this.maxDistance;a.position.addScaledVector(t,c*this.originConstrain)}}getNeighbours(e,t){const i=[],n=e+this.searchRadius,r=t+this.searchRadius;for(let o=Math.max(t-this.searchRadius,0);o<=r;o+=this.cellSize)for(let t=Math.max(e-this.searchRadius,0);t<=n;t+=this.cellSize){const e=this.hashFunction(t,o),n=this.collisionMap.get(e);n&&i.push(n)}return i}hashFunction(e,t){return Math.floor(t/this.cellSize)*this.widthIC+Math.floor(e/this.cellSize)}getArmyPosition(e){let t=e.getPosition();if(e.isFlying()){var i;const n=null===(i=this.armyPainter)||void 0===i?void 0:i.getScreenAirPosition(e);n&&({pos:t}=n)}return new u.F(t.x,t.y)}}i(53703);var B=i(64292),F=i(5777),O=i(49209),z=i(11055),k=i(88139),V=i(88517),G=i(68395),H=i(99536),W=i(23942);class X{static defaultPaintStyle={arrowFillColor:new o.Zm(.7843,.0784,.0784,.2),arrowFillTargeting:new o.Zm(.7843,.0784,.0784,.5),arrowStrokeColor:new o.Zm(.1961,.0196,.0196,.4),ballColor:new o.Zm(0,0,0,1),ballSize:3,frameDuration:40,animationInterval:250,minAnimationLength:200,paintArrow:!0,paintArrowHl:!0};static airplanePaintStyle={friendlyAirspaceColor:new o.Zm(.0784,.0392,.902,.06),enemyAirspaceColor:new o.Zm(.8627,.0784,.0392,.06),airCorridorFillStyle:new o.Zm(.6078,1,.6078,.2),airCorridorStrokeStyle:new o.Zm(.6078,1,.6078,.5),attackColor:new o.Zm(.5882,.0784,.3922,.4),attackColorHl:new o.Zm(.6863,.098,.4314,.47),patrolBorderColor:new o.Zm(.1176,.0196,.1176,.4),patrolColor:new o.Zm(.1176,.0784,.5882,.3),patrolColorHl:new o.Zm(.1373,.098,.6667,.47),shadowColor:new o.Zm(.1,.1,.2,.2),relocationColor:new o.Zm(0,.8,0,.3),relocationColorHl:new o.Zm(0,1,0,.5),airplaneIconSize:13,bomberIconSize:16,frameDuration:500,angles:32,drawShadows:!0,paintArrow:!0,paintArrowHl:!0,trajectoryHeight:20};static ww2AirplanePaintStyle={...X.airplanePaintStyle,paintArrow:!1,paintArrowRelocating:!1,friendlyAirspaceColor:new o.Zm(.0784,.0392,.902,.2),enemyAirspaceColor:new o.Zm(.0784,.0392,.902,.2)}}const j=0,Y=1,q=2,Z=4,$=5,K=6;class J{isResourceContainer=!0;playerId;armySelection;gameInfoState;size=1;maxLines;maxBullets;maxQuads;maxUnits=1024;airCorridorDegrees;config;unit=null;army=null;unitPos=null;attackedArmy=null;highlighted=!1;targeting=!1;command=null;kind=j;defaultPaintStyles;airplanePaintStyle;WW2AirplanePaintStyle;paintStyle=null;airPos={framePos:0,pos:new B.E,lastPos:new B.E,angle:0,height:0,shadowAngle:0,shadowYPos:0};circleAM;stencilLines=null;quads=null;bullets=null;areas=null;bulletsInfo=[];scalers=[];doubleArrows=new Set;constructor(e){this.playerId=e.playerId,this.armySelection=e.armySelection,this.gameInfoState=e.gameInfoState,this.maxLines=e.maxLines,this.maxBullets=e.maxBullets,this.maxQuads=2*this.maxLines,this.airCorridorDegrees=e.airCorridorDegrees??0,this.circleAM=e.circleAM,this.config=e.config,this.wrapX=e.wrapX,this.wrapDistanceX=e.wrapDistanceX,this.defaultPaintStyles=this.threeAttackPainterStyles.defaultPaintStyle,this.airplanePaintStyle=this.threeAttackPainterStyles.airplanePaintStyle,this.WW2AirplanePaintStyle=this.threeAttackPainterStyles.ww2AirplanePaintStyle;const{scene:t}=e;this.stencilLines=new r.eH(this.maxLines).init({scene:t,renderOrder:20,radius:4,lineWidth:1.6,repeat:.08,speed:400}),this.quads=new r.TO(this.maxQuads).init({scene:t,renderOrder:20}),this.bullets=new r.pc(this.maxBullets).init({scene:t,texture:e.circleTexture,renderOrder:20,color:this.defaultPaintStyles.ballColor});const i=this.config.armyPainter.armyScaleY??this.config.verticalScale;this.areas=new r.C(this.maxUnits).init({scene:t,atlasMapper:e.circleAM,verticalScale:1/i});const{scalersGlobal:n={}}=this.config,{scalers:o=[]}=this.config.armyPainter.attackPainter;this.scalers=o.map((e=>new U.G(this,{...n,...e})))}get threeAttackPainterStyles(){return X}update(e,t){this.size=1/t,this.stencilLines.setStencilStart(),this.scalers.forEach((i=>i.update(e,t)))}begin(){this.stencilLines.begin(),this.quads.begin(),this.areas.begin(),this.bulletsInfo=[],this.doubleArrows.clear()}end(){this.stencilLines.end(),this.quads.end(),this.areas.end()}renderBullets(e){this.bullets.begin();for(let i=0;i<this.bulletsInfo.length;++i){var t;this.unit=this.bulletsInfo[i].unit,this.configureForUnitType(null===(t=this.unit)||void 0===t?void 0:t.getUnitType()),this.unitPos=this.bulletsInfo[i].unitPos,this.paintStyle=this.bulletsInfo[i].paintStyle,this.paintBall(e,this.bulletsInfo[i].attackedPos)}this.bullets.end()}configureForUnitType(e){var t;switch(null==e?void 0:e.getAttackPainter()){case"UltArtilleryAttackPainter":this.kind=Y,this.paintStyle=this.defaultPaintStyles,this.paint=this.paintArtillery;break;case"Ww2ArtilleryAttackPainter":this.kind=$,this.paintStyle=this.defaultPaintStyles,this.paint=this.paintArtillery;break;case"UltBomberAttackPainter":case"UltAirplaneAttackPainter":case"Ww2AirplaneAttackPainter":this.kind=Z,this.paintStyle=this.WW2AirplanePaintStyle,this.paint=this.paintAirplane;break;case"UltRocketAttackPainter":this.kind=K,this.paintStyle=this.WW2AirplanePaintStyle,this.paint=this.paintAirplane;break;default:0===(null===(t=this.army)||void 0===t?void 0:t.unitCount)?(this.kind=j,this.paintStyle=this.defaultPaintStyles,this.paint=this.paintDefault):this.paintStyle=null}}paint(e){throw new Error("paint called without configuring the ThreeAttackPainter first!")}paintAttack(e,t,i,n,r,o){if(this.gameInfoState.getEndOfGame())return;const a=e.getVisibleUnits();if(this.army=e,this.unitPos=t,this.attackedArmy=i,this.highlighted=n,this.targeting=r,this.command=o,this.highlightedAndMe=n||e.getOwnerID()===this.playerId,a.length>0)for(let c=0;c<a.length;c++)if(this.unit=a[c],this.unit){var s,l;const e=this.unit.getUnitType()||this.army.getPaintedUnitType();this.configureForUnitType(e),(n&&null!==(s=this.paintStyle)&&void 0!==s&&s.paintArrowHl||null!==(l=this.paintStyle)&&void 0!==l&&l.paintArrow)&&this.paint(0===c)}}paintAirplane(e){if(!this.targeting&&!this.army.isFlying())return;if(this.army.removed)return;let t;if(t=null!=this.attackedArmy?this.attackedArmy instanceof F.ne?this.attackedArmy.getAirPosition():B.E.toPoint(this.attackedArmy):this.army.getAttackPosition(),t){if(t=t.getClosestEquivalent(this.unitPos),t=this.army.getClosestAirPosition(t,this.unitPos),!this.command&&this.targeting){const e=this.army.getCommands()[this.army.getCommands().length-1];(e instanceof V.f||e instanceof O.l||e instanceof H.V)&&(this.command=e)}let i,n,r,o;this.command?this.command instanceof V.f?(i=!0,n=this.command.isApproaching(),r=this.command.isRelocation()):(i=!1,r=!1,o=this.command instanceof H.V&&this.command.isReturning(),n=this.command instanceof O.l):(i=this.targeting?this.army.getCommands()[this.army.getCommands().length-1]instanceof V.f:this.army.isPatrolling(),n=!i||this.army.getFightStatus()===F.hN.APPROACH_PATROL,r=this.army.isRelocating(),o=this.army.isAirplaneReturning()),e&&this.highlighted&&!this.army.isAirplaneReturning()&&this.paintAirCorridor();const a=this.army.getOwnerID()===this.playerId;if(this.shouldPaintPatrollingCircle(e,i,r,o,a,n)){const e=this.army.getMinAirViewWidth();if(e>0){const i=this.circleAM.getMapping("circle"),n=Math.min(i.width,i.height);this.areas.billboard({image:i,position:t,size:2*e/n,color:this.paintStyle[a?"friendlyAirspaceColor":"enemyAirspaceColor"]})}}const s=this.paintStyle.patrolBorderColor;let l;if(l=this.highlighted?r||o?this.paintStyle.relocationColorHl:i?this.paintStyle.patrolColorHl:this.paintStyle.attackColorHl:r||o?this.paintStyle.relocationColor:i?this.paintStyle.patrolColor:this.paintStyle.attackColor,this.shouldPaintAirArrow(a,r)){let e,n,a,c=this.unitPos;this.targeting&&this.highlighted&&!this.army.isRocket()&&this.army.getPosition().equals(this.unitPos)&&(e=this.army.getAirPosition(),this.army.isInAirCorridor(t)&&(c=e)),this.army.isAirplaneReturning()&&!this.attackedArmy&&(r||o||i)?(n=this.army.getDrawPosition(),a=c):(n=c,a=t),this.paintArrow(n,a,l,s,this.paintStyle.shadowColor)}}}shouldPaintAirArrow(e,t){return e&&this.paintStyle.paintArrow||this.highlighted&&this.paintStyle.paintArrowHl||t&&this.paintStyle.paintArrowRelocating}paintAirCorridor(){if(this.airCorridorDegrees<=0||!this.army.isFlying())return;const e=this.army.getPosition(),t=this.airCorridorDegrees*Math.PI/180;let i=.5*Math.PI-this.army.getLaunchAngle()-t;const n=this.army.getAirRange(),r=Math.floor(t*n/4),o=new u.F(e.x,e.y),a=2*t/r;for(let s=0;s<r;++s){const e=new u.F(o.x+Math.sin(i)*n,o.y+Math.cos(i)*n),t=new u.F(o.x+Math.sin(i+a)*n,o.y+Math.cos(i+a)*n);this.quads.quad(o,o,e,t,this.paintStyle.airCorridorFillStyle),i+=a}}updateAirplanePosition(e,t,i,n,r){const o=this.airPos,a=this.gameInfoState.getClientTime(),s=this.gameInfoState.getTimeScale(),l=Math.max(0,Math.min(1,this.getFramePosition(e,a))),c=this.config.armyPainter;this.army=e,this.configureForUnitType(e.getPaintedUnitType()),o.framePos=l,o.shadowYPos=0,o.height=0,o.lastPos.x=o.pos.x,o.lastPos.y=o.pos.y,o.angle=0;const h=e.isAirplaneReturning();if(n||h||!i){let n,r;i||(i=t),h?(n=e.getLastAirPosition(),r=t):e?(n=e.getLastAirPosition(),r=i):(n=t,r=i),this.normalizeMapPosition(n),this.normalizeMapPosition(r);const a=this.getDistance(n,r);o.pos.x=this.getBallX(l,1,n.x,r.x),e.isRocket()?o.pos.y=this.getBallY(a,l,1,n.y,r.y):(o.pos.y=this.getBallY(0,l,1,n.y,r.y),o.pos.y-=c.warpedAirHeight),o.shadowYPos=this.getBallY(0,l,1,n.y,r.y),o.height=o.shadowYPos-o.pos.y,o.angle=Math.atan2(this.getDistanceX(r.x,n.x),r.y-n.y)+Math.PI}else{const t=8*l*s+r;o.angle=this.getPatrolAngle(t),o.shadowAngle=o.angle;const[n,a]=this.getPatrolPos(e,null,i,o.angle);o.pos.x=n,o.pos.y=a-.5*c.warpedAirHeight,o.height=c.warpedAirHeight,o.framePos=.5}const d=r,u=a*s;return o.pos.x+=.2*(Math.sin(.0011*u+d)+Math.sin(.0025*u+d)),o.pos.y+=.5*(Math.sin(.0015*u+d)+Math.sin(.0021*u+d)),o}getFramePosition(e,t){return Math.max(0,1-(e.getNextAttackTime()-t)/(e.getNextAttackTime()-e.getLastAttackTime()))}getPatrolAngle(e){return e*Math.PI*2}getPatrolPos(e,t,i,n){let r;return r=t?t.getAirViewWidth():e.getMinAirViewWidth(),[i.x-r*Math.cos(n)*.75,i.y-r*Math.sin(n)*.75]}paintArtillery(){if(this.targeting||this.army.getFightStatus()===F.hN.BOMBARDING){let e;if(e=null!=this.attackedArmy?this.attackedArmy instanceof F.ne?this.attackedArmy.getPosition():this.attackedArmy:this.army.getAttackPosition(),e=B.E.toPoint(e),null!==e&&this.isInRage(e)){let t;if(e=e.getClosestEquivalent(this.unitPos),this.shouldPaintArtilleryArrow()&&(t=this.targeting?this.paintStyle.arrowFillTargeting:this.paintStyle.arrowFillColor,this.paintArrow(this.unitPos,e,t,this.paintStyle.arrowStrokeColor)),this.army.isBombarding()){const t={};t.unit=this.unit,t.unitPos=this.unitPos,t.paintStyle=this.paintStyle,t.attackedPos=e,this.bulletsInfo.push(t)}}}}shouldPaintArtilleryArrow(){let{paintArrow:e}=this.paintStyle;return e|=this.army.getOwnerID()===this.playerId&&this.paintStyle.paintArrowHl,e|=this.attackedArmy&&this.attackedArmy instanceof F.ne&&this.attackedArmy.getOwnerID()===this.playerId&&this.armySelection.isHighlighted(this.attackedArmy)&&this.army.hasAttackOrders(),e}shouldPaintPatrollingCircle(e,t,i,n,r,o){return e&&t&&!i&&(this.highlighted&&!n||r&&!o||this.targeting)}paintDefault(){if(this.army.isBombarding()){let e;if(null!=this.attackedArmy){if(null==this.attackedArmy.getPosition)return;e=this.attackedArmy.getPosition()}else e=this.army.getAttackPosition();if(null!==e&&this.paintArrow(this.unitPos,e,this.paintStyle.arrowFillColor,this.paintStyle.arrowStrokeColor),!this.targeting){const t={};t.unit=this.unit,t.unitPos=this.unitPos,t.paintStyle=this.paintStyle,t.attackedPos=e,this.bulletsInfo.push(t)}}}getAirplaneHeight(e,t,i){let n=this.getBallHeight(e,t);return window.Number.isFinite(Number.parseFloat(i))&&(n+=1.5*Math.sin(20*t+2*i)),n}getBallX(e,t,i,n){return i+this.getDistanceX(i,n)*this.framePos(e,t)}getTrajectoryHeight(){return this.kind===K?200:30}framePos(e,t){return e/t}getBallHeight(e,t){if(this.kind===q){let i=15,n=1;return this.army.isRefueling()?t>.9&&(n=Math.max(0,(1-t)/.1)):t<.1&&this.army.getFightStatus()!==F.hN.PATROLING&&(n=t/.1),i*=n,Math.max(0,i*e)}const i=e*this.getTrajectoryHeight(),n=1-2*t;return-n*n*i+i}getBallY(e,t,i,n,r){const o=this.framePos(t,i);let a=1*n+(r-n)*o;return a-=this.getBallHeight(e,o),a}paintArrow(e,t,i,n,r){if(null==t||null==e||t.x===e.x&&t.y===e.y)return;const o=e=>`${Math.floor(e.x)}-${Math.floor(e.y)}`,a=`${o(t=t.getClosestEquivalent(e))}-${o(e)}`;if(this.doubleArrows.has(a))return;this.doubleArrows.add(a);const s=t.x,l=t.y,c=e.x,h=e.y,d=this.getDistance(e,t),f=250;let m,g;const p=this.getBallY(d,247,f,h,l),v=this.getBallX(3,f,c,s),x=this.getBallY(d,3,f,h,l),S=Math.abs(p-x)>40?0:5,y=new u.F,_=new u.F,w=new u.F,b=new u.F;y.set(v+4,x-S),_.set(v-4,x);const C=new u.F(v,x-S+4),P=new u.F(v,x-4),M=new u.F,A=new u.F,T=new u.F(s-c,l-h);this.stencilLines.setStencilColor(n,n);for(let u=0;u<=1;u+=.02){const e=3+244*u;m=this.getBallX(e,f,c,s),g=this.getBallY(d,e,f,h,l),w.set(m+4*(1-u),g-(1-u)*S),b.set(m-4*(1-u),g);const t=4*(1-u);w.set(m+t,g-(1-u)*S),b.set(m-t,g),this.stencilLines.line(y,w),this.stencilLines.line(_,b),this.quads.quad(y,w,_,b,i),y.copy(w),_.copy(b),r&&(M.set(c,h),M.addScaledVector(T,u),A.copy(M),M.y+=t,A.y-=t,this.quads.quad(C,M,P,A,r),C.copy(M),P.copy(A))}}getDistance(e,t){const i=new u.F(this.getDistanceX(e.x,t.x),t.y-e.y);return Math.min(i.length()/100,2)}getDistanceX(e,t){const i=t-e;return this.hasMapShortcut(e,t)?i<0?this.wrapDistanceX+i:i-this.wrapDistanceX:i}normalizeMapPosition(e){return e.x<0&&(e.x=this.wrapDistanceX+e.x),e}hasMapShortcut(e,t){if(!this.wrapX)return!1;const i=t-e;return Math.abs(i)>this.wrapDistanceX/2}paintBall(e,t){var i,n;const r=(null===(i=this.unit)||void 0===i?void 0:i.getSize())??1,o=(null===(n=this.unit)||void 0===n?void 0:n.getBaseStrength())>=3?2:1,{frameDuration:a}=this.paintStyle,l=this.unitPos.getDistance(t,!1),c=Math.round(Math.min(this.paintStyle.minAnimationLength,l+25));let h=Math.round(e/a+20*l),d=0;const u=new s.P;for(let s=r;s>0;--s){if(d=h%this.paintStyle.animationInterval,d<c&&null!=this.unitPos&&d>3){let e=this.getBallX(d,c,this.unitPos.x,t.x),i=this.getBallY(1,d,c,this.unitPos.y,t.y);for(let t=o;t>0;--t)u.x=e,u.y=i,u.z=this.paintStyle.ballSize,this.bullets.emit(u),e+=5*(1-1*d/c),i+=1*d/c*4}h-=20-s%3*5}}isInRage(e){if(null!==e&&null!==this.unitPos&&e.getDistance){const t=e.getDistance(this.unitPos);return(t<5||t<this.unit.getUnitType().getRange(this.army.getTerrain()))&&t>this.getMinRange()}return!1}getMinRange(){return 0}dispose(){this.scalers.length=0,(0,o.ID)(this)}}var Q=i(69430),ee=i(36882),te=i(11267),ie=i(15806);class ne{isResourceContainer=!0;assetManager;layoutSystem;gameState;armyController;armySelection;playerId;mouseController;airCorridorDegrees;attackInterval;config;frequency;unitAtlasMapName="main";commandSLS;positionSLS;armiesBS;selectArmiesBS;glowsBS;attackTimerBS;gasRangeCS;circleCS;destinationCircleCS;attackPainter;hoveredUnitItemID=-1;armyStack;iconTypes={moving:"move",flying:"air",shadow:"shadow",attack:"attack"};scalers=[];pendingImages=0;needsRedraw=!1;complete=new P.m(!1);get isLoading(){return this.pendingImages>0}segmentHash=new Set;wrapX;wrapDistanceX;constructor(e){this.assetManager=e.assetManager,this.layoutSystem=e.layoutSystem,this.gameState=e.gameState,this.armyController=e.armyController,this.armySelection=e.armySelection,this.playerId=Number(e.playerId),this.commandWithMultipleHandling=e.commandWithMultipleHandling,this.mouseController=e.mouseController,this.attackInterval=e.attackInterval,this.airCorridorDegrees=e.airCorridorDegrees??0,this.config=e.config,this.frequency=e.frequency,this.unitImageUsageTracker=e.unitImageUsageTracker,this.flagImageCache=e.flagImageCache,this.digitFont=e.digitFont;const{assets:t}=e,i=t.atlas("main"),n=t.atlas(this.unitAtlasMapName),{mapElementsRenderOrder:o,verticalScale:a}=this.config,s=50*this.frequency,{scene:l,selectionScene:c,frameScene:h,glowScene:d}=e;this.wrapX=e.wrapX,this.wrapDistanceX=e.wrapDistanceX,this._initCommandLineSystems(l,i);const u=this.config.armyPainter.positionIndicator;this.positionSLS=new r.eH(this.allocationConfig.maxPositionLineCount).init({scene:l,renderOrder:o.positionLines,radius:8,lineWidth:u.lineWidth??1,repeat:u.dashRepeat??1,speed:u.animationSpeed??100}),this.positionSLS.setStencilColor(u.color??"#fff",u.secondaryColor??"#000"),this.armiesBS=new r.C(this.getSystemCount("armiesBS")).init({scene:h,atlasMapper:n,mode:r.bv.normal,renderOrder:o.armies+s,materialParameters:{depthTest:!0},verticalScale:a});const f=this.config.boxSelection?r.bv.boxSelection:r.bv.pixelSelection;this.selectArmiesBS=new r.C(this.getSystemCount("selectArmiesBS")).init({scene:c,atlasMapper:n,mode:f,renderOrder:o.selectedArmies,verticalScale:a});const m=this.frequency?this.getSystemCount("airArmiesBS"):1;this.airArmiesBS=new r.C(m).init({scene:h,atlasMapper:n,renderOrder:o.airArmies+s,verticalScale:a}),this.config.paintArmyGlow&&(this.glowsBS=new r.C(this.getSystemCount("glowsBS")).init({scene:d,atlasMapper:n,mode:r.bv.normal,verticalScale:a})),this.attackTimerBS=new r.C(this.getSystemCount("attackTimerBS")).init({scene:h,atlasMapper:i,mode:r.bv.gradient,renderOrder:o.attackTimer+s,materialParameters:{depthTest:!0},verticalScale:a}),this.initAttackPainter(l,e.circleTexture,e.circleAM);const{armyScaleY:g=1}=this.config.armyPainter;this.allocationConfig.maxGasRangeQuadCount&&(this.gasRangeCS=new r.P1(this.allocationConfig.maxGasRangeQuadCount).init({scene:l,texture:t.texture("gas_range"),renderOrder:9,verticalScale:g})),this.circleCS=new r.P1(this.allocationConfig.maxCircleQuadCount).init({scene:l,texture:t.texture("range"),renderOrder:9,verticalScale:g}),this.destinationCircleCS=new r.P1(this.allocationConfig.maxCircleQuadCount).init({scene:l,texture:t.texture("range_destination"),renderOrder:9,verticalScale:g}),this.initArmyStack(e),b.EventBus.subscribe(te.q.UI_ON_UNIT_HOVER,(e=>this.armyBarHoveredUnit(e)));const{scalersGlobal:p={}}=this.config,{scalers:v=[]}=this.config.armyPainter;this.scalers=v.map((e=>new U.G(this,{...p,...e})))}getSystemCount(e,t){let i=this.allocationConfig.maxUnitCount;const n=this.config.armyPainterSystemCountMultiplier;if(n&&n[e]){i*=void 0===t?n[e]:n[e][t]}else console.log(`getSystemCount - no system found: ${e} `);return i}initArmyStack(e){const t=e.threeConfig.armyStacks[e.armyStackName],i=this.config.armyPainter.armyStack[e.armyStackName],n={assets:e.assets,scene:e.scene,selectionScene:e.selectionScene,frameScene:e.frameScene,digitFont:e.digitFont,flagImageCache:e.flagImageCache,gameState:e.gameState,frequency:e.frequency,playerId:e.playerId,alliances:e.alliances,unitTypeVisibilityMap:e.unitTypeVisibilityMap,armyStatusVisibilityMap:e.armyStatusVisibilityMap},r={armyPainter:e.config.armyPainter,classIconSize:e.config.classIconSize,defaultIconClass:this.config.armyPainter.defaultUnitClass,drawStackArrow:e.config.drawStackArrow,globalScale:e.config.verticalScale,hasDetailedClassIcons:e.config.hasDetailedClassIcons,healthBars:e.config.healthBars,maxCount:this.allocationConfig.maxUnitCount,maxDigitCount:this.allocationConfig.maxUnitCount,paintClasses:e.config.armyPainter.paintClasses,renderOrder:e.config.mapElementsRenderOrder.armyStack,scalersGlobal:e.config.scalersGlobal,stackStageCount:e.config.armyPainter.stackStageCount,smallArmyStack:e.config.smallArmyStack,uniformColors:e.config.uniformColors,zFar:e.config.zFar,zOffset:100*e.frequency,attackInterval:e.attackInterval,patrolInterval:e.patrolInterval,...i};this.armyStack=new t(n,r)}initAttackPainter(e,t,i){this.attackPainter=new J({scene:e,circleTexture:t,circleAM:i,playerId:this.playerId,armySelection:this.armySelection,gameInfoState:this.gameState.getGameInfoState(),maxLines:this.allocationConfig.maxArrrowLineCount,maxBullets:this.allocationConfig.maxBulletCount,airCorridorDegrees:this.airCorridorDegrees,config:this.config,wrapX:this.wrapX,wrapDistanceX:this.wrapDistanceX})}get allocationConfig(){return this.config.allocations.armyPainter[this.frequency]}armyBarHoveredUnit(e){this.hoveredUnitItemID=e.data.hovered?e.data.unitItemID:-1}getCommandTypes(){return["move","patrol","attack","forcedMarch","attackForcedMarch","wait"]}_initCommandLineSystems(e,t){var i=this;const n="Missing render config key: three.armyPainter.commandPath",a=this.config.armyPainter.commandPath;a||window.onException(new Error(n));const s=this.getCommandTypes(),l=["select","active","focus"];this.commandSLS=new r.eH(this.allocationConfig.maxCommandLineCount).init({scene:e,renderOrder:4+this.frequency,radius:8,outline:a.outlineSize}),this.commandArrowBS=new r.C(this.allocationConfig.maxCommandLineCount).init({scene:e,atlasMapper:t,mode:r.bv.normal,renderOrder:4+this.frequency,materialParameters:{depthTest:!0}}),this.commandPainters={};const c=a.default??{},h=new u.F(0,0),d=new o.Zm(1,1,1,1);s.forEach((e=>{const t=a[e];t?(this.commandPainters[e]={},l.forEach((r=>{const s=t[r];s||window.onException(new Error(`${n}.${e}.${r}`));const l={},f=s.lineWidth??c.lineWidth??1,m=s.color??c.color??d,g=s.secondaryColor??c.secondaryColor??m,p=s.dashRepeat??c.dashRepeat??1,v=s.animationSpeed??c.animationSpeed??100;l.setup="country"===m?e=>{let t;"country"===g?(t=new o.Zm(e),t.multiplyScalar(.3),t.a=1):t=g,this.commandSLS.setStencilStart(),this.commandSLS.setLineWidth(f),this.commandSLS.setStencilColor(e,t),this.commandSLS.setStencilRepeat(p),this.commandSLS.setStencilSpeed(v)}:()=>{this.commandSLS.setStencilStart(),this.commandSLS.setLineWidth(f),this.commandSLS.setStencilColor(m,g),this.commandSLS.setStencilRepeat(p),this.commandSLS.setStencilSpeed(v)},l.segment=function(){const e=t.animScale??1;for(var n=arguments.length,r=new Array(n),o=0;o<n;o++)r[o]=arguments[o];i.commandSLS.line(...r,e)};let x=!0;var S;a.drawArrow&&(x=(null===(S=a.allowedIconsForDrawArrowMode)||void 0===S?void 0:S.includes(s.icon??""))??!1);if(s.icon&&x){const e=s.iconOffset??c.iconOffset??(()=>h),t=this.assetManager.manifest.imageMetadata(s.icon);if(void 0===t)throw new Error(`Command icon ${s.icon} unknown`);l.icon=function(n){let r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;const o=e(t);i.armiesBS.billboard({id:s.icon,position:n,offset:o,size:r})}}a.drawArrow&&(l.arrowHead=(e,t,i)=>{const n="command/arrowhead",r=Math.atan2(i.x,i.y)+Math.PI,a=new u.F(i.x,i.y);a.multiplyScalar(-22);const s="country"===m?t:new o.Zm(m);let l;"country"===g?(l=new o.Zm(s),l.multiplyScalar(.3),l.a=1):l=new o.Zm(g),this.commandArrowBS.billboard({id:n,position:e,offset:a,size:.7,rotation:r,color:l}),e.z+=20,this.commandArrowBS.billboard({id:n,position:e,offset:a,size:.5,rotation:r,color:s})}),this.commandPainters[e][r]=l}))):bl_print(`${n}.${e}`,"warn")}))}update(e,t,i){var n,r;this.allocationConfig.maxBulletCount&&this.attackPainter.renderBullets(e);for(let o=0;o<this.scalers.length;++o)this.scalers[o].update(t,i);null===(n=this.armyStack)||void 0===n||n.update(i,t),this.config.strategicView=(null===(r=this.armyStack)||void 0===r?void 0:r.strategicView)??0,this.commandSLS.updateTime(e),this.positionSLS.updateTime(e),this.attackPainter.update(t,i)}begin(){var e,t;this.armiesBS.begin(),this.selectArmiesBS.begin(),this.airArmiesBS.begin(),null===(e=this.glowsBS)||void 0===e||e.begin(),this.attackTimerBS.begin(),this.commandSLS.begin(),this.commandArrowBS.begin(),this.positionSLS.begin(),this.gasRangeCS&&this.gasRangeCS.begin(),this.circleCS.begin(),this.destinationCircleCS.begin(),this.attackPainter.begin(),null===(t=this.armyStack)||void 0===t||t.begin(),this.segmentHash.clear(),this.armyCount=0}end(){var e,t;this.armiesBS.end(),this.selectArmiesBS.end(),this.airArmiesBS.end(),null===(e=this.glowsBS)||void 0===e||e.end(),this.attackTimerBS.end(),this.commandSLS.end(),this.commandArrowBS.end(),this.positionSLS.end(),this.gasRangeCS&&this.gasRangeCS.end(),this.circleCS.end(),this.destinationCircleCS.end(),null===(t=this.armyStack)||void 0===t||t.end(),this.attackPainter.end();const i=0===this.pendingImages;this.complete.set(i),this.needsRedraw=!i}off(){this.begin(),this.end()}paintArmy(e,t,i){const n=this.config.armyPainter;e.posHack||(e.posHack={position:new s.P,screenPosition:new u.F,offset:new u.F,displacement:new u.F});const{position:r,screenPosition:a,offset:l,displacement:c}=e.posHack,h=this.armySelection.isHighlighted(e),d=this.armySelection.isSelected(e.getArmyID()),f=e.isFlying()?this.airArmiesBS:this.armiesBS;let m,g=1;if((e.getSize()<=0||e.getSpyRevealedTime()>0)&&(g=.7),e.isFlying())m=this.getScreenAirPosition(e,d),r.set(m.pos.x,m.pos.y),a.copy(r);else{r.set(t.x,t.y);const i=this.layoutSystem.getEntry(e);i?a.copy(i.position):a.copy(r)}c.subVectors(a,r),this.calculateStartingMove(e,r,a,c,m,d),e.isGasCloud()?(r.z=100-this.config.zFar,c.set(0,0)):r.z=this.getZPosition(r,c,this.getZOffset(e)),e.isFlying()||e.isGasCloud()||this.paintPositionLine(t,a),this.paintUnit(e,f,r,l,c,h||d,g,m),this.config.armyPainter.useDiamondArmyStacks||this.paintStatusIndicator(e,r,c,h,d);const p=n.paintSeaAnchor&&!e.isShip()&&e.isOnSea();if(p){const e=n.seaAnchorOffset();f.billboard({id:"icon_anchor",position:r,offset:e,displacement:c,size:1.5})}if(!this.config.armyPainter.useDiamondArmyStacks){if(!p&&e.getEffectiveAggressiveness()!==e.getDefaultAggressiveness()){const t=`warfare/mapicon_aggression_${e.getAggressiveness()}`,i=n.aggressionOffset();f.billboard({id:t,position:r,offset:i,displacement:c,size:1.5})}(h||d)&&0!==e.getSpyRevealedTime()&&f.billboard({id:"icon_spies",position:r,offset:n.spyOffset(),displacement:c,size:1.2,color:new o.Zm(1,1,1,.8)})}if(!e.isGasCloud()){const i=e.isFlying()?e.getClosestAirPosition(e.getAirPosition(),e.getPosition()):t,o=100+this.getZPosition(r,new u.F,this.getZOffset(e));f.billboard({id:h||d?"dot_selected":"dot",position:new s.P(i.x,i.y,o),size:n.positionDotScale??1.2})}this.paintCommandPath(e,e.getOwnerProfile().getPrimaryColor(),h||d,i),++this.armyCount}getScreenAirPosition(e){let t,i=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const n=e.getCommands(),r=n[n.length-1];t=r instanceof V.f&&e.getFightStatus()===F.hN.PATROLING?r.getTargetPos():e.getAttackPosition(),this.isOnCursor(e,i)&&(t=e.getAttackPosition());const o=e.getPosition(),a=!e.isPatrolling()||e.getFightStatus()===F.hN.APPROACH_PATROL;return this.attackPainter.updateAirplanePosition(e,o,t,a,this.getSelectionId(e))}isOnCursor(e,t){return this.mouseController.isDraggingArmy()&&this.armyController.isMovedArmy(e)||t&&this.armyController.hasCommand()}calculateStartingMove(e,t,i,n,r){let o,a=arguments.length>5&&void 0!==arguments[5]&&arguments[5];if(!e.isMoving()&&!e.isFlying())return;const s=e.getNextCommand();null!=s&&s.targetPos?({targetPos:o}=s):o=e.getAirPosition();const l="airtransport"===e.getPaintedUnitType().getIdentifier();if(e.isRocket()&&!l)return;if(!(!e.isPatrolling()||e.getFightStatus()===F.hN.APPROACH_PATROL))return;if(this.isOnCursor(e,a))return;let c,h;e.isFlying()?(t.add(n),n.set(0,0),c=e.getLastAirPosition(),h=e.getLastAttackTime()):e.isMoving()&&({startPos:c,starttime:h}=s);const d=this.gameState.getGameInfoState();let f=d.getClientTime()-h;const m=this.config.armyPainter;let g;if(f<=m.warpedMaxTime){const a=new u.F;a.subVectors(o,c),a.normalize(),e.isFlying()?(f=Math.min(f/m.warpedAirTime,1),g=(.5-.5*Math.cos(f*Math.PI))*m.warpedAirDistance,n.y-=this.calculateAirHeight(e,r)-m.warpedAirHeight):(f=Math.min(f/m.warpedMoveTime,1),g=(.5-.5*Math.cos(f*Math.PI))*m.warpedMoveDistance),n.addScaledVector(a,g);if(1===e.getPaintedUnitType().getUnitClass()){const e=d.getClientTime(),t=new u.F(Math.sin(.17*e)+Math.sin(.5*e),Math.sin(.2*e)+Math.sin(.3*e));n.addScaledVector(t,.4*(.5*Math.cos(f*Math.PI)+.5))}i.addVectors(t,n)}}calculateAirHeight(e,t){const i=this.config.armyPainter;if(e.isRocket()&&t)return t.height;if((!e.isPatrolling()||e.getFightStatus()===F.hN.APPROACH_PATROL)&&e.getPosition().equals(e.getLastAirPosition())){if(e.getNextCommand()){const t=e.getLastAttackTime();let n=this.gameState.getGameInfoState().getClientTime()-t;if(n<=i.warpedMaxTime)return n=Math.min(n/i.warpedAirTime,1),(.5-.5*Math.cos(n*Math.PI))*i.warpedAirHeight}}return t?t.height:i.warpedAirHeight}paintCommandPath(e,t,i,n){const r=this.armySelection.isSelected(e.getArmyID());let a;if(this.config.relation||this.config.relationModeWW2){const t=this.gameState.getForeignAffairsState().getRelations().simpleRelationBetween(e.getOwnerID(),this.playerId),i={0:"player",1:"neutral",2:"ally",3:"enemy"},n=this.config.relationColors[i[t]];a=new o.Zm(n);const r=this.config.armyPainter.commandPath.relationColorCorrect[i[t]];r&&r(a),a.a=1}else a=new o.Zm(t),a.a/=255;const s=this.renderCommand(e,i,r,n,a);if(!s)return;const l=this.gameState.getArmyState().getArmy(e.getAttackArmyID());if((null!==l||e.isFighting()||e.isFlying())&&this.attackPainter.paintAttack(e,e.getPosition(),l,i,n),i||n){const t=s&&!e.getPosition().equals(s),i=e.getVisibleUnits();let n=0;if(this.armyController.getCommandMode()!==ee.OC.DEPLOY_UNIT)for(let e=0;e<i.length;e++){const t=i[e];t&&(n=Math.max(n,t.getEffectiveUnitType().getRange()))}for(let r=0;r<i.length;r++){const a=i[r];if(a){const i=this.getAttackRangeAlpha(a,n);if(this.armyController.getCommandMode()!==ee.OC.DEPLOY_UNIT){var c;const n=e.isRefueling()?a.getUnitType():a.getEffectiveUnitType(),r=[n],l=null===(c=n.getManualConverterConfig())||void 0===c?void 0:c.getSpawnedUnitType();null!=l&&l.getRange()&&r.push(l),r.forEach((r=>{const a=r.getRange(),l=new o.Zm(1,1,1,i);n===r?(this.paintRange(a,e.getPosition(),l,!1),t&&this.paintRange(a,s,l,!0)):this.paintRange(a,s,l,!0)}))}if(this.armyController.getCommandMode()!==ee.OC.ATTACK){var h;const n=a.getUnitType(),r=[n],o=null===(h=n.getManualConverterConfig())||void 0===h?void 0:h.getSpawnedUnitType();o&&r.push(o),r.forEach((n=>{const r=n.getDeployUnitConfig();if(r){const o=r.getDeployRange(),l=this.config.armyPainter.deployUnitRangeColor;l.a=i;n===a.getUnitType()?(this.paintRange(o,e.getPosition(),l,!1),t&&this.paintRange(o,s,l,!0)):this.paintRange(o,s,l,!0)}}))}}}}}getAttackRangeAlpha(e,t){let i=1;return-1!==this.hoveredUnitItemID?i=e.getItemID()===this.hoveredUnitItemID?1:0:t&&(i=e.getEffectiveUnitType().getRange()===t?1:.3),i}paintRange(e,t,i,n){if(e>F.ne.CLOSE_COMBAT_RANGE){const r=new u.F(t.x,t.y),o=this.config.armyPainter.attackRange;n?this.destinationCircleCS.circle(r,e-1.7,o*(2+e/400),i):this.circleCS.circle(r,e-.5,o*(.3+e/200),i)}}paintUnit(e,t,i,n,r,a,s,l){const c=this.getOutlineColor(e.getOwnerID(),a),h=e.getPaintedUnitType();let d=this.getAngle(e,h);const f=e.isFlying(),m=e.getOwnerFactionID();n=new u.F(0,0);const g=this.generateSelectionIdColor(e),p=this.getImageRotation(e),v=a?1.2:1,x=new o.Zm(v,v,v,s);let S,y=new o.Zm(1,1,1,1);c&&!this.config.armyPainter.useDiamondArmyStacks?"red"===c?S=new o.Zm("#ffc0c0"):"grey"===c?S=new o.Zm("#d0d0d0"):"green"===c?S=new o.Zm("#b0ffb0"):(y=new o.Zm(c),y.a=1,S=new o.Zm(x)):S=new o.Zm(x),S.a=s;const _="flying_bomb"===e.getPaintedUnitType().getIdentifier(),w="airtransport"===e.getPaintedUnitType().getIdentifier();if(e.isRocket()&&!_&&!w||_&&!e.isFlying()||e.isGasCloud()?d=void 0:e.isAirplane()||!e.isFighting()&&!e.isBombarding()||(d=this.findFightingAngle(e,r)),f){const o=this.getUnitImageEntry(e,h,this.iconTypes.shadow,d,m);if(o){const a=this.calculateAirHeight(e,l);t.billboard({image:o,position:new u.F(.3*a,a).add(i),offset:n,displacement:r,rotation:p,color:x})}}let b=null;f?b=this.iconTypes.flying:this.config.armyPainter.hasLandMovement&&e.isMoving()?b=this.iconTypes.moving:this.config.armyPainter.hasAttack&&e.isAttacking()&&(b=this.iconTypes.attack);const C=this.config.useSpecialAssetsForUnknownArmies&&!e.isOwnArmy()&&0===e.getUnits().length,P=this.getUnitImageEntry(e,h,b,d,m,e.isMoving(),C);if(P){var M;this.paintArmyGlow(P.id,e,i,n,r);const o=(null===(M=this.config.armyPainter.unitResizeMap)||void 0===M?void 0:M[null==h?void 0:h.getIdentifier()])??1;t.billboard({image:P,position:i,offset:n,size:o,rotation:p,displacement:r,color:S}),!e.isSelectable()&&!this.config.armyPainter.paintUnselectableArmies||e.isGasCloud()||this.selectArmiesBS.billboard({image:P,position:i,offset:n,displacement:r,size:o,rotation:p,color:g})}if(this.paintAreaDamage(h,i),e.isSelectable()&&this.armyStack){const t=this.getSelectionId(e);this.armyStack.paint(e,i,r,a,x,g,t)}}paintArmyGlow(e,t,i,n,r){if(!this.config.paintArmyGlow||t.isGasCloud()||t.isFlying())return;const s=this.assetManager.manifest.imageMetadata(e),l=Math.max(s.width,s.height)/120,c=this.gameState.getMapState().getProvince(t.getLocationID());if(c){const e=c.getOwnerID(),s=this.gameState.getPlayerProfile(e);if(s){let h;if(this.config.relation){const t=this.gameState.getForeignAffairsState().getRelations().simpleRelationBetween(this.playerId,e),i={0:"player",1:"neutral",2:"ally",3:"enemy"},n=this.config.relationColors[i[t]];h=new o.Zm(n)}else h=this.config.morale?new o.Zm(new a.I((0,Q.iY)(c.getMorale()/100,1))):new o.Zm(s.getPrimaryColor());h.multiplyScalar(.35).addScalar(.6),h.a=t.isPlayersArmy()&&!this.config.morale?.7:.3,this.glowsBS.billboard({id:"army_info/unit_glow",position:i,offset:n,size:l,rotation:0,displacement:r,color:h})}}}findFightingAngle(e,t){const i=this.gameState.getArmyState(),n=e.getPosition(),r=new B.E(n.x+.5*t.x,n.y+.5*t.y);let o,a;if(e.attackUnitId&&(o=i.getArmy(e.attackUnitId)),!o){const t=e.getBattle();if(t){const e=t.getAttackers();e&&e.length&&(o=i.getArmy(e[0]))}}if(!o){const t=e.getCommands(),n=t[t.length-1];n instanceof O.l&&(o=i.getArmy(n.targetUnitID),o||(a=n.getTargetPos()))}if(o){const e=this.layoutSystem.getEntry(o),t=o.getPosition();let i;i=e?new B.E(e.position.x,e.position.y):o.getPosition();const n=i.subtract(t);n.scale(.5),a=t.add(n)}return a&&!r.equals(a)?Math.atan2(-a.x+r.x,a.y-r.y)+Math.PI:0}paintAreaDamage(e,t){const i=null==e?void 0:e.getDamageAuraConfig();if(i&&this.gasRangeCS){const e=this.config.armyPainter.deployUnitRangeColor;return this.gasRangeCS.circle(t,i.radius,i.radius/4,e),!0}return!1}generateSelectionIdColor(e){const t=this.getSelectionId(e);return new o.Zm(((258048&t)>>12)/63,((4032&t)>>6)/63,(63&t)/63,1)}getSelectionId(e){return e.runtimeId}getZPosition(e,t){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return e.y+.01*e.x+i+t.y-this.config.zFar}getZOffset(e){var t;const i=e.getPaintedUnitType().getUnitClass();return null!==(t=this.config.lowerZOffsetClasses)&&void 0!==t&&t.includes(i)?200*this.frequency:100+100*this.frequency}getImageRotation(e){if(e.isRocket()&&e.isFlying()&&"flying_bomb"!==e.getPaintedUnitType().getIdentifier()){const t=this.gameState.getGameInfoState().getClientTime(),i=e.getLastAirPosition(),n=e.getAttackPosition(),r=new u.F(n.x-i.x,n.y-i.y),o=Math.min(r.length()/100,2),a=Math.max(0,Math.min(1,1-(e.getNextAttackTime()-t)/(e.getNextAttackTime()-e.getLastAttackTime()))),s=Math.max(.01,Math.min(1-a,.1)),l=this.attackPainter.getBallX(a,1,i.x,n.x),c=this.attackPainter.getBallY(o,a,1,i.y,n.y),h=this.attackPainter.getBallX(a+s,1,i.x,n.x),d=this.attackPainter.getBallY(o,a+s,1,i.y,n.y);return Math.atan2(h-l,d-c)+Math.PI/2}return 0}getUnitImageEntry(e,t,i,n,r){let o,a=arguments.length>5&&void 0!==arguments[5]&&arguments[5];if(arguments.length>6&&void 0!==arguments[6]&&arguments[6]){const e=t.getIdentifier();o=`units/${e}_hidden`}else{const e=void 0!==n?this.getImageAngleIndex(n):0,s=t.getIdentifier(),l=void 0;o=`units/${t.getIconKey(i,s,l,e,r,a)}`}this.unitImageUsageTracker.setUsed(o);const s=this.assetManager.atlas(this.unitAtlasMapName).getMappingUnsafe(o);return s?-1!==s.page?s:null:(this.pendingImages+=1,this.assetManager.loadAtlasImage(o,this.unitAtlasMapName).then((()=>{this.pendingImages-=1,this.needsRedraw=this.needsRedraw||0===this.pendingImages})).catch((()=>{this.reportImageLoadingFailed(o,e,t),this.pendingImages-=1})),null)}reportImageLoadingFailed(e,t,i){if(this.reportedAssetLoadingExceptions||(this.reportedAssetLoadingExceptions=new Set),this.reportedAssetLoadingExceptions.has(e))return;let n="";e.includes("air")&&(n+=`unit:${Number(i.getItemID())}, `,n+=`flying?:${Number(t.isFlying())}, `,n+=`airplane?:${Number(t.isAirplane())}, `,n+=`returning?:${Number(t.isAirplaneReturning())}, `,n+=`fStatus: ${Number(t.getFightStatus())}.`),window.onException(new Error(`cannot load '${e}'. ${n}`)),this.reportedAssetLoadingExceptions.add(e)}getImageAngleIndex(e){const t=this.config.armyPainter.ARMY_ANGLES,i=2*Math.PI/t;let n=(e+Math.PI+i/2)/i;return n=Math.floor(n),n%=t,n*this.config.armyPainter.AVAILABLE_ARMY_ORIENTATIONS/t}paintStatusIndicator(e,t,i,n,r){let a=0,s=null,l=this.attackInterval*this.gameState.getGameInfoState().getTimeScale();if(e.isAttacking()&&!e.isFlying()&&e.getNextAttackTime()>0)s="attack",a=e.getTimeRemainingForAttackInSeconds();else{const t=e.getFirstCommandIfWait();if(t){switch(t.direction){case W.q.EMBARKING:s="embark";break;case W.q.DISEMBARKING:s="disembark";break;case W.q.MOBILIZING:s="mobilization";break;case W.q.RETURNING:break;case W.q.REFUELING:s="refuel";break;case W.q.RELOADING:s="gas_reload";break;case W.q.EXPIRING:s="gas_expiring";break;case W.q.CONVERTING:if((0,ee.w)(hup.config,ee.OC.CONVERT)){const t=e.getUnits().find((e=>e.getUnitType().canConvert()));s=`converting_${ie.t.getCommandIdentifier(t.getUnitType(),ee.OC.CONVERT,!1)}`;break}s="converting";break;case W.q.UPGRADING:s="upgrade";break;case W.q.DEPLOYING:if((0,ee.w)(hup.config,ee.OC.DEPLOY_UNIT)){const t=e.getUnits().find((e=>e.getUnitType().canDeployUnit()));s=`deploy_${ie.t.getCommandIdentifier(t.getUnitType(),ee.OC.DEPLOY_UNIT,!1)}`;break}s="deploy";break;default:s="wait"}l=t.waitSeconds,a=t.remainingTime()/1e3}}if(s){const c=n||r?1.2:1,h=new o.Zm(c,c,c,1),d=l-a,u=new o.Zm(0,d/l,1,.7),f=this.config.armyPainter.attackTimerOffset,m=1.2;this.armiesBS.billboard({id:`timer/${s}`,position:t,offset:f,displacement:i,size:m,color:h}),(e.isSelectable()||this.config.armyPainter.paintUnselectableArmies)&&this.selectArmiesBS.billboard({id:`timer/${s}`,position:t,offset:f,displacement:i,size:m,color:this.generateSelectionIdColor(e)}),this.attackTimerBS.billboard({id:"timer/attack_progress",position:t,offset:f,displacement:i,size:m,color:u})}}getAngle(e){if(e.isFlying()){const t=this.getLastAngle(e)??null;if(null!==t)return t}return e.getAngle0(this.config.armyPainter.armyDefaultAngle)}getLastAngle(e){const t=!e.isPatrolling()||e.getFightStatus()===F.hN.APPROACH_PATROL;return this.attackPainter.unitPos=e.getPosition(),this.attackPainter.updateAirplanePosition(e,e.getPosition(),e.getAttackPosition(),t,this.getSelectionId(e)),this.attackPainter.airPos.angle}getUnitTypeToPaint(e){return e.getPaintedUnitType()}getOutlineColor(e,t){return t?null:this.playerId!==Number(e)||this.config.armyPainter.outlinePlayerArmies?this.gameState.getForeignAffairsState().getRelationColor(e):null}paintPositionLine(e,t){return new u.F(e.x-t.x,e.y-t.y).length()>this.allocationConfig.minPositionLineLength&&(this.positionSLS.line(e,t),!0)}renderCommand(e,t,i,n,r){let a=e.getPosition();if(!a)return null;const l=e.getCommands(),c=new u.F,h=new o.Zm(1,1,1,1);if(0===l.length)return a;let d,f;d=e.isWithdrawing()?"retreat":l[l.length-1]instanceof z.N?"poisonAttack":l[l.length-1]instanceof O.l?e.forcedMarch?"attackForcedMarch":"attack":l[l.length-1]instanceof V.f?"patrol":l[l.length-1]instanceof H.V?"wait":e.forcedMarch?"forcedMarch":"move",f=n?"select":t||i?"focus":"active";const m=this.commandPainters[d][f];m.setup(r);const g=this.gameState.getArmyState(),p=this.gameState.getMapState();let v,x,S,y;for(const o of l)o instanceof k.U&&(y=o);for(let s=0;s<l.length;++s){const i=l[s];if(i instanceof k.U){if(S=i.getTargetPos(),!S)continue;if(this.wrapX){const e=this.wrapDistanceX;a.x=_.kz(a.x,e),S.x=_.kz(S.x,e);const t=a.x-S.x;Math.abs(t)>e/2&&(S.x+=Math.sign(t)*e)}const r=(0,o.ht)(a,S);if(!this.segmentHash.has(r)){let e=S;if(this.config.armyPainter.commandPath.drawArrow&&i===y){const t=new u.F(S.x-a.x,S.y-a.y);t.normalize(),t.multiplyScalar(-5),e=S.add(t)}m.segment(a,e),this.segmentHash.add(r)}if(x=a,a=S,t||n){const t=p.getProvinceAt(i.targetPos);if(t&&t.canBeConquered()&&!e.canPassThroughArmy(t.getOwnerID())&&!(s+1<l.length&&l[s+1]instanceof G.j)){const e=t.getCapital();e.getDistance(i.targetPos)<.001&&this.armiesBS.billboard({id:"icon_attack",position:e,offset:c,size:2,color:h})}}}if(i instanceof O.l){let r=g.getArmy(i.targetUnitID);(!r||e.getSpyRevealedTime()>0)&&(r=i.getTargetPos(),r&&(r=r.getClosestEquivalent(a))),this.attackPainter.paintAttack(e,a,r,t||n,!0,i),r&&r instanceof F.ne&&(r=r.getPosition()),v=r}if(i instanceof z.N){if(v=i.targetPos,!v)continue;if(this.gasRangeCS){const t=e.getVisibleUnits();for(let e=0;e<t.length;e++){const i=t[e];if(i){const e=i.getUnitType().getDeployUnitConfig();if(e&&this.paintAreaDamage(e.getSpawnedUnitType(),v))break}}}}else if(i instanceof V.f){let r=i.getTargetPos();if(!r)continue;r&&(r=r.getClosestEquivalent(a));const{launchTarget:o}=e.airParams;!n&&o&&o.equals(e.attackPosition)||this.attackPainter.paintAttack(e,a,r,t||n,!0,i),a=r}}const w=v??a,b=new u.F,C=this.getZPosition(w,b,this.getZOffset(e));if(m.icon&&w){const e=new s.P(w.x,w.y,C);m.icon(e)}if(m.arrowHead&&S&&x){const e=new s.P(S.x,S.y,C),t=new u.F(S.x-x.x,S.y-x.y);t.normalize(),m.arrowHead(e,r,t)}return a}dispose(){this.scalers.length=0,this.commandPainters=null,(0,o.ID)(this)}}class re{isResourceContainer=!0;selectionMap=new Map;updateAll=!0;constructor(e){this.armySelection=e.armySelection,this.armyController=e.armyController,this.gameState=e.gameState,this.provinceSelection=e.provinceSelection;const t=this.gameState.getMapState().map.width,i=new N(t,e.config.armyLayout);this.layoutSystem=i,this.low=new ne({...e,layoutSystem:i,frequency:0}),this.high=new ne({...e,layoutSystem:i,frequency:1}),this.resetArmyLayout()}dispose(){this.low.dispose(),this.high.dispose()}requestUpdate(){this.updateAll=!0}reset(){this.low.off(),this.high.off(),this.requestUpdate()}resetArmyLayout(){const e=this.gameState.getArmyState().getArmiesWithSpyInfoArray();this.layoutSystem.init(e,this.gameState.getMapState(),this.low)}update(e,t,i){this.low.update(e,t,i),this.high.update(e,t,i);const n=this.layoutSystem.simulationManager();if(this.updateAll||(this.updateAll=this.low.needsRedraw||n),this.updateAll&&!this.low.isLoading){this.selectionMap.clear();for(const e of this.gameState.getArmyState().getArmiesWithSpyInfoArray())this.selectionMap.set(e.runtimeId,e);this.updateLowFrequencyArmies(),this.updateAll=!1}this.updateHighFrequencyArmies()}highFrequencyPredicate(e){return e.isFlying()}updateLowFrequencyArmies(){this.low.begin();const e=this.gameState.getArmyState().getArmiesWithSpyInfoArray();for(const i of e)this.highFrequencyPredicate(i)||this.armyController.isMovedArmy(i)||this.low.paintArmy(i,i.getPosition(),!1);const t=this.gameState.getArmyState().getBombardmentsArray();for(const i of t){const e=i.getOwnerProfile().getPrimaryColor();this.low.paintCommandPath(i,e,!1,!1)}this.low.end()}updateHighFrequencyArmies(){this.high.begin();const e=this.armyController.getMoveArmies();for(const r of e.values())this.high.paintArmy(r,r.getPosition(),!0);const t=this.armySelection.getHighlightedArmy();t&&!this.armyController.isMovedArmy(t)&&this.high.paintArmy(t,t.getPosition(),!0);const i=this.gameState.getArmyState().getArmiesWithSpyInfoArray();for(const r of i)!this.highFrequencyPredicate(r)||this.armySelection.isHighlighted(r)||this.armyController.isMovedArmy(r)||this.high.paintArmy(r,r.getPosition(),!1);const n=this.provinceSelection.getSelectedProvinces();for(const r of n){const e=r.getDeploymentArmy();if(e){const t=r.getOwnerProfile().getPrimaryColor();this.high.paintCommandPath(e,t,!0,!0)}}this.high.end()}}function oe(e,t){let i;if(i=e&&"object"==typeof e?t.filter((t=>void 0===e[t])):t,i.length>0)throw new Error(`required keys missing: ${i.join(", ")}`);return e}var ae=-1,se=0,le=2,ce=4,he=20;function de(e){return(t,i)=>e.encode(t,i)}class ue{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[];this.chain=e}add(e){this.chain.push(e)}bind(e){this.add(de(e))}encode(e,t){this.chain.forEach((i=>i(e,t)))}}class fe{constructor(e,t){this.outputKey=e,this.value=t}encode(e,t){e[this.outputKey].copy(this.value)}}class me{constructor(e,t,i){this.config=e,this.players=t,this.playerColorMap=i}encode(e,t){var i,n;let{color:r}=e;const o=t.getOwnerID();let a;if(this.playerColorMap)a=this.playerColorMap.get(o);else{const e=this.players[o];a=null==e?void 0:e.getPrimaryColor()}r.set(a??0),null===(i=(n=this.config).correct)||void 0===i||i.call(n,r)}static default(e,t){const i={...arguments.length>2&&void 0!==arguments[2]?arguments[2]:{correct:e=>{e.a=.49}},...e.provinceColor},{players:n}=oe(t,["players"]);let r;return e.provinceColorCorrection&&(r=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},i=1/0,n=-1/0;const r=e.map((e=>{const t=new a.I(e.getPrimaryColor()),{h:r,s:o,l:s}=t.getHSL({h:0,s:0,l:0});return i=Math.min(s,i),n=Math.max(s,n),[e.getPlayerID(),t,r,o,s]})),{minBrightness:s=0,maxBrightness:l=1,desaturate:c=0}=t,h=(0,o.yv)(i,n,s,l),d=new Map;for(const[a,u,f,m,g]of r)u.setHSL(f,m,h(g)),(0,o.vG)(u,c),d.set(a,u);return d}(Object.values(n),e.provinceColorCorrection)),new me(i,n,r)}}class ge{constructor(e){this.colorMap=e}encode(e,t){let{color:i}=e;i.set(this.colorMap[t.getTerrainType()]??this.colorMap.default),i.a=(0,o.Vn)(.3,!1,!1,!1,!1)}static default(e,t){const{neutralProvinceColors:i}=oe(t,["neutralProvinceColors"]);return new ge(i)}}class pe{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[];this.config=e,this.moraleColorMap=t}encode(e,t){var i,n;let{color:r}=e;const{r:o,g:a,b:s}=this.getMoraleColor(t.getMorale());r.setRGBA(o,a,s),null===(i=(n=this.config).correct)||void 0===i||i.call(n,r)}getMoraleColor(e){let t=this.moraleColorMap[e];return t||(t=new a.I((0,Q.iY)(e/100,1)),this.moraleColorMap[e]=t),t}static default(e){const t={...arguments.length>1&&void 0!==arguments[1]?arguments[1]:{correct:e=>{e.multiplyScalar(.5).addScalar(.5),e.a=1}},...e.moraleColor};return new pe(t)}}class ve{constructor(e,t,i,n,r){this.config=e,this.ownPlayerId=t,this.relations=i,this.relationColorMap=n,this.playerBrightnessMap=r}encode(e,t){var i,n;let{color:r}=e;const a=t.getOwnerID(),s=this.relations.simpleRelationBetween(a,this.ownPlayerId),l=this.relationColorMap[s];l?r.copy(l):r.setHex(0),r.copy(this.relationColorMap[s]??new o.Zm);const c=this.playerBrightnessMap.get(a)??1;null===(i=(n=this.config).correct)||void 0===i||i.call(n,r,c)}static default(e,t){const i={...arguments.length>2&&void 0!==arguments[2]?arguments[2]:{correct:(e,t)=>{e.multiplyScalar(.9).addScalar(.2*t)}},...e.relationColor},{players:n,ownPlayerId:r,relations:s}=oe(t,["players","ownPlayerId","relations"]);var l;const c=function(e){const t=[];return Object.entries(e).forEach((e=>{let[i,n]=e;t[A.N.simple[i]]=new o.Zm(n)})),t}(function(e){return oe(e,Object.keys(A.N.simple))}((l=e,oe(l,["relationColors"])).relationColors)),{normalizedPlayerBrightness:h}=e,d=function(e,t){let i=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const n=new Map,r=new a.I;if(i){let t=1/0,i=-1/0;for(const s of e){const e=(0,o.H3)(r.setStyle(s.getPrimaryColor()));t=Math.min(t,e),i=Math.max(i,e),n.set(s.getPlayerID(),e)}const a=(0,o.yv)(t,i,0,1);n.forEach((e=>a(e)))}else for(const a of e){const e=(0,o.H3)(r.setStyle(a.getPrimaryColor()));n.set(a.getPlayerID(),Math.min(1*e+.4,1))}return n.set(t,1),n}(Object.values(n),r,h);return new ve(i,r,s,c,d)}}function xe(e,t){let{color:i}=e;i.copy(t.isOnSea()?o.Zm.ALL_ZEROS:o.Zm.ALL_ONES)}class Se{constructor(e,t){this.provinceSelection=e,this.infoToEncode=t}encode(e,t){let{color:i,beachColor:n}=e;const r={selected:()=>this.provinceSelection.isSelected(t.getLocationID()),revoltChance:()=>{var e;return t.isPlayersProvince()&&(null===(e=t.getProperties())||void 0===e?void 0:e.getRevoltChance())>0},immutable:()=>t.isImmutable(),conquered:()=>!t.isOwnersCoreProvince()},a=this.infoToEncode.map((e=>r[e]()));i.a=(0,o.Vn)(1,...a),n.a=(0,o.Vn)(0,...a)}static default(e,t){const{provinceSelection:i}=oe(e,["provinceSelection"]),{provinceInfoFlags:n}=oe(t,["provinceInfoFlags"]);return new Se(i,n)}}function ye(e,t){let{color:i,beachColor:n}=e;(0,o.mP)(i),(0,o.mP)(n)}class _e{uniforms={};geometries=[];meshes=[];$name="province";dispose(){this.uniforms={},(0,o.nL)(this.material),this.geometryInfo=void 0,this.geometries.forEach((e=>e.dispose())),this.geometries.length=0,this.meshes.forEach(o.wf),this.meshes.length=0}}const we={borderPosZ:0,bevelPosZ:-2,coastVerticalDistance:0};function be(e){const{borderPosZ:t=we.borderPosZ,bevelPosZ:i=we.bevelPosZ,coastVerticalDistance:n=we.coastVerticalDistance}=e;return{borderPosZ:t,bevelPosZ:i,coastVerticalDistance:n}}const Ce=["position","normal","color","center"];class Pe{constructor(e,t,i,n,r){this.color=new o.Zm,this.beachColor=new o.Zm,this.geometry=e,this.geometryIndex=0,this.bevel=t,this.updateAttributeState(),this.updateBufferMaxCounts(),this.vertexCount=0,this.indexCount=0,this.colorEncoders=function(e,t,i){if(e===ae){const e=()=>{};return{encodeProvinceColor:e,encodeNeutralProvinceColor:e}}const n=new ue,r=new ue;switch(e){case le:n.bind(pe.default(t)),r.bind(ge.default(e,t));break;case ce:n.bind(ve.default(t,i)),r.bind(ge.default(e,t));break;case he:n.add(xe),r.add(xe);break;default:n.bind(me.default(t,i)),r.bind(ge.default(e,t))}if(e!==he){const e=new o.Zm,a=de(new fe("beachColor",e));n.add(a),r.add(a),n.bind(Se.default(i,t))}return n.add(ye),r.add(ye),{encodeProvinceColor:de(n),encodeNeutralProvinceColor:de(r)}}(i,r,n),this.updateAttributes=this.configureAttributeUpdate(t,r)}updateAttributeState(){const e=this.geometry[this.geometryIndex];if(!e)return this.attributes=[],void(this.iterators={});this.attributes=Ce.map((t=>[e.getAttribute(t),t])).filter((e=>{let[t]=e;return Boolean(t)})).filter((e=>{let[t]=e;return t.array.length>0}));const t=e.getIndex();t&&t.array.length>0&&this.attributes.push([t,"index"]),this.iterators={};for(const[i,n]of this.attributes)this.iterators[n]=new o.e3(i)}updateBufferMaxCounts(){var e,t;this.maxVertexCount=(null===(e=this.attributes.find((e=>{let[,t]=e;return"index"!==t})))||void 0===e?void 0:e[0].count)??0,this.maxIndexCount=(null===(t=this.attributes.find((e=>{let[,t]=e;return"index"===t})))||void 0===t?void 0:t[0].count)??0}setNextGeometry(){this.finalizeAttributes(),this.geometryIndex+=1,this.vertexCount=0,this.indexCount=0,this.updateAttributeState(),this.updateBufferMaxCounts()}finalizeAttributes(){let e=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];for(const[t]of this.attributes)t.needsUpdate=!0;if(e){const e=this.geometry[this.geometryIndex];e&&(e.index?e.setDrawRange(0,this.indexCount):e.setDrawRange(0,this.vertexCount))}}configureAttributeUpdate(e,t){const i=1===this.attributes.length&&"color"===this.attributes[0][1];return e?i?this.updateColorAttributeBeveled.bind(this):this.updateAttributesBeveled.bind(this,be(t)):i?this.updateColorAttributeSimple.bind(this):this.updateAttributesSimple.bind(this,be(t))}updateColorState(e){const t=e.model,{encodeProvinceColor:i,encodeNeutralProvinceColor:n}=this.colorEncoders;!function(e){return"isUltProvince"in e}(t)?n(this,t):i(this,t)}updateAttributeVec4(e,t,i){for(let n=0;n<t;++n)e.setVec4(i).next(),this.vertexCount+=1}updateBorderIndices(e,t,i){for(let n=0;n<e.length;n+=3)i.setX(e[n+0]+t).next(),i.setX(e[n+2]+t).next(),i.setX(e[n+1]+t).next(),this.indexCount+=3}updateAttributesBeveled(e,t){const{position:i,color:n,normal:r,center:o,index:a}=this.iterators,{x:s,y:l}=t.getCapital(),{bevel:c}=t;for(const[h,d]of t.borders.entries()){const u=this.vertexCount,f=d.length/2,m=t.innerBorder[h],g=t.bevelVertexCount[h];for(let t=0,a=2*f;t<a;t+=2)null==i||i.setXYZ(m[t+0],m[t+1],e.borderPosZ).next(),null==n||n.setVec4(this.color).next(),null==r||r.setXYZW(128,128,255,0).next(),null==o||o.setXY(s,l).next(),this.vertexCount+=1;if(c){const a=t.edge[h],c=t.edgeNormal[h],d=2*g;for(let t=0;t<d;t+=2)null==i||i.setXYZ(a[t+0],a[t+1]+e.coastVerticalDistance,e.bevelPosZ).next(),null==n||n.setVec4(this.beachColor).next(),null==r||r.setXYZW(c[t+0],c[t+1],0,0).next(),null==o||o.setXY(s,l).next(),this.vertexCount+=1}if(a&&(this.updateBorderIndices(t.triangulation[h],u,a),c&&g>0)){const e=t.bevelLineIndexes[h];if(e){const t=e.length;for(let i=0;i<t;i+=2){const t=e[i],n=e[i+1],r=(t+1)%f,o=(n+1)%g;a.setX(u+t).next(),a.setX(u+r).next(),a.setX(u+f+n).next(),this.indexCount+=3,a.setX(u+f+n).next(),a.setX(u+r).next(),a.setX(u+f+o).next(),this.indexCount+=3}}else for(let t=0;t<f;++t){const e=(t+1)%f;a.setX(u+t).next(),a.setX(u+e).next(),a.setX(u+t+f).next(),this.indexCount+=3,a.setX(u+t+f).next(),a.setX(u+e).next(),a.setX(u+e+f).next(),this.indexCount+=3}}}}updateColorAttributeBeveled(e){const{color:t}=this.iterators;if(t)if(e.bevel)for(let i=0;i<e.borders.length;++i)this.updateAttributeVec4(t,e.getBorderVertexCount(i),this.color),this.updateAttributeVec4(t,e.getBevelVertexCount(i),this.beachColor);else{const i=e.getVertexCount();this.updateAttributeVec4(t,i,this.color)}}updateAttributesSimple(e,t){const{position:i,color:n,normal:r,center:o,index:a}=this.iterators,{x:s,y:l}=t.getCapital();for(const[c,h]of t.borders.entries()){const d=this.vertexCount,u=h.length;for(let t=0;t<u;t+=2)null==i||i.setXYZ(h[t],h[t+1],e.borderPosZ).next(),null==n||n.setVec4(this.color).next(),null==r||r.setXYZW(128,128,255,0).next(),null==o||o.setXY(s,l).next(),this.vertexCount+=1;a&&this.updateBorderIndices(t.triangulation[c],d,a)}}updateColorAttributeSimple(e){const{color:t}=this.iterators;if(!t)return;const i=e.getVertexCount();this.updateAttributeVec4(t,i,this.color)}finalize(){this.finalizeAttributes();for(let e=this.geometryIndex+1,t=this.geometry.length;e<t;++e)this.geometry[e].setDrawRange(0,0)}}function Me(e,t){let i=arguments.length>2&&void 0!==arguments[2]&&arguments[2],n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:ae,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:{},o=arguments.length>5&&void 0!==arguments[5]?arguments[5]:{};if(0===e.length)throw new Error("no buffer geometries to update");if(0===t.length)return void e.forEach((e=>e.setDrawRange(0,0)));const a=new Pe(e,i,n,r,o);if(0!==a.attributes.length){for(const e of t){const t=a.bevel&&e.bevel;if(a.vertexCount+e.getVertexCount(t)>a.maxVertexCount&&a.setNextGeometry(),0===a.attributes.length)break;const{vertexCount:i,indexCount:n}=a;a.updateColorState(e),a.updateAttributes(e)}a.finalize()}}function Ae(e,t,i){const{geometries:n}=e;if(n.forEach((e=>e.setDrawRange(0,0))),t>i)return;if(!e.geometryInfo)throw new Error("no render data");const{slices:r}=e.geometryInfo;if(t<0||t>=r.length||i<0||i>=r.length)throw new Error("invalid slice range");let o=r[t],{geometryIndex:a}=o,s=o.start,l=0;for(let c=t;c<=i;++c)o=r[c],a!==o.geometryIndex&&(n[a].setDrawRange(s,l),s=o.start,l=0,({geometryIndex:a}=o)),l+=o.count;n[a].setDrawRange(s,l)}let Te;!function(e){e[e.SIMPLE=0]="SIMPLE",e[e.BLURRED=1]="BLURRED",e[e.STENCIL_BLURRED=2]="STENCIL_BLURRED"}(Te||(Te={}));class Le{isResourceContainer=!0;innerFowUnitBS=new r.C(0);outerFowUnitBS=new r.C(0);provinceFowGeometry=[];blurredFowTargets=[];fowBlurWidth=1024;fowBlurHeight=1024;fowCopyScene=new l.x;fowBlurScene=new l.x;fowMergeScene=new l.x;fowBlurCamera=new c.i(0,1,0,1);fowBlurUniforms={};fowNeedsUpdate=!0;constructor(e){this.config=e}getBlurredFowTargetTexture(){return this.blurredFowTargets[0].texture}checkBlurredFowTarget(){return this.blurredFowTargets.length>0}requestUpdate(){this.fowNeedsUpdate=!0}static registerShaders(e){e.addProgram("blurFowStep1",{vertexName:"blurStep2",fragmentShader:"precision highp float;uniform sampler2D texture;uniform vec2 uOffset;varying vec2 vUV;void main(){vec4 a=texture2D(texture,vUV+vec2(-uOffset.x,-uOffset.y));a+=texture2D(texture,vUV+vec2(-uOffset.x,uOffset.y));a+=texture2D(texture,vUV+vec2(uOffset.x,-uOffset.y));a+=texture2D(texture,vUV+vec2(uOffset.x,uOffset.y));a+=texture2D(texture,vUV)*2.0;a/=6.0;gl_FragColor=vec4(a.x*2.0,a.x*2.0-1.0,a.y,a.z);}"}),e.addProgram("blurFowStep3",{vertexName:"blurStep3",fragmentShader:"precision highp float;uniform sampler2D texture1;uniform sampler2D texture2;uniform sampler2D texture3;uniform sampler2D texture4;uniform sampler2D texture5;uniform sampler2D texture6;uniform sampler2D texture7;varying vec2 vUV;void main(){vec4 a=texture2D(texture1,vUV);vec4 b=texture2D(texture2,vUV);vec4 c=texture2D(texture3,vUV);vec4 d=texture2D(texture4,vUV);vec4 e=texture2D(texture5,vUV);vec4 f=texture2D(texture6,vUV);vec4 g=texture2D(texture7,vUV);gl_FragColor=(a+b+c+d+e+f+g)/7.0;}"})}init(e){switch(Le.registerShaders(e),this.initFowUnits(),this.initFowProvinces(e),this.config.mode){case Te.BLURRED:case Te.STENCIL_BLURRED:this.initFowBlur(e)}}initFowUnits(){const e=1/(this.config.armyScaleY??1);this.innerFowUnitBS=new r.C(this.config.maxFowUnitCount).init({scene:this.config.fowInnerScene,atlasMapper:this.config.circleAM,mode:r.bv.normal,materialParameters:{blending:h.Xaj,blendEquation:h.Sm8,blendSrc:h.ghN,blendDst:h.ghN,depthTest:!1},color:new o.Zm(1,0,0,0),verticalScale:e}),this.outerFowUnitBS=new r.C(this.config.maxFowUnitCount).init({scene:this.config.fowOuterScene,atlasMapper:this.config.circleAM,mode:r.bv.normal,materialParameters:{blending:h.Xaj,blendEquation:h.Sm8,blendSrc:h.ghN,blendDst:h.ghN,depthTest:!1},color:new o.Zm(.5,0,0,0),verticalScale:e})}initFowProvinces(e){const t=new m.F({uniforms:{uColor:{value:new o.Zm(1,0,0,0)}},...e.getProgram("constantColor"),blending:h.Xaj,blendEquation:h.Sm8,blendSrc:h.ghN,blendDst:h.ghN,depthTest:!1,transparent:!0,opacity:0}),{counts:i}=this.config.geometryInfo;for(let n=0;n<i.length;++n){const e=n===i.length-1?i[n].vertex:65535,r=new v.u;this.provinceFowGeometry.push(r);const a=new Float32Array(3*e),s=new Uint16Array(3*e);r.setIndex(new g.Tl(s,1)),r.setAttribute("position",new g.Tl(a,3).setUsage(h.dj0)),(0,o.Ae)(r),r.setDrawRange(0,0);const l=new p.K(r,t);l.renderOrder=0,this.config.fowInnerScene.add(l)}}initFowBlur(e){const t={stencilBuffer:!1,depthBuffer:!1,generateMipmap:!1,minFilter:h.wem,maxFilter:h.wem,wrapS:h.uWy,wrapT:h.uWy};let i=this.fowBlurWidth,n=this.fowBlurHeight;for(let o=0;o<this.config.fowBlurLevel;++o)this.blurredFowTargets[o]=new d.d(i,n,t),i/=2,n/=2;this.fowBlurCamera=new c.i(0,this.fowBlurWidth,0,this.fowBlurHeight,.1,1e3),this.fowBlurCamera.position.z=2,this.fowBlurCamera.updateProjectionMatrix();const r=new v.u,a=[],s=[],l=[];for(let o=0;o<4;o++){const e=1&o,t=(2&o)>>1;a.push(e*this.fowBlurWidth,t*this.fowBlurHeight,0),s.push(e,1-t)}l.push(0,2,1),l.push(1,2,3),r.setIndex(l),r.setAttribute("position",new g.a$(a,3).setUsage(h.dj0)),r.setAttribute("uv",new g.a$(s,2).onUpload(o._c)),this.fowBlurUniforms={texture:{value:null},uOffset:{value:new u.F}};const f={};for(let o=0;o<this.config.fowBlurLevel-1;++o)f[`texture${o+1}`]={value:this.blurredFowTargets[o+1].texture};const x=new m.F({uniforms:this.fowBlurUniforms,...e.getProgram("blurFowStep1"),blending:h.bdR,depthTest:!1}),S=new m.F({uniforms:this.fowBlurUniforms,...e.getProgram("blurStep2"),blending:h.bdR,depthTest:!1}),y=new m.F({uniforms:f,...e.getProgram("blurFowStep3"),blending:h.bdR,depthTest:!1});this.fowCopyScene.add(new p.K(r,x)),this.fowBlurScene.add(new p.K(r,S)),this.fowMergeScene.add(new p.K(r,y))}onResize(e,t){this.config.screenWidth=e,this.config.screenWidth=t}update(){this.fowNeedsUpdate&&(this.updateUnitFow(),this.updateProvinceFow(),this.fowNeedsUpdate=!1)}updateUnitFow(){const e=this.config.circleAM.getMapping("circle"),t=Math.min(e.width,e.height)/2,i=this.config.gameState.getForeignAffairsState(),n=this.config.gameState.getArmyState().getArmiesArray();this.outerFowUnitBS.begin(),this.innerFowUnitBS.begin();let r=0;for(let s=0;s<n.length;s++){const l=n[s];if(!i.canSeeArmies(this.config.playerID,l.getOwnerID()))continue;let c,h;if(l.isAirplane()?(c=l.getAirPosition(),h=l.getViewWidth()/t):(c=l.getPosition(),h=l.getDetailedViewWidth()/t),this.innerFowUnitBS.billboard({image:e,position:c,size:h}),this.config.mode!==Te.STENCIL_BLURRED&&(h=l.getViewWidth()/t,this.outerFowUnitBS.billboard({image:e,position:c,size:h})),++r,r>=this.config.maxUnitCount){var o,a;null===(o=(a=window).onException)||void 0===o||o.call(a,new Error("FATAL ERROR: Buffers for FOW units too small!"));break}}this.innerFowUnitBS.end(),this.outerFowUnitBS.end()}updateProvinceFow(){const e=this.config.gameState.getForeignAffairsState(),t=this.config.geometryInfo.locations.filter((t=>function(e){return"isUltProvince"in e}(t.model)&&e.canSeeArmies(this.config.playerID,t.model.getOwnerID()))),{bevel:i}=this.config.geometryInfo;Me(this.provinceFowGeometry,t,i)}turnOffFow(){this.innerFowUnitBS.begin(),this.outerFowUnitBS.begin(),this.innerFowUnitBS.end(),this.outerFowUnitBS.end();for(const e of this.provinceFowGeometry)e.drawRange.count=0}renderFowBlur(e,t){if(this.config.mode===Te.SIMPLE)return;let i=this.config.screenWidth,n=this.config.screenHeight,r=2.5;for(let o=0;o<this.config.fowBlurLevel;++o){let a,s;const l=this.fowBlurUniforms;0===o?(s=e,a=this.fowCopyScene):(s=this.blurredFowTargets[o-1].texture,a=this.fowBlurScene,r=2,1===o&&(i=this.fowBlurWidth,n=this.fowBlurHeight)),l.texture.value=s,l.uOffset.value.x=r/i,l.uOffset.value.y=r/n,i/=2,n/=2,t.setRenderTarget(this.blurredFowTargets[o]),t.render(a,this.fowBlurCamera)}t.setRenderTarget(this.blurredFowTargets[0]),t.render(this.fowMergeScene,this.fowBlurCamera)}dispose(){(0,o.ID)(this)}}I.K.PLAINS,I.K.HILLS,I.K.MOUNTAIN,I.K.FOREST,I.K.JUNGLE,I.K.TUNDRA,I.K.DESERT,I.K.SWAMP,I.K.URBAN,I.K.SUBURBAN;const De=(e,t)=>`${I.K.getKey(e).toLowerCase()}_${t<9?"0":""}${t+1}`;I.K.HILLS,I.K.MOUNTAIN,I.K.FOREST,I.K.JUNGLE,I.K.DESERT,I.K.PLAINS,I.K.TUNDRA,I.K.SWAMP,I.K.URBAN;var Ie=i(67271),Ee=i(56335),Re=i(15485);function Ue(e){const t=e.getBorder(),i=new u.F(0,0),n=t.length;let r=0;for(let o=0;o<n;o+=2){const e=t[o],a=t[o+1],s=t[(o+2)%n],l=t[(o+3)%n],c=e*l-s*a;r+=c,i.x+=c*(e+s),i.y+=c*(a+l)}if(r*=3,i.divideScalar(r),(0,o.CL)(t,i.x,i.y))return i;const a=e.getCapital();return new u.F(a.x,a.y)}function Ne(e,t,i){return t*i+e}function Be(e,t){return new B.E(e%t,Math.floor(e/t))}function Fe(e,t){const i=new Map;for(const r of e){const e=r.getBorderSegments(Re.u.COAST),[n]=r.borders,o=n.length;for(const r of e){const e=2*r.end;for(let a=2*r.start;a<=e;a+=2){const e=a%o,r=(a+2)%o,s=Ne(n[e],n[e+1],t),l=Ne(n[r],n[r+1],t);i.set(s,l)}}}const n=[];return i.forEach(((e,r)=>{if(-1!==e){const e=[];e.push(Be(r,t));let o=r;for(;void 0!==i.get(o);){e.push(Be(i.get(o),t));const r=o;o=i.get(o),i.set(r,-1);const a=e[0],s=e[e.length-1];if(a.x===s.x&&a.y===s.y){n.push(e);break}}}})),n}function Oe(e,t,i,n){if(n[e])return[];const r=[],o=new Set([e]);do{const e=o.values().next().value;o.delete(e),r.push(t[e]),n[e]=!0;const a=t[e].getNeighbours();for(const t of a){const e=i.get(t);void 0!==e&&!1===n[e]&&o.add(e)}}while(o.size>0);return r}function ze(e){if(0===e.length)return[];const t=[],i=new Map(e.map(((e,t)=>[e.getLocationID(),t]))),n=new Array(e.length).fill(!1);let r=0;for(;-1!==r;){const o=Oe(r,e,i,n);o.length>0&&t.push(o),r=n.findIndex((e=>!1===e))}return t}function ke(e){const t=new o.tI;for(const i of e)t.update(i.getName());return t.code()}class Ve{usageThreshold=1e3;cleanupInterval=1;onAdd=void 0;onRemove=void 0;updateCount=0;useCountById=new Map;constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};Object.assign(this,e)}setUsed(e){this.onAdd&&!this.useCountById.has(e)&&this.onAdd(e),this.useCountById.set(e,this.updateCount)}update(){const{updateCount:e}=this;if(this.updateCount+=1,this.updateCount%this.cleanupInterval==0)for(const[t,i]of this.useCountById.entries())e-i>this.usageThreshold&&(this.useCountById.delete(t),this.onRemove&&this.onRemove(t))}}const Ge=0,He=1,We=2,Xe=3;class je{isResourceContainer=!0;threeConfig;config;renderer;renderQuality;viewport;assetManager;atlasMapper;shaderLib;vertexBufferLib;onError;gameState;armyController;armySelection;provinceSelection;commandWithMultipleHandling;playerId;lang;mouseController;provinceGeometryProvider;pixelRatio=1;renderWidth=0;renderHeight=0;scalers=[];unitImageUsageTracker=null;flagImageCache;camera;stillCamera;scene;worldScene;fowInnerScene;fowOuterScene;relicScene;reliefScene;frameScene;cloudScene;selectionScene;glowScene;renderTargetWorld;renderTargetFow;renderTargetRelic;renderTargetRelief;renderTargetSelection;renderTargetGlow;fowPainter;terrainEngine;armyPainter=null;stonesPS;mapFrame;paintResources=!1;playerNameHeight=new Map;bendedNationNamesNeedUpdate=0;nationNamesCache=new Map;currentMapView=Ge;provincesNeedsUpdate=!0;provinceSelectionNeedsUpdate=!1;time=0;frameCount=0;maxFpsIdle;maxFpsDrag;light={position:new s.P(0,1e3,0),color:new o.Zm(1,.5,0,.5),power:10};provinces=new _e;urbanProvinces=new _e;urbanProvincesFow=new _e;fontRenderingReady=new P.m(!1);initialized=new P.m(!1);mapRendered=new P.m(!1);armiesInitialized=new P.m(!1);bendedNamesInitialized=new P.m(!1);constructor(e){var t;this.config=e.config,this.threeConfig=e.threeConfig,this.renderer=e.renderer,this.renderQuality=e.renderQuality,this.viewport=e.viewport,this.onError=e.onError,this.assetManager=e.assetManager,this.atlasMapper=this.assetManager.atlas("main"),this.gameState=e.gameState,this.armyController=e.armyController,this.armySelection=e.armySelection,this.provinceSelection=e.provinceSelection,this.playerId=e.playerId,this.lang=e.lang,this.mouseController=e.mouseController,this.provinceGeometryProvider=e.provinceGeometryProvider,this.rtl=e.rtl,this.maxFpsIdle=1e3/(this.config.maxFpsIdle??30)-.5,this.maxFpsDrag=1e3/(this.config.maxFpsDrag??60)-.5;const{languageOverride:i,...n}=this.config.mapFont;this.config.mapFont={...n,...null==i?void 0:i[this.lang]},console.time("MapRenderer.init");const{loadTasks:s}=e;this.flagImageCache=new R.k(this.atlasMapper,e.imageLoader,this.gameState.getPlayerState(),this.config.flagImageConfig),this.renderWidth=this.viewport.screenWidth,this.renderHeight=this.viewport.screenHeight,this.pixelRatio=window.devicePixelRatio,this.renderQuality.getGPULevel()===Ie.a.LOW&&(this.pixelRatio=Math.min(Math.max(window.devicePixelRatio-1,1),2));const u=Math.floor(this.renderWidth*this.pixelRatio),f=Math.floor(this.renderHeight*this.pixelRatio);this.scene=new l.x,this.scene.background=new a.I(0);const{zNear:m,zFar:g}=this.config;this.camera=new c.i(-100,100,-100,100,m,g),this.stillCamera=new c.i(-100,100,-100,100,m,g),this.renderer.setPixelRatio(this.pixelRatio),this.renderer.setSize(this.renderWidth,this.renderHeight),this.renderer.sortObjects=!0,this.worldScene=new l.x,this.fowInnerScene=new l.x,this.fowOuterScene=new l.x,this.relicScene=new l.x,this.reliefScene=new l.x,this.frameScene=new l.x,this.cloudScene=new l.x,this.selectionScene=new l.x,this.config.paintArmyGlow&&(this.glowScene=new l.x),this.gameState.getMod().hasGameFeature(M.f.GF_SQUARE_MAP_LABELS)?(this.config.advancedUrbanProvinces=!0,this.config.thickUrbanBorders=!0,this.config.provinceNamesStyle=1):this.config.provinceNamesStyle=0;let p="default";var v;this.gameState.getMod().hasGameFeature(M.f.GF_SQUARE_MAP_LABELS)&&this.renderQuality.getGPULevel()!==Ie.a.LOW?(this.config.armyPainter.useDiamondArmyStacks=!0,this.config.armyPainter.digitFontName="font/digits_diamond",this.config.armyPainter.scalers[0].fadeThreshold=1,p="diamond"):this.config.armyPainter.digitFontName="font/digits",1===this.config.provinceNamesStyle?(this.updateProvinceNames=this.updateProvinceNamesWithoutVictoryPoints,this.paintProvinceResources=this.paintResourcesWithVictoryPoints,this.paintCapitalFlag=this.paintCapitalFlagName):(this.updateProvinceNames=this.updateProvinceNamesWithVictoryPoints,this.paintProvinceResources=this.paintResourcesOnly,this.paintCapitalFlag=this.paintCapitalFlagPole),this.shaderLib=new o.NO,this.vertexBufferLib=new r.Rq,(0,r.sH)({shaderLib:this.shaderLib,vertexBufferLib:this.vertexBufferLib,onError:this.onError,extendedTransforms:!1,windowColorsLength:null===(t=this.config.uniformColors)||void 0===t?void 0:t.length}),(v=this.shaderLib).addProgram("blurStep1",{vertexShader:"precision highp float;uniform mat4 modelViewMatrix;uniform mat4 projectionMatrix;attribute vec3 position;attribute vec4 color;attribute vec3 normal;varying vec4 vColor;varying vec3 vNormal;void main(){vColor=color;vNormal=normal;vec4 a=modelViewMatrix*vec4(position,1.0);gl_Position=projectionMatrix*a;}",fragmentShader:"precision highp float;varying vec4 vColor;varying vec3 vNormal;void main(){const vec3 a=vec3(0.0,0.0,1.0);float b=dot(vNormal,a)*(vColor.w*16.0-3.0);gl_FragColor=vec4(b,b,b,1.0);}"}),v.addProgram("blurStep2",{vertexShader:"precision highp float;uniform mat4 modelViewMatrix;uniform mat4 projectionMatrix;attribute vec3 position;attribute vec2 uv;varying vec2 vUV;void main(){vUV=uv;vec4 a=modelViewMatrix*vec4(position,1.0);gl_Position=projectionMatrix*a;}",fragmentShader:"precision highp float;uniform sampler2D texture;uniform vec2 uOffset;varying vec2 vUV;void main(){vec4 a=texture2D(texture,vUV+vec2(-uOffset.x,-uOffset.y));a+=texture2D(texture,vUV+vec2(-uOffset.x,uOffset.y));a+=texture2D(texture,vUV+vec2(uOffset.x,-uOffset.y));a+=texture2D(texture,vUV+vec2(uOffset.x,uOffset.y));a+=texture2D(texture,vUV)*2.0;gl_FragColor=a/6.0;}"}),v.addProgram("blurStep3",{vertexShader:"precision highp float;uniform mat4 modelViewMatrix;uniform mat4 projectionMatrix;attribute vec3 position;attribute vec2 uv;varying vec2 vUV;void main(){vUV=uv;vec4 a=modelViewMatrix*vec4(position,1.0);gl_Position=projectionMatrix*a;}",fragmentShader:"precision highp float;uniform sampler2D texture1;uniform sampler2D texture2;uniform sampler2D texture3;uniform sampler2D texture4;uniform sampler2D texture5;uniform sampler2D texture6;uniform sampler2D texture7;uniform sampler2D texture8;varying vec2 vUV;void main(){vec4 a=texture2D(texture1,vUV);vec4 b=texture2D(texture2,vUV);vec4 c=texture2D(texture3,vUV);vec4 d=texture2D(texture4,vUV);vec4 e=texture2D(texture5,vUV);vec4 f=texture2D(texture6,vUV);vec4 g=texture2D(texture7,vUV);vec4 h=texture2D(texture8,vUV);gl_FragColor.x=(a.x+b.x+c.x+d.x+e.x+f.x+g.x+h.x)/8.0;gl_FragColor.y=(a.x+b.x+d.x)/3.0;gl_FragColor.z=a.x;gl_FragColor.w=a.x/16.0+b.x/8.0+c.x/4.0+d.x/2.0;}"}),v.addProgram("coloredPlane",{vertexShader:"precision highp float;uniform mat4 modelViewMatrix;uniform mat4 projectionMatrix;uniform vec4 uColor;attribute vec3 position;varying vec4 vColor;void main(){vColor=uColor;vec4 a=modelViewMatrix*vec4(position,1.0);gl_Position=projectionMatrix*a;}",fragmentShader:"precision highp float;varying vec4 vColor;void main(){gl_FragColor=vColor;}"}),v.addProgram("constantColor",{vertexShader:"precision highp float;uniform mat4 modelViewMatrix;uniform mat4 projectionMatrix;attribute vec3 position;void main(){vec4 a=modelViewMatrix*vec4(position,1.0);gl_Position=projectionMatrix*a;}",fragmentShader:"precision highp float;uniform vec4 uColor;void main(){gl_FragColor=uColor;}"}),v.addProgram("provinceTexture",{vertexShader:"precision highp float;uniform mat4 modelViewMatrix;uniform mat4 projectionMatrix;uniform vec2 uScale;attribute vec3 position;attribute vec2 center;varying vec2 vUV;void main(){vUV=(center-position.xy)*uScale*0.02;vUV.x=-vUV.x;vUV+=0.5;vec4 a=modelViewMatrix*vec4(position.xyz,1.0);gl_Position=projectionMatrix*a;}",fragmentShader:"precision highp float;uniform sampler2D texture;varying vec2 vUV;void main(){gl_FragColor=texture2D(texture,vUV);}"});const x=this.initDynamicShaders(),S={stencilBuffer:!1,depthBuffer:!0,generateMipmap:!1,minFilter:h.wem};this.renderTargetWorld=new d.d(u,f,S),this.renderTargetRelic=new d.d(u,f,S);const y={stencilBuffer:!1,depthBuffer:!0,generateMipmap:!1,minFilter:h.TyD,magFilter:h.TyD};y.format=h.wk1,y.type=h.ywz,this.renderTargetSelection=new d.d(u/2,f/2,y),S.depthBuffer=!1,this.renderTargetFow=new d.d(u,f,S),(this.config.provinceTexturing||this.config.terrainEngine)&&(this.renderTargetRelief=new d.d(u,f,S)),this.config.paintArmyGlow&&(this.renderTargetGlow=new d.d(u/2,f/2,S));const _=this.config.overlay;if(_&&_.relation&&_.relation.color){const e=A.N;this.relationColors=[];const t=_.relation.color;Object.keys(t).forEach((i=>{this.relationColors[e.simple[i]]=new o.Zm(t[i])}))}this.updateProvinceCapital=this.config.advancedProvinceVisualization?this.updateProvinceCapitalAdvanced:this.updateProvinceCapitalSimple,this.updateMapUniforms=this.updateMapUniformsDayNigthMode,this.initNationsBorders(),this.initUrbanProvinces(),this.initProvincesBorders(),this.config.renderTerrainIcons&&this.initTerrainIconsBS(),this.initProvinceCapital(),this.initProvinceNames(s),this.initLasso(3),Promise.all([s.main,x]).then((t=>{let[i,n]=t;const{unitTypeVisibilityMap:r,armyStatusVisibilityMap:o}=e;s.army.then((e=>this.initArmies(p,e,r,o))),this.shaderLib.addProgram("landscape",{vertexShader:n.landscapeVertexShader,fragmentShader:n.landscapeFragmentShader}),this.shaderLib.addProgram("fow",{vertexShader:n.fowVertexShader,fragmentShader:n.fowFragmentShader}),this.shaderLib.compile(this.renderer);let a=this.config.fowMode??Te.SIMPLE;this.renderQuality.getGPULevel()===Ie.a.LOW&&(a=Te.SIMPLE);const l={mode:a,gameState:this.gameState,playerID:this.playerId,verticalScreenScale:this.config.verticalScale,maxUnitCount:this.config.maxUnitCount,fowInnerScene:this.fowInnerScene,fowOuterScene:this.fowOuterScene,maxFowUnitCount:this.config.allocations.maxUnitFOWCount,circleAM:i.atlas("circle"),geometryInfo:this.provinceGeometryProvider.info.simpleProvince,fowBlurLevel:this.config.fowBlurLevel,screenWidth:u,screenHeight:f,armyScaleY:this.config.armyPainter.armyScaleY};this.fowPainter=new Le(l),this.fowPainter.init(this.shaderLib);const{safeRegion:c,mapBounds:h}=this.provinceGeometryProvider,d=(c.isEmpty()?h:c).clone();this.initProvinces(n.landscapeVertexShader,n.landscapeFragmentShader),this.renderMapBlur(),this.config.provinceTexturing&&s.province.then((e=>{this.initProvinceTexture(e),this.updateProvinceTexture()}));const m=this.initSeaPoints(i);d.union(m),this.initProvincesConnections(i),this.initPOI(i),this.updateProvinceCapital(),this.initPlaneFow(n.fowVertexShader,n.fowFragmentShader),this.initMapFrame(d),this.initClouds();for(const e of this.provinceGeometryProvider.locations)e.innerBorder=[],e.edge=[],e.edgeNormal=[];const{scalersGlobal:g={},scalers:v=[]}=this.config;this.scalers=v.map((e=>new U.G(this,{...g,...e}))),this.initLight(),this.paintResources=this.config.resources,b.EventBus.subscribe(te.q.PROVINCE_OWNER_CHANGED,(()=>{this.onProvinceChanged(),this.paintBendedNationNames()})),b.EventBus.subscribe(te.q.UI_PROVINCE_NAMES_TOGGLED,(()=>{this.toggleProvinceNames()})),b.EventBus.subscribe(te.q.UI_MAP_STATE_UPDATED,(()=>this.onProvinceChanged())),b.EventBus.subscribe(te.q.UI_PROVINCE_SELECTED,(()=>this.onProvinceSelectionChanged())),b.EventBus.subscribe(te.q.UI_PLAYER_STATE_UPDATED,(()=>{this.onProvinceChanged(),this.updateCapitalNames()})),b.EventBus.subscribe(te.q.UI_DIPLOMACY_STATE_UPDATED,(()=>{var e;this.onProvinceChanged(),null===(e=this.armyPainter)||void 0===e||e.requestUpdate()})),b.EventBus.subscribe(te.q.UI_ARMY_STATE_UPDATED,this.onArmyChanged.bind(this)),b.EventBus.subscribe(te.q.UI_ARMY_SELECTED,this.onArmyChanged.bind(this)),b.EventBus.subscribe(te.q.UI_ARMY_HOVER_CHANGED,this.onArmyChanged.bind(this)),b.EventBus.subscribe(te.q.UI_ARMY_DOUBLE_CLICK_SELECTION,this.onArmyChanged.bind(this)),b.EventBus.subscribe(te.q.UI_ARMY_VISIBILITY_FLAGS_CHANGED,this.onArmyVisibilityFlagsChanged.bind(this)),this.lastUpdateTime=performance.now(),this.initialized.set(),console.timeEnd("MapRenderer.init")})),this.config.renderTerrainIcons&&s.terrainIcons.then((()=>this.initTerrainIcons()))}initDynamicShaders(){const e=[];e.push(["fowVertexShader",i.e(70).then(i.bind(i,4307))]),this.renderQuality.getGPULevel()===Ie.a.LOW?e.push(["fowFragmentShader",i.e(70).then(i.bind(i,15739))]):e.push(["fowFragmentShader",i.e(70).then(i.bind(i,81773))]),this.renderQuality.getGPULevel()===Ie.a.LOW?(e.push(["landscapeVertexShader",i.e(70).then(i.bind(i,73508))]),e.push(["landscapeFragmentShader",i.e(70).then(i.bind(i,63796))])):(e.push(["landscapeVertexShader",i.e(70).then(i.bind(i,39279))]),e.push(["landscapeFragmentShader",i.e(70).then(i.bind(i,74389))]));const t=e.map((e=>{let[t,i]=e;return i.then((e=>[t,e.default]))}));return Promise.all(t).then(Object.fromEntries)}initTerrainIconsBS(){this.terrainIconsBS=new r.C(this.gameState.getMapState().getProvinceArray().length),this.terrainIconsBS.init({scene:this.relicScene,atlasMapper:this.atlasMapper,renderOrder:100,verticalScale:this.config.verticalScale})}getArmyAt(e){if(this.initialized.isFalse)return null;const t=new Uint8Array(4),i=this.pixelRatio,n=e.x*i/2,r=this.renderTargetSelection.height-e.y*i/2;this.renderer.readRenderTargetPixels(this.renderTargetSelection,n,r,1,1,t);const o=(252&t[0])<<10|(252&t[1])<<4|(252&t[2])>>2;return o?this.armyPainter.selectionMap.get(o)??null:null}onResize(e,t){var i,n,r;this.renderWidth=e,this.renderHeight=t,this.renderer.setSize(e,t);const o=Math.floor(e*this.pixelRatio),a=Math.floor(t*this.pixelRatio);this.renderTargetWorld.setSize(o,a),this.renderTargetFow.setSize(o,a),this.renderTargetRelic.setSize(o,a),this.renderTargetSelection.setSize(o/2,a/2),null===(i=this.renderTargetGlow)||void 0===i||i.setSize(o/2,a/2),null===(n=this.fowPainter)||void 0===n||n.onResize(o,a),null===(r=this.renderTargetRelief)||void 0===r||r.setSize(o,a)}initClouds(){const{maxClouds:e}=this.config.allocations;e&&this.renderQuality.getGPULevel()!==Ie.a.LOW&&(this.cloudsCS=new r.UG(e),this.cloudsCS.init({scene:this.cloudScene,texture:this.assetManager.loadTextureWithFallback("clouds/clouds"),renderOrder:100}),this.cloudsCS.continuous=this.viewport.isContinuous?1:0,this.cloudsCS.mapSize=new u.F(this.viewport.totalWidth,this.viewport.totalHeight))}initMapFrame(e){if(!this.config.mapFrame)return;const{isContinuous:t,totalWidth:i,totalHeight:n}=this.viewport,a=this.config.mapFrameSkew??0,[s,l]=t?[0,i]:[e.min.x,e.max.x],[c,d]=[e.min.y,e.max.y],u=this.config.frameDiffuseFactor??1,m=this.config.frameSpecularFactor??.3,g=new f.L(s,c,l,d),{maxFrameTiles:p}=this.config.allocations,v=this.frameScene,x=e=>this.assetManager.loadAllTexturesWithFallback((e=>[`frame/${e}_diffuse`,`frame/${e}_normal`])(e)),[S,y]=x("background"),_=new r.Is(p).init({scene:v,diffuseTexture:S,normalTexture:y,renderOrder:1,diffuseFactor:u,specularFactor:m,mapRect:g,skew:a,lightPower:5}),[b,C]=x("border"),P=new r.Is(p).init({scene:v,diffuseTexture:b,normalTexture:C,wrapT:h.uWy,renderOrder:3,diffuseFactor:u,specularFactor:m,mapRect:g,skew:a,lightPower:5}),[M,A]=x("corner"),T=new r.Is(p).init({scene:v,diffuseTexture:M,normalTexture:A,wrapS:h.uWy,wrapT:h.uWy,renderOrder:2,diffuseFactor:u,specularFactor:m,mapRect:g,skew:a,lightPower:5});this.mapFrame={background:_,bar:P,corner:T},o.hd.tagAsResourceContainer(this.mapFrame);const L=new w.U,D=new w.U,I=new o.Zm(1,1,1,1);let E=i-l;const R=n-d,U=i-E-s,N=n-R-c,B=s+.5*U,F=c+.5*N;let O=0,z=15e3;const k=.001,V=700;t&&(E=0,O=n*a,z=0);const G=2e3,H=1e4;_.begin(),L.init(.5*i,-1e3+c,i+z,G),D.setRect(L),D.scale(k,k),_.tile(L,D,1,0,I),L.init(.5*i+O,n+1e3-R,i+z,G),D.setRect(L),D.scale(k,k),_.tile(L,D,1,0,I),t||(L.init(-5e3+s,F,H,N),D.setRect(L),D.scale(k,k),_.tile(L,D,1,0,I),L.init(i+5e3-E,F,H,N),D.setRect(L),D.scale(k,k),_.tile(L,D,1,0,I)),_.end();const W=50;if(P.begin(),L.init(B,c-25,U,W),D.init(0,.5,2*Math.floor(i/V),1),P.tile(L,D,1,0,I),L.init(B+O,n-R+25,U,W),D.init(0,.5,2*Math.floor(i/V),1),P.tile(L,D,1,Math.PI,I),t||(L.init(s-25,F,N,W),D.init(0,.5,2*Math.floor(n/V),1),P.tile(L,D,1,1.5*Math.PI,I),L.init(i-E+25,F,N,W),D.init(0,.5,2*Math.floor(n/V),1),P.tile(L,D,1,.5*Math.PI,I)),P.end(),!t){const e=58;T.begin(),L.init(s-e/2,c-e/2,e,e),D.init(.5,.5,1,1),T.tile(L,D,1,0,I),L.init(i-E+e/2,c-e/2,e,e),D.init(.5,.5,1,1),T.tile(L,D,1,.5*Math.PI,I),L.init(s-e/2,n-R+e/2,e,e),D.init(.5,.5,1,1),T.tile(L,D,1,1.5*Math.PI,I),L.init(i-E+e/2,n-R+e/2,e,e),D.init(.5,.5,1,1),T.tile(L,D,1,1*Math.PI,I),T.end()}}initProvinceTexture(e){const{maxProvinceTextureCount:t}=this.config.allocations;this.provinceTextureBS=new r.C(t).init({scene:this.reliefScene,atlasMapper:e.atlas("province"),verticalScale:this.config.verticalScale}),this.provinceTextureBS.setGlobalMaskResolution(this.viewport.totalWidth,this.viewport.totalHeight);const i=e.texture("relief/urban_normal");i.wrapS=h.uWy,i.wrapT=h.uWy,i.needsUpdate=!0,this.urbanTexture=i,this.urbanProvinces.uniforms=(0,o.XT)({texture:{value:i},uScale:{value:new u.F(1,this.config.verticalScale)}}),this.urbanProvinces.material=new m.F({uniforms:this.urbanProvinces.uniforms,...this.shaderLib.getProgram("provinceTexture"),blending:h.bdR,depthTest:!1,transparent:!0,side:h.Wl3});const n=this.provinceGeometryProvider.info.urban;this.urbanProvinces.geometryInfo=n;const a=new o.ww([["position",Uint16Array,4],["center",Uint16Array,2]]);for(const{vertex:r,index:s}of n.counts){const e=new Uint16Array(s),t=a.createGeometry(r);t.setIndex(new g.Tl(e,1).onUpload(o._c)),(0,o.Ae)(t),t.setDrawRange(0,0),this.urbanProvinces.geometries.push(t);const i=new p.K(t,this.urbanProvinces.material);this.urbanProvinces.meshes.push(i),i.renderOrder=0,this.reliefScene.add(i)}this.generateProvinces(this.urbanProvinces.geometries,n)}renderMapBlur(){const{totalWidth:e,totalHeight:t,isContinuous:i}=this.viewport;this.blurWidth=Math.max(this.config.blurTextureSize.min,Math.min(this.renderer.capabilities.maxTextureSize,this.config.blurTextureSize.max)),this.blurHeight=this.blurWidth;let n=this.blurWidth,r=this.blurHeight;const a={stencilBuffer:!1,depthBuffer:!1,generateMipmap:!1,minFilter:h.wem,wrapS:i?h.rpg:h.uWy,wrapT:h.uWy},s=[];for(let o=0;o<this.config.blurLevel;++o)s[o]=new d.d(n,r,a),n/=2,r/=2;const f=[],S=new l.x,y=new c.i(0,e,0,t,.1,1e3);y.position.z=2;const _=new m.F({uniforms:{uScale:{value:1}},...this.shaderLib.getProgram("blurStep1"),blending:h.bdR,depthTest:!0,side:h.Wl3});for(const o of this.provinces.geometries){const e=new p.K(o,_);f.push(e),S.add(e)}this.renderer.setRenderTarget(s[0]),this.renderer.render(S,y);const w={texture:{value:s[0]},uOffset:{value:new u.F}},b=new m.F({uniforms:w,...this.shaderLib.getProgram("blurStep2"),blending:h.bdR,depthTest:!1}),C=new v.u;let P=[],M=[],A=[];for(let o=0;o<4;o++){const e=1&o,t=(2&o)>>1;P.push(e*this.blurWidth,t*this.blurHeight,0),M.push(e,1-t)}A.push(0,2,1),A.push(1,2,3),C.setIndex(A),C.setAttribute("position",new g.a$(P,3).setUsage(h.dj0)),C.setAttribute("uv",new g.a$(M,2).onUpload(o._c));const T=new l.x;T.add(new p.K(C,b));let L=this.blurWidth,D=this.blurHeight;for(let o=0,l=this.config.blurLevel-1;o<l;++o){L/=2,D/=2,P=C.attributes.position.array;for(let e=0;e<4;e++){const t=1&e,i=(2&e)>>1;P[3*e+0]=t*L,P[3*e+1]=i*D}C.attributes.position.needsUpdate=!0,y.right=L,y.bottom=D,y.updateProjectionMatrix(),w.texture.value=s[o].texture,w.uOffset.value.x=1/L,w.uOffset.value.y=1/D,this.renderer.setRenderTarget(s[o+1]),this.renderer.render(T,y)}const I={};for(let o=0,l=this.config.blurLevel;o<l;++o)I[`texture${o+1}`]={value:s[o].texture};const E=new m.F({uniforms:I,...this.shaderLib.getProgram("blurStep3"),blending:h.bdR,depthTest:!1}),R=this.blurWidth,U=this.blurHeight;y.right=R,y.bottom=U,y.updateProjectionMatrix();const N=new v.u;P=[],M=[],A=[];for(let o=0;o<4;o++){const e=1&o,t=(2&o)>>1;P.push(e*R,t*U,0),M.push(e,1-t)}A.push(0,2,1),A.push(1,2,3),N.setIndex(A),N.setAttribute("position",new g.a$(P,3).onUpload(o._c)),N.setAttribute("uv",new g.a$(M,2).onUpload(o._c));const B=new p.K(N,E),F=new l.x;F.add(B);const O=new d.d(R,U,a);this.renderer.setRenderTarget(O),this.renderer.render(F,y),this.blurredMapTexture=O.texture,O.setTexture(new x.x),O.dispose(),C.dispose(),N.dispose(),s.forEach((e=>e.dispose()))}initProvinceNames(e){const t=this.config.mapFont,{verticalScale:i}=this.config,n={family:t.family??"Arial",style:t.style??"normal",letiant:t.letiant??"normal",weight:t.weight??"normal",size:t.size??10,fillStyle:t.fillStyle??"444",strokeStyle:t.strokeStyle,shadowColor:t.shadowColor,shadowBlur:t.shadowBlur??0,shadowOffsetX:t.shadowOffsetX??0,shadowOffsetY:t.shadowOffsetY??0,backgroundStyle:t.backgroundStyle,padding:t.padding??{top:0,bottom:0,right:0,left:0},upperCase:t.upperCase,letterSpacingChar:t.letterSpacingChar,lineWidth:t.lineWidth??1};this.provinceFontCfg={...n,...t.provinceName},this.capitalFontCfg={...n,...t.capitalName},this.cityFontCfg={...n,...t.cityName},this.victoryFontCfg={...n,...t.victoryPoints},this.nationFontCfg={...n,...t.nationName},[this.provinceFontCfg,this.capitalFontCfg,this.victoryFontCfg,this.nationFontCfg,this.cityFontCfg].forEach((e=>{e.font=`${e.style} ${e.letiant} ${e.weight} ${e.size}pt ${e.family}`}));const a=this.gameState.getMapState().getProvinceArray().length;if(this.renderQuality.getGPULevel()!==Ie.a.LOW&&(this.provinceNamesTP=new r.kr,this.selectedProvinceNamesTP=new r.kr),this.config.drawVictoryPoints&&(this.victoryPointsTP=new r.kr),this.config.paintPlayerNames&&(this.playerNamesTP=new r.kr,this.playerBackgroundCRS=new r.Hs(a)),this.cityNamesTP=new r.kr,this.config.paintNationNames&&(this.nationNamesTP=new r.kr),this.config.paintBendedNationNames?(this.bendedNationNamesTP=new r.kr,this.bendedNationNamesTP.fillColor=this.config.bendFillColor,this.bendedNationNamesTP.bendGlobalColor=this.config.bendGlobalColor??new o.Zm(.9,.9,.9,1),this.config.bendedOutlineSharpness&&(this.bendedNationNamesTP.outlineSharpness=this.config.bendedOutlineSharpness)):this.bendedNamesInitialized.set(),this.capitalNamesTP=new r.kr,this.textBackgroundCRS=new r.Hs(a),1===this.config.provinceNamesStyle){const e=4*this.gameState.getPlayerState().getNumberOfPlayers();this.capitalBackgroundCRS=new r.Hs(e)}Promise.all([this.assetManager.loadTexture(`font/${t.name}`),fetch(`templates/imagefonts/${t.name}.json?${window.globalBust}`).then((e=>{if(!e.ok)throw new Error(`json - Status ${e.status}`);return e.json()})),this.rtl?(0,r.uh)():Promise.resolve()]).then((n=>{var r,a;let[s,l]=n;(0,o.N6)(s,{generateMipmaps:!0,magFilter:h.wem,minFilter:h.FDw,anisotropy:this.renderer.capabilities.getMaxAnisotropy()});const c={texture:s,font:l,scale:.35,rotate:t.rotation??0,skew:t.skew??0,width:this.config.textPrinterMaxWidth??1e3,align:"center",lineHeight:((null===(r=l.common)||void 0===r?void 0:r.lineHeight)??0)-20,letterSpacing:-10,verticalScale:i,rtl:this.rtl};this.printerConfig=c,this.initProvinceNamesPrinter(c),this.initVictoryPointsPrinter(c),this.initPlayerNamesPrinter(c),this.initCityNamesPrinter(c),this.initCapitalNamesPrinter(c),this.initNationNamesPrinter(c),this.initBendedNationNamesPrinter(c),this.textBackgroundCRS.init({scene:this.frameScene,renderOrder:39,color:"#ffffff",verticalScale:i}),null===(a=this.capitalBackgroundCRS)||void 0===a||a.init({scene:this.frameScene,renderOrder:39,color:"#ffffff",verticalScale:i}),this.fontRenderingReady.set(),this.updateCapitalNames(e)})).catch((e=>{this.onError(new Error(`Failed loading font (${e})`))}))}initProvinceNamesPrinter(e){var t;const i=this.frameScene,n=this.provinceFontCfg.strokeStyle;var r;this.config.names&&(null===(r=this.provinceNamesTP)||void 0===r||r.init({...e,scene:i,renderOrder:40,dynamic:!1,outlineColor:n}));null===(t=this.selectedProvinceNamesTP)||void 0===t||t.init({...e,scene:i,renderOrder:50,outlineColor:n})}initVictoryPointsPrinter(e){if(!this.config.drawVictoryPoints)return;let t=0;for(const i of this.gameState.getMapState().getProvinceArray()){const e=i.getVictoryPoints();e&&(t+=e>10?3:2)}this.victoryPointsTP.init({...e,...this.config.victoryPointsTextPrinterOptions,scene:this.frameScene,renderOrder:this.config.mapElementsRenderOrder.victoryPoints,maxCharactersPerBatch:t,outlineColor:this.provinceFontCfg.strokeStyle}),0===this.config.provinceNamesStyle&&this.victoryPointsTP.offset.set(0,54)}initPlayerNamesPrinter(e){if(!this.config.paintPlayerNames)return;const t=this.gameState.getPlayerState().getFilteredPlayers(!0,!0,0);let i=0;for(const n of t)i+=n.getName().length;this.playerNamesTP.init({...e,scene:this.frameScene,renderOrder:52,maxCharactersPerBatch:i,outlineColor:this.capitalFontCfg.strokeStyle}),this.playerBackgroundCRS.init({scene:this.frameScene,renderOrder:51,color:"#ffffff",verticalScale:this.config.verticalScale})}initCityNamesPrinter(e){if(0===this.config.provinceNamesStyle&&!this.config.drawNameWhenCity)return;let t=0;for(const i of this.gameState.getMapState().getProvinceArray())i.isUrban()&&!i.isCapital()&&(t+=i.getName().length);this.cityNamesTP.init({...e,scene:this.frameScene,renderOrder:40,maxCharactersPerBatch:t,outlineColor:this.capitalFontCfg.strokeStyle})}initCapitalNamesPrinter(e){let t=0;for(const i of this.gameState.getMapState().getProvinceArray())i.isUrbanOrCapital()&&(this.config.drawCitiesAndCapitalsSame||i.isCapital())&&(t+=i.getName().length);this.capitalNamesTP.init({...e,scene:this.frameScene,renderOrder:40,maxCharactersPerBatch:t,outlineColor:this.capitalFontCfg.strokeStyle})}initNationNamesPrinter(e){if(!this.config.paintNationNames)return;const t=this.gameState.getPlayerState().getFilteredPlayers(!0,!0,0);let i=0;for(const n of t)i+=n.getNationName().length;this.nationNamesTP.init({...e,scene:this.frameScene,renderOrder:80,maxCharactersPerBatch:i,outlineColor:this.nationFontCfg.strokeStyle})}initBendedNationNamesPrinter(e){if(!this.config.paintBendedNationNames)return;const t=this.gameState.getPlayerState().getFilteredPlayers(!0,!0,0).reduce(((e,t)=>e+t.getNationName().length),0);this.bendedNationNamesTP.init({...e,scene:this.relicScene,renderOrder:0,maxCharactersPerBatch:t,width:this.config.bendedNameMaxWidth,color:this.nationFontCfg.backgroundStyle,outlineColor:this.nationFontCfg.strokeStyle}),this.bendedNationNamesTP.alpha=.1}toggleProvinceNames(){if(!this.provinceNamesTP)return;const e=this.config.names;this.provinceNamesTP.isInitialized()?this.provinceNamesTP.enabled=e:e&&this.printerConfig&&(this.initProvinceNamesPrinter(this.printerConfig),this.updateProvinceNames())}paintNationNames(){this.nationNamesTP.begin(),Object.values(this.gameState.getPlayerState().getPlayers()).forEach((e=>{const t=e.getNationLabelCoord();if(t){const i=new u.F(t.x,t.y),n=e.getNationName().toUpperCase(),r=this.nationNamesTP.scale*e.getNationLabelSize();this.nationNamesTP.print(i,n,void 0,r)}})),this.nationNamesTP.end()}precalculateBendedGeometry(e,t,i,n){const r=new u.F,a=new u.F,s=[],l=[],c=void 0,h=this.gameState.getMapState(),d=new u.F(0,0);for(let o=0;o<i.length;o++){const e=Ue(i[o]);d.add(e)}d.divideScalar(i.length);const f=h.getProvinceAt(d),m=d;if(!f||f.getOwnerID()!==e){const e=function(e,t){let i=null,n=1/0;for(const r of e){const e=r.getCapital(),o=e.getDistanceSq(t.x,t.y);o<n&&(n=o,i=e)}return i??new B.E}(i,d);m.x=e.x,m.y=e.y}for(let C=0;C<3;++C){s.length=0,l.length=0;for(let t=0;t<9;++t){const i=[];for(let s=0;s<2;++s){const l=Math.PI*(t/9+s);a.set(Math.cos(l),Math.sin(l)),a.multiplyScalar(2),r.set(m.x+a.x,m.y+a.y);for(let t=0;t<1024;++t){const t=h.getProvinceAt(r);if(!(t&&t.getOwnerID()===e||(0,o.Qz)(n,r)))break;r.add(a)}const c=new u.F(r.x,r.y),d=new u.F(r.x-m.x,r.y-m.y);i.push({index:t,distance:d.length(),verticalMalus:this.config.bendedVerticalMalus(l),position:c,spread:d})}const[c,d]=i;c.position.add(d.position),c.position.multiplyScalar(.5);const f={index:c.index,distance:c.distance+d.distance,distanceA:c.distance,distanceB:d.distance,spreadA:c.spread,spreadB:d.spread,position:c.position,verticalMalus:c.verticalMalus};s.push(f),l.push(f)}l.sort(((e,t)=>t.distance*t.verticalMalus-e.distance*e.verticalMalus)),r.copy(l[0].position),m.copy(r)}const{index:g,distance:p}=l[0],v=Math.PI*g/9,x=v<.5*Math.PI?-v:Math.PI-v,S=Math.min(p/160,8),y=s[Math.floor(g+4.5)%9];let _=1;const w=.01+.02*S;y.distanceA>y.distanceB?r.addScaledVector(y.spreadA,w):(r.addScaledVector(y.spreadB,w),_=-1);const b={scale:S,angle:x,flip:_};return{name:t,position:r,distance:p,geometry:this.bendedNationNamesTP.precalculateBendedGeometry(t,b),debug:c}}async paintBendedNationNames(){if(!this.config.paintBendedNationNames||this.fontRenderingReady.isFalse)return;this.bendedNationNamesNeedUpdate++;const e=this.gameState.getMapState(),t=this.viewport.totalWidth,i=[...this.nationNamesCache.keys()],n=[],r=Object.values(hup.gameState.getPlayerState().getPlayers());for(const o of r){if(!o.hasCapital()||o.getPlayerID()<=0)continue;await(0,C.Dc)(0);const r=o.getPlayerID();let a=o.getNationName();this.config.mapFont.upperCase&&(a=a.toUpperCase()),this.config.mapFont.removeAccents&&(a=(0,Q.HT)(a));const s=ze(e.getProvincesForPlayer(r)).sort(((e,t)=>t.length-e.length)).splice(0,3),l=this.nationNamesCache.get(r),c=[];for(const[e,i]of s.entries()){const o=ke(i);let s=null==l?void 0:l[e];if(!s||s.hash!==o){const e=Fe(i,t);s=this.precalculateBendedGeometry(r,a,i,e),s.hash=o}n.push(s),c.push(s)}i.splice(i.indexOf(r),1),this.nationNamesCache.set(r,c)}if(i.forEach((e=>this.nationNamesCache.delete(e))),0==--this.bendedNationNamesNeedUpdate){const{bendedNameScale:e,bendedNameMaxSize:t}=this.config;this.bendedNationNamesTP.begin();for(const{name:i,position:r,distance:o,geometry:a}of n){const{boundingBox:n}=a;let s=o/new u.F(n.x-n.z,n.y-n.w).length()*e;s=Math.min(s,t),this.bendedNationNamesTP.print(r,i,void 0,s,void 0,a)}this.bendedNationNamesTP.end(),this.bendedNamesInitialized.set()}}updateCapitalNames(e){if(this.fontRenderingReady.isFalse)return;const t=this.config.provinceNamesVerticalOffset??14,i=new u.F(0,t);this.capitalNamesTP.offset=i,this.provinceNamesTP&&(this.provinceNamesTP.offset=i),this.selectedProvinceNamesTP&&(this.selectedProvinceNamesTP.offset=i),this.cityNamesTP.offset=i,this.config.paintPlayerNames&&(this.playerNamesTP.offset=i,this.updatePlayerNames()),this.config.paintNationNames&&this.paintNationNames();(e?Promise.all(Object.values(e)).then((()=>(0,C.Dc)(1e3))):Promise.resolve()).then((()=>this.paintBendedNationNames())),this.updateProvinceNames(),this.updateProvinceCapital()}updateProvinceNamesWithoutVictoryPoints(){var e,t;if(this.fontRenderingReady.isFalse)return;const i=new u.F(0,0),n=new u.F(0,this.config.provinceTitleOffset),r=new u.F,a=this.gameState.getMapState().getProvinceArray(),s=this.capitalFontCfg;this.capitalNamesTP.begin(),this.cityNamesTP.begin(),null===(e=this.provinceNamesTP)||void 0===e||e.begin();for(let o=0;o<a.length;++o){const e=a[o],t=e.getCapital();let n=e.getName();if(this.config.mapFont.upperCase&&(n=n.toUpperCase()),this.config.mapFont.removeAccents&&(n=(0,Q.HT)(n)),e.isUrbanOrCapital()?i.set(t.x,t.y+this.config.provinceTitleOffsetBig):i.set(t.x,t.y+this.config.provinceTitleOffsetSmall),e.isUrbanOrCapital())e.isCapital()?(r.x=.5*this.config.provinceFlagSize,this.capitalNamesTP.print(i,n,e.getLocationID(),s.scale,r)):this.cityNamesTP.print(i,n,e.getLocationID());else if(this.config.names){var l;null===(l=this.provinceNamesTP)||void 0===l||l.print(i,n,e.getLocationID())}}if(this.capitalNamesTP.end(),this.cityNamesTP.end(),null===(t=this.provinceNamesTP)||void 0===t||t.end(),this.config.paintCityNameBackground){const e=new u.F,t=new w.U,i=new o.Zm(this.capitalFontCfg.backgroundStyle),r=new o.Zm(this.cityFontCfg.backgroundStyle),a=(e,t,i,n)=>{n.x=e.x+i.x-t.padding.left,n.y=-i.y+t.padding.top+1,n.width=e.z-e.x+t.padding.left+t.padding.right,n.height=this.config.provinceFlagSize};this.textBackgroundCRS.begin(),n.x=0,this.cityNamesTP.boundingBoxes.forEach(((i,o)=>{a(i,s,n,t),this.textBackgroundCRS.rect(t,r,this.cityNamesTP.getPosition(o),e)})),this.textBackgroundCRS.end(),this.capitalBackgroundCRS.begin(),n.x=.5*this.config.provinceFlagSize,this.capitalNamesTP.boundingBoxes.forEach(((r,o)=>{a(r,s,n,t),this.capitalBackgroundCRS.rect(t,i,this.capitalNamesTP.getPosition(o),e)})),this.capitalBackgroundCRS.end()}}updateProvinceNamesWithVictoryPoints(){var e,t;if(this.fontRenderingReady.isFalse)return;const i=new u.F(0,0),n=new u.F(0,14),r=this.config.provinceNamesVerticalPosition??6;var a;(this.capitalNamesTP.begin(),this.cityNamesTP.begin(),null===(e=this.provinceNamesTP)||void 0===e||e.begin(),this.config.drawVictoryPoints)&&(this.victoryPointsTP.begin(),null===(a=this.victoryPointsBS)||void 0===a||a.begin());const s=this.gameState.getMapState().getProvinceArray();for(let o=0;o<s.length;++o){const e=s[o],t=e.getCapital();let n=e.getName();if(this.config.mapFont.upperCase&&(n=n.toUpperCase()),this.config.mapFont.removeAccents&&(n=(0,Q.HT)(n)),this.config.drawCitiesAndCapitalsSame){if(e.isUrbanOrCapital())(this.config.drawNameWhenCity||this.config.drawNameWhenCapital)&&(i.set(t.x,t.y+r),this.capitalNamesTP.print(i,n,e.getLocationID()),this.printVictoryPoints(i,e));else if(this.config.names&&this.config.drawNameWhenProvince){var l;i.set(t.x,t.y+4),null===(l=this.provinceNamesTP)||void 0===l||l.print(i,n,e.getLocationID()),this.printVictoryPoints(i,e)}}else if(this.config.drawNameWhenCity&&e.isUrban())this.config.drawNameWhenCapital&&e.isCapital()?(this.capitalNamesTP.print(i,n,e.getLocationID()),i.set(t.x,t.y+10),this.printVictoryPoints(i,e)):(i.set(t.x,t.y),this.cityNamesTP.print(i,n,e.getLocationID()),this.printVictoryPoints(i,e));else if(this.config.names&&this.config.drawNameWhenProvince){var c;null===(c=this.provinceNamesTP)||void 0===c||c.print(i,n,e.getLocationID()),this.printVictoryPoints(i,e)}}if(this.capitalNamesTP.end(),this.cityNamesTP.end(),null===(t=this.provinceNamesTP)||void 0===t||t.end(),this.config.paintCityNameBackground){const e=this.capitalFontCfg,t=new u.F,i=new w.U,r=new o.Zm(this.capitalFontCfg.backgroundStyle);this.textBackgroundCRS.begin(),this.capitalNamesTP.boundingBoxes.forEach(((o,a)=>{i.x=o.x+n.x-e.padding.left,i.y=o.y+n.y-e.padding.top,i.width=o.z-o.x+e.padding.left+e.padding.right,i.height=o.w-o.y+e.padding.top+e.padding.bottom,this.textBackgroundCRS.rect(i,r,this.capitalNamesTP.getPosition(a),t)})),this.textBackgroundCRS.end()}var h;this.config.drawVictoryPoints&&(this.victoryPointsTP.end(),null===(h=this.victoryPointsBS)||void 0===h||h.end())}printVictoryPoints(e,t){var i,n,r,o;const a=t.getVictoryPoints();if(!this.config.drawVictoryPoints||!a)return;if(!this.config.drawVictoryPointsWithIcon)return void this.victoryPointsTP.print(e,`✪${a}`);const s=this.assetManager.atlas("main").getMapping("points_3"),{victoryPointsCapitalOffsetY:l,victoryPointsOffsetY:c}=this.config,h=(null===(i=(n=this.config).victoryPointsIconScaler)||void 0===i?void 0:i.call(n,a))??1,d=(null===(r=(o=this.config).victoryPointsTextScaler)||void 0===r?void 0:r.call(o,a))??.35,f=-s.width/2*h,m=(t.isUrbanOrCapital()?l:c)??0,g=new u.F(f,54+m),p=new u.F(f+s.width*h,m);this.victoryPointsBS.billboard({id:"points_3",position:e,offset:g,size:h}),this.victoryPointsTP.print(e,`${a}`,void 0,d,p)}updatePlayerNames(){if(this.fontRenderingReady.isFalse)return;const e=new u.F(0,0),t=new u.F(0,14);this.playerNamesTP.begin();const i=this.gameState.getPlayerState().getFilteredPlayers(!1,!0,0),n=this.gameState.getMapState();for(const o of i){const t=n.getProvince(o.getCapitalID());if(t){let i=o.getName();this.config.mapFont.upperCase&&(i=i.toUpperCase()),this.config.mapFont.removeAccents&&(i=(0,Q.HT)(i));const n=t.getCapital();e.set(n.x,n.y+6),this.playerNamesTP.print(e,i);const r=this.playerNamesTP.getBoundingBox(i);this.playerNameHeight.set(o.getPlayerID(),r.w-r.y)}}this.playerNamesTP.end();const r=this.capitalFontCfg,a=new u.F,s=new w.U,l=new o.Zm(this.capitalFontCfg.backgroundStyle);this.playerBackgroundCRS.begin(),this.playerNamesTP.boundingBoxes.forEach(((e,i)=>{s.x=e.x+t.x-r.padding.left,s.y=e.y+t.y-r.padding.top,s.width=e.z-e.x+r.padding.left+r.padding.right,s.height=e.w-e.y+r.padding.top+r.padding.bottom,this.playerBackgroundCRS.rect(s,l,this.playerNamesTP.getPosition(i),a)})),this.playerBackgroundCRS.end()}initProvincesConnections(e){const t=this.gameState.getMapState().getBorderedLocationsArray().reduce(((e,t)=>e+t.getConnections().length),0),i=this.config.connection,n=i.kinds.map((t=>({...t,image:"string"==typeof t.image?e.image(t.image):void 0})));this.provincesConnectionsSystem=new r.xK(t).init({...i,scene:this.relicScene,renderOrder:1,kinds:n,color:i.color}),this.updateProvincesConnections()}initArmies(e,t,i,n){this.unitImageUsageTracker=new Ve({usageThreshold:32,onRemove:e=>{this.atlasMapper.remove(e)}});const r=this.assetManager.atlas("circle"),[o]=r.getPageTextures(),a=this.config.armyPainter.digitFontName??"font/digits",s={...this.assetManager.manifest.imageMetadata(a).font,texture:t.texture(a)},l=this.gameState.getMod();this.armyPainter=new re({assetManager:this.assetManager,assets:t,gameState:this.gameState,armyController:this.armyController,armySelection:this.armySelection,provinceSelection:this.provinceSelection,commandWithMultipleHandling:this.commandWithMultipleHandling,playerId:this.playerId,mouseController:this.mouseController,scene:this.relicScene,selectionScene:this.selectionScene,frameScene:this.frameScene,glowScene:this.glowScene,unitImageUsageTracker:this.unitImageUsageTracker,flagImageCache:this.flagImageCache,circleTexture:o,circleAM:r,digitFont:s,armyStackName:e,threeConfig:this.threeConfig,config:this.config,attackInterval:l.getAttackInterval(),patrolInterval:l.getPatrolInterval(),airCorridorDegrees:l.getOption(M.f.OPTION_AIR_CORRIDOR_DEGREES),alliances:!!this.gameState.getInGameAllianceState(),unitTypeVisibilityMap:i,armyStatusVisibilityMap:n,wrapX:this.viewport.isContinuous,wrapDistanceX:this.viewport.totalWidth}),this.armiesInitialized.set()}initProvinceCapital(){const e=this.gameState.getPlayerState().getNumberOfPlayers(),t=this.gameState.getMapState().getProvinceArray().length,{atlasMapper:i}=this,{verticalScale:n}=this.config;this.capitalBS=new r.C(8*t).init({scene:this.relicScene,atlasMapper:i,renderOrder:this.config.mapElementsRenderOrder.capital,verticalScale:n}),0===this.config.provinceNamesStyle?this.flagBS=new r.C(2*e).init({scene:this.relicScene,atlasMapper:i,renderOrder:this.config.mapElementsRenderOrder.flags,verticalScale:n}):(this.flagNameBS=new r.C(e).init({scene:this.frameScene,atlasMapper:i,renderOrder:40,verticalScale:n}),this.resourceBGBS=new r.C(t).init({scene:this.relicScene,atlasMapper:i,renderOrder:6,verticalScale:n}));const o=this.config.showResourceIconsOverFow?this.frameScene:this.relicScene;this.resourceBS=new r.C(2*t).init({scene:o,atlasMapper:i,renderOrder:this.config.mapElementsRenderOrder.resources,verticalScale:n}),this.config.drawVictoryPointsWithIcon&&(this.victoryPointsBS=new r.C(t).init({scene:this.frameScene,atlasMapper:i,renderOrder:40,verticalScale:n})),this.iconBS=new r.C(t).init({scene:this.relicScene,atlasMapper:i,renderOrder:7,verticalScale:n}),this.activePlayerBS=new r.C(e).init({scene:this.relicScene,atlasMapper:i,renderOrder:this.config.mapElementsRenderOrder.activePlayer,verticalScale:n}),this.selectedResourceBS=new r.C(t).init({scene:this.relicScene,atlasMapper:i,renderOrder:this.config.mapElementsRenderOrder.selectedResources,verticalScale:n})}initPOI(e){const t=this.gameState.getMapState().getPOIProvinces().length,i=e.atlas("poi");if(t){const e={scene:this.relicScene,atlasMapper:i,renderOrder:4,verticalScale:this.config.verticalScale};this.config.useFlagPoiVisualisation?this.flagPoiBS=new r.C(3*t).init(e):this.poiBS=new r.C(2*t).init(e)}else i.dispose()}initSeaPoints(e){const t=this.gameState.getMapState(),i=t.getLocations().length-t.getProvinceArray().length;this.seaPointsParticleSystem=new r.pc(i).init({scene:this.relicScene,texture:e.texture("mapicon_sea"),renderOrder:1});const n=new S.T,a=new u.F,l=new s.P,c=this.config.mapFrameSkew??0,h=this.config.seaPointsColor??4294967295,d=new o.Zm(h);this.seaPointsParticleSystem.begin();for(const r of t.getLocations())if(r instanceof L.F){const e=r.getCapital();l.set(e.x,e.y,1);const t=l.x-8+l.y*c,i=l.y-8;n.expandByPoint(a.set(t,i));const o=l.x+8+l.y*c,s=l.y+8;n.expandByPoint(a.set(o,s)),this.seaPointsParticleSystem.emit(l,d)}return this.seaPointsParticleSystem.end(),n}initProvincesBorders(){const e={scene:this.fowInnerScene,materialParameters:{blending:h.Xaj,blendEquation:h.Sm8,blendSrc:h.ghN,blendDst:h.ghN,depthTest:!1},highQualitySegments:!1,color:new o.Zm(0,0,1,0)};this.urbanBordersLineSystem=new r.JX,this.provincesBordersLineSystem=new r.JX,this.updateProvincesBorders(),this.urbanBordersLineSystem.init({...e,radius:16}),this.provincesBordersLineSystem.init({...e,radius:this.config.provinceBorderRadius??8}),this.updateProvincesBorders()}initNationsBorders(){let e,t=new o.Zm(0,1,0,0);const i=this.config.encodeWarBordersIntoTexture;if(this.config.useDoubleLineForNationBorders){const i=32,n=(0,Q.vL)(i,i),r=n.getContext("2d");r.clearRect(0,0,i,i),r.beginPath(),r.arc(i/2,i/2,i/2-1,0,2*Math.PI,!0),r.closePath(),r.fillStyle="rgba(0, 255, 0, 1.0)",r.fill();const a=this.config.nationBordersInnerRadius??5;r.beginPath(),r.arc(i/2,i/2,i/a-1,0,2*Math.PI,!0),r.closePath(),r.fillStyle="rgba(0, 255, 255, 1.0)",r.fill(),e=new x.x(n),t=new o.Zm(0,1,1,0)}const{maxNationsBordersLines:n}=this.config.allocations;this.nationsBordersLineSystem=new r.JX(n).init({scene:this.fowInnerScene,materialParameters:{blending:h.Xaj,blendEquation:h.Sm8,blendSrc:h.ghN,blendDst:h.ghN,depthTest:!1},texture:e,radius:this.config.nationBordersTextureSize??32,highQualitySegments:!0,mode:i?r.BV.vertexColor:r.BV.normal,color:i?new o.Zm(1,1,1,1):t}),i||(this.stonesPS=new r.C(this.config.allocations.maxProvinceStoneCount).init({scene:this.relicScene,atlasMapper:this.assetManager.atlas("main"),renderOrder:1}))}initPlaneFow(e,t){const i=this.assetManager.loadTextureWithFallback("map/water_normal");let n;i.wrapS=h.rpg,i.wrapT=h.rpg,i.needsUpdate=!0;{const e=this.assetManager.loadTextureWithFallback("map/rnd");e.wrapS=h.rpg,e.wrapT=h.rpg,e.needsUpdate=!0;const t=this.assetManager.loadTextureWithFallback("map/ocean_height");t.wrapS=h.rpg,t.wrapT=h.rpg,t.needsUpdate=!0,n=(0,o.XT)({sProvinceTarget:{value:this.renderTargetWorld.texture},sFowTarget:{value:this.renderTargetFow.texture},sRelicTarget:{value:this.renderTargetRelic.texture},sWaterNormal:{value:i},sBlurTarget:{value:this.blurredMapTexture},sNoiseColor:{value:e},sOceanTexture:{value:t},uMapRect:{value:new f.L},uBlurRect:{value:new f.L},uVerticalScale:{value:this.config.verticalScale},uScale:{value:1},uOffset:{value:new u.F},uLightPosition:{value:new s.P},uHighlightColor:{value:new s.P},uHighlightPow:{value:0},uDeepWaterColor:{value:new s.P},uDiffuseWaterColor:{value:new s.P},uWaterMove1:{value:new u.F},uWaterMove2:{value:new u.F},uContinuous:{value:0},uTime:{value:.1},uShadowLightDir:{value:new u.F(-.001,6e-4)}})}const r=new m.F({uniforms:n,vertexShader:e,fragmentShader:t,blending:h.bdR,depthTest:!1,depthWrite:!1,transparent:!1,vertexColors:!0});this.planeUniforms=n,this.planeMaterial=r,this.planeGeometry=new v.u;const a=[],l=[],c=[];for(let o=0;o<4;o++){const e=1&o,t=(2&o)>>1;a.push(1e3*e,1e3*t,0),l.push(e,1-t)}c.push(0,2,1),c.push(1,2,3),this.planeGeometry.setIndex(c),this.planeGeometry.setAttribute("position",new g.a$(a,3).setUsage(h.dj0)),this.planeGeometry.setAttribute("uv",new g.a$(l,2)),this.planeMesh=new p.K(this.planeGeometry,this.planeMaterial),this.scene.add(this.planeMesh)}initLasso(e){this.lassoUniforms={uColor:{value:new f.L}},this.lassoMaterial=new m.F({uniforms:this.lassoUniforms,...this.shaderLib.getProgram("coloredPlane"),blending:h.bdR,depthTest:!1,depthWrite:!1,transparent:!0,vertexColors:!0,side:h.ehD});const{maxLassoLength:t}=this.config.allocations;this.lassoGeometry=new v.u;const i=new Uint16Array(3*(t-2));let n=0,r=0;for(;r<i.length;)i[r++]=0,i[r++]=n+2,i[r++]=n+1,++n;this.lassoGeometry.setIndex(new g.Tl(i,1).onUpload(o._c));const a=new Float32Array(3*t);this.lassoGeometry.setAttribute("position",new g.Tl(a,3).setUsage(h.dj0)),this.lassoGeometry.setDrawRange(0,0),(0,o.Ae)(this.lassoGeometry),this.lassoMesh=new p.K(this.lassoGeometry,this.lassoMaterial),this.lassoMesh.renderOrder=e,this.scene.add(this.lassoMesh)}initProvinces(e,t){const i=this.assetManager.loadTextureWithFallback("map/paper_normal");i.wrapS=h.rpg,i.wrapT=h.rpg,i.needsUpdate=!0;const n=(0,o.XT)({sPaperNormal:{value:i},sReliefTarget:{value:null},sShadowTarget:{value:null},sFowTarget:{value:this.renderTargetFow.texture},uScale:{value:1},uLightPosition:{value:new s.P(300,300,1e3)},uHeightTransformation:{value:new u.F(0,0)},uScreenDimensions:{value:new u.F(1,1)},uShadowModelViewMatrix:{value:new y.y},uShadowProjectionMatrix:{value:new y.y}});this.provinces.uniforms=n,n.uHighlightColor={value:new s.P(.6,.55,.5)},n.uHighlightPow={value:10},n.uLightPower={value:.6},n.uAmbient={value:.4},this.renderTargetRelief&&(n.sReliefTarget.value=this.renderTargetRelief.texture);const r=new m.F({uniforms:n,vertexShader:e,fragmentShader:t,blending:h.bdR,depthTest:!0,side:h.Wl3});this.provinces.material=r;const{province:a,simpleProvince:l}=this.provinceGeometryProvider.info,c=this.renderQuality.getGPULevel()===Ie.a.LOW?l:a;this.provinces.geometryInfo=c;const d=new o.ww([["position",Float32Array,3],["normal",Uint8Array,4,!0]]);for(const{vertex:s,index:u}of c.counts){const e=new Uint8Array(4*s),t=new Uint16Array(u),i=d.createGeometry(s);i.setAttribute("color",new g.Tl(e,4,!0).setUsage(h.dj0)),i.setIndex(new g.Tl(t,1).onUpload(o._c)),(0,o.Ae)(i),i.setDrawRange(0,0),this.provinces.geometries.push(i);const n=new p.K(i,this.provinces.material);this.worldScene.add(n),this.provinces.meshes.push(n)}this.generateProvinces(this.provinces.geometries,c,he),(0,o.sZ)(this.renderer,this.provinces.geometries)}initUrbanProvinces(){const e=this.provinceGeometryProvider.info.urban;if(this.config.advancedUrbanProvinces&&0!==e.counts.length){this.urbanProvincesFow.material=new m.F({uniforms:(0,o.XT)({uColor:{value:new o.Zm(this.config.urbanColor)}}),...this.shaderLib.getProgram("constantColor"),blending:h.Xaj,blendEquation:h.Sm8,blendSrc:h.ghN,blendDst:h.ghN,depthTest:!1,opacity:0}),this.urbanProvincesFow.geometryInfo=e;for(const{vertex:t,index:i}of e.counts){const e=new v.u,n=new Float32Array(3*t),r=new Uint16Array(i);e.setIndex(new g.Tl(r,1).onUpload(o._c)),e.setAttribute("position",new g.Tl(n,3).onUpload(o._c)),(0,o.Ae)(e),e.setDrawRange(0,0),this.urbanProvincesFow.geometries.push(e);const a=new p.K(e,this.urbanProvincesFow.material);this.fowInnerScene.add(a)}this.generateProvinces(this.urbanProvincesFow.geometries,e,se),(0,o.sZ)(this.renderer,this.urbanProvincesFow.geometries)}}getCurrentMapView(){return this.config.morale?We:this.config.relation||this.config.relationModeWW2?Xe:He}generateProvinces(e,t){let{locations:i,bevel:n=!1}=t;Me(e,i,n,arguments.length>2&&void 0!==arguments[2]?arguments[2]:ae,{players:this.gameState.getPlayerState().getPlayers(),ownPlayerId:this.playerId,relations:this.gameState.getForeignAffairsState().getRelations(),provinceSelection:this.provinceSelection},this.config)}render(e){if(this.initialized.isFalse)return;this.frameCount++;const t=e-this.lastUpdateTime,i=this.viewport.wasMoving()?this.maxFpsDrag:this.maxFpsIdle;if(this.mapRendered.isTrue&&t<i)return;var r;(this.lastUpdateTime=e,this.time=(this.time+t)%1e8,Ee.J.update(e),this.atlasMapper.needsUpdate)&&(null===(r=this.unitImageUsageTracker)||void 0===r||r.update());const o=this.atlasMapper.update();var s;o!==n.XO.NOT_UPDATED&&(this.provincesNeedsUpdate||this.updateProvinceCapital(),null===(s=this.armyPainter)||void 0===s||s.requestUpdate(),o===n.XO.REMAPPED&&(this.updateProvinceNames(),this.config.renderTerrainIcons&&this.initTerrainIcons(),this.stonesPS&&this.updateWarBorderStones()));let l=!1;const c=this.getCurrentMapView();var h;c!==this.currentMapView&&(l=!0,this.currentMapView=c,null===(h=this.armyPainter)||void 0===h||h.requestUpdate());this.provincesNeedsUpdate?(this.updateProvincesGeometry(),this.updateNationsBorders(),this.updateProvincesConnections(),this.updateProvinceCapital(),this.provincesNeedsUpdate=!1):(l||this.provinceSelectionNeedsUpdate)&&this.updateProvincesGeometry(),this.provinceSelectionNeedsUpdate&&(this.updateSelectedProvinces(),this.provinceSelectionNeedsUpdate=!1);const d=this.viewport,{scale:u}=d,{renderWidth:f,renderHeight:m}=this;if(this.config.hideUrbanProvincesWhenZoomedOut&&this.urbanProvincesFow.material){const e=this.urbanProvincesFow.material.uniforms.uColor.value;u<1.001?e.setRGBA(0,0,0,0):e.set(this.config.urbanColor)}this.camera.left=0,this.camera.right=f/u,this.camera.top=0,this.camera.bottom=m/u/this.config.verticalScale,this.camera.updateProjectionMatrix(),this.stillCamera.left=0,this.stillCamera.right=f/u,this.stillCamera.top=0,this.stillCamera.bottom=m/u,this.stillCamera.updateProjectionMatrix(),this.updateMapUniforms(u),this.provinces.uniforms.uScale&&(this.provinces.uniforms.uScale.value=u);for(let n=0;n<this.scalers.length;++n)this.scalers[n].update(t,u);this.bendedNationNamesTP&&(this.bendedNationNamesTP.fillAlpha=this.config.bendedFillAlpha(u)),this.config.fow?this.fowPainter.update():(this.fowPainter.turnOffFow(),this.fowPainter.requestUpdate()),this.renderMapFrame(u),this.renderPlaneFow(u,d),this.renderProvinceCapital(),this.renderArmies(this.time,t,u),this.renderLasso(d);const{map:g}=this.gameState.getMapState(),p=this.viewport.isContinuous,{sliceWidth:v}=this.provinceGeometryProvider,x=function(e,t,i,n,r){const o=t.length;if(0===o)return[];const a=e=>Math.max(0,Math.min(o-1,e)),s=r?_.kz(i.x,n.width):i.x;let l=Math.floor(s/e),c=Math.floor((s+i.width)/e);for(let d=0;d<l;++d)if((d+t[d].scale)*e>=s){l=d;break}if(r&&c<o)for(let d=c+1;d<o;++d){const i=d+t[d].scale;if(i>o&&i*e%n.width>=s){l=d,c+=o;break}}const h=[];return r&&c>=o&&h.push([0,c%o]),h.push([a(l),a(c)]),h}(v,this.provinces.geometryInfo.slices,d,g,p),S=p?Math.floor((d.x+d.width)/d.totalWidth)*d.totalWidth:0,y=e=>{this.camera.position.set(d.x+d.totalWidth*e-S,d.y,20)};this.stillCamera.position.z=20,this.renderer.autoClear=!1,this.renderer.setRenderTarget(this.renderTargetFow),this.config.fow?(this.renderer.setClearColor(0,0),this.renderer.clearColor()):function(e,t){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;const n=e.getContext();t=new a.I(t),n.clearColor(t.r,t.g,t.b,i),n.clear(n.COLOR_BUFFER_BIT),t.setRGB(NaN,NaN,NaN),e.setClearColor(t,0)}(this.renderer,16711680,0);for(let n=0;n<x.length;++n)y(n),this.renderer.render(this.fowOuterScene,this.camera);for(const[n,[a,_]]of x.entries())y(n),this.config.advancedUrbanProvinces&&Ae(this.urbanProvincesFow,a,_),this.renderer.render(this.fowInnerScene,this.camera);if(this.config.provinceTexturing&&(this.renderer.setRenderTarget(this.renderTargetRelief),this.renderer.setClearColor(0,0),this.renderer.clear(),this.urbanProvinces.geometries.length>0))for(const[n,[a,_]]of x.entries())y(n),Ae(this.urbanProvinces,a,_),this.renderer.render(this.reliefScene,this.camera);this.renderer.setRenderTarget(this.renderTargetWorld),this.renderer.setClearColor(0,0),this.renderer.clear();for(const[n,[a,_]]of x.entries())y(n),Ae(this.provinces,a,_),this.renderer.render(this.worldScene,this.camera);this.renderer.setRenderTarget(this.renderTargetSelection),this.renderer.setClearColor(0,0),this.renderer.clear();for(let n=0;n<x.length;++n)y(n),this.renderer.render(this.selectionScene,this.camera);if(this.config.paintArmyGlow){this.renderer.setRenderTarget(this.renderTargetGlow),this.renderer.setClearColor(0,0),this.renderer.clear();for(let e=0;e<x.length;++e)y(e),this.renderer.render(this.glowScene,this.camera)}this.renderer.setRenderTarget(this.renderTargetRelic),this.renderer.setClearColor(0,0),this.renderer.clear();for(let n=0;n<x.length;++n)y(n),this.renderer.render(this.relicScene,this.camera);this.fowPainter.renderFowBlur(this.renderTargetFow.texture,this.renderer),this.renderer.autoClear=!1,this.renderer.setRenderTarget(null),this.renderer.render(this.scene,this.stillCamera);for(let n=0;n<x.length;++n)y(n),this.renderer.render(this.frameScene,this.camera);this.cloudsCS&&(this.cloudsCS.center.set(d.width/2,d.height/2),this.cloudsCS.uniformScale=u,this.cloudsCS.time=3e-4*this.time,this.camera.position.set(d.x,d.y,20),this.renderer.render(this.cloudScene,this.camera)),this.camera.position.set(_.kz(d.x,d.totalWidth),d.y,20),this.mapRendered.set()}renderMapFrame(e){this.config.mapFrame&&Object.values(this.mapFrame).forEach((t=>t.setScale(e)))}initLight(){const e=e=>(e=new a.I(e),new s.P(e.r,e.g,e.b)),t=this.config;this.sunColorDay=e(t.sunColorDay),this.sunColorNight=e(t.sunColorNight),this.sunColorUp=e(t.sunColorUp),this.sunColorDown=e(t.sunColorDown),this.waterColorDay=e(t.waterColorDay),this.waterColorNight=e(t.waterColorNight),this.waterColorUp=e(t.waterColorUp),this.waterColorDown=e(t.waterColorDown),this.diffuseWaterColorDay=e(t.diffuseWaterColorDay),this.diffuseWaterColorNight=e(t.diffuseWaterColorNight)}updateMapUniformsForOverLayColoring(e){const t=e=>(e=new a.I(e),new s.P(e.r,e.g,e.b)),i=(e,t)=>{let i=this.planeUniforms[e];i&&(i.value=t),i=this.provinces.uniforms[e],i&&(i.value=t)},n=this.config.horizontalLightScale??.2,r=this.config.verticalLightScale??.2,o=this.config.zLightPosition??1200;this.light.position.set(this.renderWidth*n,this.renderHeight*r,o),this.light.color.setRGBA(.9,.8,.7),this.light.power=64,this.planeUniforms.uLightPosition.value.copy(this.light.position),this.provinces.uniforms.uLightPosition.value.copy(this.light.position),this.config.mapFrame&&Object.values(this.mapFrame).forEach((e=>e.setLight(this.light))),this.config.relation?i("uCountryDesaturation",1):i("uCountryDesaturation",.6-.05*e),i("uFowIntensity",.25),i("uLandLightening",.3),i("uLandDiffuseFactor",1),i("uLandSpecularFactor",.05),i("uLandShininess",800),i("uWaterDiffuseColor",t(this.config.waterDiffuseColor)),i("uWaterDepthColor",t(this.config.waterDepthColor)),i("uWaterDiffuseFactor",1),i("uWaterSpecularColor",t(7051156)),i("uWaterSpecularFactor",.6),i("uWaterShininess",100),i("uTerrainUvScale",.0035),i("uPaperUvScale",.001),i("uPaperFactor",Math.min(Math.max(.5/e,0),1)),i("uDetailFactor",.4),i("uWaterUvScale1",.005),i("uWaterUvScale2",.015),i("uDeepWaterUvScale",1e-4),i("uDeepWaterFactor",.6);const l=3e-4*this.time;i("uWaterMove1",new u.F(.93*l,1.17*l)),i("uWaterMove2",new u.F(-.39*l,-.57*l)),i("uTime",l),i("uGradient",4),i("uGradientOffset",.92)}updateMapUniformsDayNigthMode(){const e=.5,t=.6*this.renderWidth,i=.6*this.renderHeight,n=Math.abs(Math.cos(e)),r=1-Math.abs(Math.cos(e)),o=Math.cos(e)>0,a=new s.P,l=new s.P;let c,h,d;o?(a.copy(this.sunColorDay),a.addScaledVector(this.sunColorDown,r),a.addScaledVector(this.sunColorUp,1-r),l.copy(this.waterColorDay),l.addScaledVector(this.waterColorDown,r),l.addScaledVector(this.waterColorUp,1-r),c=this.diffuseWaterColorDay,h=new u.F(-Math.sin(e)*t,Math.cos(e)*i),d=2+40*n):(a.copy(this.sunColorNight),l.copy(this.waterColorNight),h=new u.F(Math.sin(e)*t,-Math.cos(e)*i),c=this.diffuseWaterColorNight,d=100),l.copy(this.waterColorDay),this.light.position.set(h.x+.5*this.renderWidth,Math.abs(h.x)-.1*this.renderWidth,h.y),this.light.position.z*=o?.4:.2,this.light.color.setRGBA(a.x,a.y,a.z),this.light.power=d,this.planeUniforms.uLightPosition.value.copy(this.light.position),this.planeUniforms.uHighlightColor.value.copy(a),this.planeUniforms.uDeepWaterColor.value.copy(l),this.planeUniforms.uDiffuseWaterColor.value.copy(c),this.planeUniforms.uHighlightPow.value=this.light.power;const f=.008*this.time;this.planeUniforms.uWaterMove1.value.set(.053*f,.077*f),this.planeUniforms.uWaterMove2.value.set(-.09*f,-.031*f),this.planeUniforms.uTime.value=3e-4*this.time,this.planeUniforms.uShadowLightDir.value.set(-.001,6e-4),this.provinces.uniforms.uLightPosition.value.copy(this.light.position),this.provinces.uniforms.uHighlightColor.value.copy(a),Object.values(this.mapFrame).forEach((e=>e.setLight(this.light))),this.light.position.copy(this.provinces.uniforms.uLightPosition.value),this.light.color.copy(this.planeUniforms.uHighlightColor.value),this.light.power=this.planeUniforms.uHighlightPow.value}getDisplacementScale(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.viewport.scale;return this.config.displacementScale(e)}getArmyScale(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.viewport.scale;return this.config.armyScale(e)}renderArmies(e,t,i){this.armyPainter&&(this.config.armies?this.armyPainter.update(e,t,i):this.armyPainter.reset())}updateProvincesConnections(){const e=new u.F,t=new u.F;let i,n;this.provincesConnectionsSystem.begin();const r=this.gameState.getMapState().getBorderedLocationsArray();for(let o=0;o<r.length;++o){const a=r[o],s=a.getConnections();if(s.length){n=this.config.showRailUpdateLevel?Math.min(Math.round(3*s[0].getRailValue(null,a)),3):a.isOnSea()?2:a.isNeutral()?0:s[0].getRailValue(null,a)>0?1:0;for(let r=0;r<s.length;++r)i=s[r],i.getType()||(e.x=i.x0,e.y=i.y0,t.x=i.x1,t.y=i.y1,this.provincesConnectionsSystem.connection(e,t,n))}}this.provincesConnectionsSystem.end()}renderProvinceCapital(){this.victoryPointsTP&&(this.victoryPointsTP.enabled=this.config.drawVictoryPoints),this.paintResources!==this.config.resources&&(this.paintResources=this.config.resources,this.updateProvinceCapital())}renderPlaneFow(e,t){let i=this.renderWidth,n=this.renderHeight;const{viewport:r}=this;this.planeUniforms.uContinuous.value=Number(r.isContinuous),this.planeUniforms.uScale.value=e,void 0!==this.planeUniforms.uProvinceBorderFade&&(this.planeUniforms.uProvinceBorderFade.value=1.1*this.config.scaleMin);const o=this.planeUniforms.uOffset.value;o.x=t.x/i,o.y=t.y/n*this.config.verticalScale;const a=this.planeUniforms.uMapRect.value;a.x=r.x,a.y=r.totalHeight-r.y-r.height,a.z=r.width,a.w=r.height;const s=this.planeUniforms.uBlurRect.value;s.x=r.x/r.totalWidth,s.y=1-(r.y+r.height)/r.totalHeight,s.z=r.width/r.totalWidth,s.w=r.height/r.totalHeight,this.config.advancedFoW&&this.planeUniforms.uFowOffset.value.set(1/this.renderWidth,1/this.renderHeight);const l=this.planeGeometry.attributes.position.array;i/=e,n/=e;for(let c=0;c<4;c++){const e=1&c,t=(2&c)>>1;l[3*c+0]=e*i,l[3*c+1]=t*n}this.planeGeometry.attributes.position.needsUpdate=!0}renderLasso(e){const{lassoPolygon:t,provinceSelectionMode:i}=this.mouseController.getLassoTool(),n=this.lassoGeometry.getAttribute("position"),r=n.array,o=Math.min(n.count,t.length);for(let l=0;l<o;++l){const e=3*l;r[e+0]=t[l].x,r[e+1]=t[l].y*this.config.verticalScale}this.lassoGeometry.attributes.position.needsUpdate=!0,this.lassoGeometry.drawRange.count=3*Math.max(o-2,0);const a=i?.5:.2,s=i?.2:.5;this.lassoUniforms.uColor.value.set(.2,a,s,.15),this.lassoMesh.position.x=-e.x,this.lassoMesh.position.y=-e.y*this.config.verticalScale}initTerrainIcons(){const e=this.gameState.getMapState().getProvinceArray();this.terrainIconsBS.begin();for(const t of e){const e=Ue(t),i=new o.Zm(1,1,1,this.config.terrainIconsAlpha??.1),n=this.config.terrainIconsSize??.7,r=t.getTerrainType(),a=`terrain_icons/icon_${I.K.getKey(r).toLowerCase()}`;this.terrainIconsBS.billboard({id:a,position:e,size:n,color:i})}this.terrainIconsBS.end()}onProvinceChanged(){var e;this.provincesNeedsUpdate=!0,null===(e=this.fowPainter)||void 0===e||e.requestUpdate()}onProvinceSelectionChanged(){this.provinceSelectionNeedsUpdate=!0}updateProvinceTexture(){const e=this.gameState.getMapState(),{map:t}=e,i=this.assetManager.atlas("province"),n=new u.F,[r,o,a]=["hill","trees","terrain_mountain"].map((e=>this.assetManager.manifest.search(`relief/${e}_`)));let s=1,l=0,c=0,h=0;const d=e=>Math.floor(666*(Math.sin(e)+1));let f,m=0;this.provinceTextureBS.begin();for(let u=0;u<t.height;u+=12)for(let i=0;i<t.width;i+=24){n.set(i+24*Math.sin(l)/4,u+12*Math.sin(c)/4),s=.25+.05*Math.sin(h);const t=e.getProvinceAt(n);if(t){const e=t.getTerrainType();e===I.K.FOREST?(f=d(l+c)%o.length,this.provinceTextureBS.billboard({id:o[f],position:n,size:s})):e===I.K.HILLS&&(m%4==1&&(f=d(l+c)%r.length,this.provinceTextureBS.billboard({id:r[f],position:n,size:s})),++m)}l+=1371.57193,c+=2341.12126,h+=4351.35483}const g=i.getMapping(a[0]).width/8,p=e.getLocations(T.J.locationFilter.NOT_ON_SEA);for(const u of p){if(u.getTerrainType()===I.K.MOUNTAIN){const e=u.getTerrainMarkerPositions(g);for(let t=0;t<e.length;++t)f=d(l)%a.length,n.set(e[t].x,e[t].y),s=.17+.1*Math.sin(h),this.provinceTextureBS.billboard({id:a[f],position:n,size:s}),l+=1371.57193,h+=4351.35483}}this.provinceTextureBS.end()}updateProvincesGeometry(){const e={[He]:se,[We]:le,[Xe]:ce},t=this.getCurrentMapView(),{geometries:i,geometryInfo:n}=this.provinces,r=e[t]??ae;this.generateProvinces(i,n,r)}updateSelectedProvinces(){const e=this.provinceSelection.getSelectedProvinces(),t=this.assetManager.atlas("main"),i=new u.F,n=new u.F;if(this.selectedResourceBS.begin(),!this.config.resources)for(const o of e){const e=o.getCapital(),r=this.gameState.getMod().getResourceEntry(o.getProductionType());if(r&&!r.isHidden()){const r=this.getResourceImageId(o.getProductionType(),o.isDoubleProduction()),a=t.getMapping(r);i.set(e.x-2,e.y),n.set(.75*-a.width,-2),this.selectedResourceBS.billboard({id:r,position:i,offset:n})}}const r=t.getMapping("mapicon_rallypoint");if(r){n.set(8,-10);for(const t of e){const e=t.getDeploymentArmy();if(e){const t=e.getCommands();t.length>0&&this.selectedResourceBS.billboard({image:r,position:t[t.length-1].targetPos,offset:n})}}}if(this.selectedResourceBS.end(),!this.fontRenderingReady.isFalse&&this.selectedProvinceNamesTP){this.selectedProvinceNamesTP.begin();for(let t=0;t<e.length;++t){const n=e[t],r=n.isUrbanOrCapital();if(this.config.armyPainter.useDiamondArmyStacks||!r&&!this.config.names){let e=n.getName();const t=n.getCapital();this.config.mapFont.upperCase&&(e=e.toUpperCase()),this.config.mapFont.removeAccents&&(e=(0,Q.HT)(e)),i.set(t.x,t.y+4),this.selectedProvinceNamesTP.print(i,e,n.getLocationID())}}this.selectedProvinceNamesTP.end()}}getResourceImageId(e){return`resources/${e}${arguments.length>1&&void 0!==arguments[1]&&arguments[1]?"_double":""}`}onArmyChanged(e){var t,i;if(e.type!==te.q.UI_ARMY_HOVER_CHANGED.type){var n;if(e.type===te.q.UI_ARMY_STATE_UPDATED.type&&(null===(t=e.data)||void 0===t||!t.simulation))null===(n=this.armyPainter)||void 0===n||n.resetArmyLayout();null===(i=this.armyPainter)||void 0===i||i.requestUpdate()}}onArmyVisibilityFlagsChanged(){var e;null===(e=this.armyPainter)||void 0===e||e.requestUpdate()}beginProvinceCapitalBillboardSystems(){var e,t;this.capitalBS.begin(),this.flagBS.begin(),this.resourceBS.begin(),this.iconBS.begin(),null===(e=this.poiBS)||void 0===e||e.begin(),null===(t=this.flagPoiBS)||void 0===t||t.begin()}endProvinceCapitalBillboardSystems(){var e,t;this.iconBS.end(),this.resourceBS.end(),this.flagBS.end(),this.capitalBS.end(),null===(e=this.poiBS)||void 0===e||e.end(),null===(t=this.flagPoiBS)||void 0===t||t.end()}updateProvinceCapitalSimple(){const e=new u.F,t=new u.F;this.beginProvinceCapitalBillboardSystems();const i=this.gameState.getPlayerState().getPlayers(),n=this.gameState.getForeignAffairsState().getRelations(),r=A.N.simpleReverse,a=this.playerId,s=this.gameState.getMapState().getProvinceArray();for(let l=0;l<s.length;++l){const c=s[l],h=c.getCapital();let d=this.config.defaultDrawCityGroundImage;if(this.config.upgrades){const i=c.getUpgrades();for(const n of i)if(n&&(n.isIntact()||n.isConditionUnknown())&&!n.hasInvisibleFeature()){const i=n.getFeatureImageName();if(i){e.x=h.x,e.y=h.y,t.set(0,0);const r=n.getRelativePosition();r&&(e.x+=r.x,e.y+=r.y,t.x+=r.x),this.capitalBS.billboard({id:`features/${i}`,position:e,offset:t,size:this.config.cityIconSize})}n.getUpgradeType().hasFeature(D.M.FORTRESS)&&(d=!1)}if(d){const e="features/mapicon_0_0_urban";c.isUrban()&&this.atlasMapper.getMapping(e)?this.capitalBS.billboard({id:e,position:h}):this.capitalBS.billboard({id:"features/mapicon_0_0",position:h})}this.paintRevolt(c,h)}c.getActiveQuests().forEach((()=>{t.set(-10,-15),e.set(h.x,h.y),this.iconBS.billboard({id:"parachute",position:e,offset:t,size:.15})}));const u=c.getOwnerID(),f=i[u];if(this.config.capitalFlags&&c.isCapital()&&!f.isPassiveAI()){const e=this.flagImageCache.get(u),i=r[n.simpleRelationBetween(u,a)],s=`flag_${"player"===i?"ally":i}`,l=this.flagBS.atlasMapper.getMapping(s);e&&l&&(t.x=0,t.y=-.5*l.height,this.flagBS.billboard({image:l,position:h,offset:t,color:new o.Zm(4294967295)}),t.y-=l.width/4-2,this.flagBS.billboard({image:e,position:h,offset:t,color:new o.Zm(4294967280)}))}if(this.config.resources&&c.getProductionType()>=0){const i=c.getProductionType();if(this.config.drawResource(this.gameState.getMod().getResourceEntry(i))){const n=c.isDoubleProduction(),r=this.getResourceImageId(i,n),o=this.assetManager.atlas("main").getMapping(r);if(o&&(!this.config.showOnlyPlayerResources||c.getOwnerID()===this.playerId)){if(c.isUrban()&&this.config.resourceIconShowNextToUrbanName){const i=this.capitalNamesTP.getBoundingBox(c.getLocationID()),n=this.config.provinceNamesVerticalPosition??6;e.set(h.x,h.y+n),i?t.set(i.z-i.x+o.width/4,i.w-i.y+o.height/2):t.set(0,0)}else{const{x:i,y:n}=this.config.resourceIconsOffset;t.set(i,n),e.set(h.x-6,h.y)}let i=this.config.resourceIconsSize??.7;n&&this.config.biggerDoubleResources&&(i*=1.3,e.x-=5),this.resourceBS.billboard({image:o,position:e,offset:t,size:i})}}}this.gameState.getMod().hasImpactMarkers()&&this.paintImpactMarkers(c),this.paintPoi(c,h,t),this.updateProvinceCapitalAdditionalSystems(c)}this.endProvinceCapitalBillboardSystems(),this.paintPlayerStatus()}paintPoi(e,t,i){if(e.isPOI()&&(this.poiBS||this.flagPoiBS))if(this.config.useFlagPoiVisualisation){const n=e.getOwnerID(),r=hup.gameState.getPlayerProfile(n);let s;if(this.config.relation){const{relations:e}=this.gameState.getForeignAffairsState(),t=e.simpleRelationBetween(this.playerId,n),i={0:"player",1:"neutral",2:"ally",3:"enemy"},r=this.config.relationColors[i[t]];s=new o.Zm(r)}else s=this.config.morale?new o.Zm(new a.I((0,Q.iY)(e.getMorale()/100,1))):new o.Zm(r.getPrimaryColor());s.multiplyScalar(.5),s.a=.5;const l=1.2;e.isCapital()?(i.set(0,-76),this.flagPoiBS.billboard({id:"poi_pointer_big_mask",position:t,offset:i,size:l,color:s}),this.flagPoiBS.billboard({id:"poi_pointer_big",position:t,offset:i,size:l}),i.set(0,-128)):(i.set(0,-64),this.flagPoiBS.billboard({id:"poi_pointer_small_mask",position:t,offset:i,size:l,color:s}),this.flagPoiBS.billboard({id:"poi_pointer_small",position:t,offset:i,size:l}),i.set(0,-76)),this.flagPoiBS.billboard({id:"poi_icon",position:t,offset:i,size:l})}else{var n;((null===(n=this.gameState.getScenarioState())||void 0===n?void 0:n.isPoiShowIcon())??!0)&&(i.set(-110,-110),this.poiBS.billboard({id:"poi_0",position:t,offset:i,size:1.2}));const r=e.getOwnerProfile().getPrimaryColor(),a=new o.Zm(r);a.multiplyScalar(.4),a.a=.5,this.poiBS.billboard({id:"poi_circle",position:t,size:.8,color:a})}}updateProvinceCapitalAdditionalSystems(e){}updateProvinceCapitalAdvanced(){var e,t,i,n,r,a,s,l,c;const h=(e,t)=>{const i=e.getUpgradeType();return i.getSortOrders()?i.getMapSortOrder()-t.getUpgradeType().getMapSortOrder():t.getUpgradeType().getIconPosY()-i.getIconPosY()},d=new u.F,f=new u.F,m=this.config.drawVictoryPoints&&1===this.config.provinceNamesStyle;let g=0,p=0;this.capitalBS.begin(),null===(e=this.poiBS)||void 0===e||e.begin(),this.resourceBS.begin(),null===(t=this.resourceBGBS)||void 0===t||t.begin(),this.iconBS.begin(),null===(i=this.flagBS)||void 0===i||i.begin(),null===(n=this.flagNameBS)||void 0===n||n.begin(),m&&this.victoryPointsTP.begin();const v=(null===(r=this.gameState.getScenarioState())||void 0===r?void 0:r.isPoiShowIcon())??!0,x=[...this.assetManager.atlas("poi").mappings.keys()??[]].filter((e=>/poi_\d+/.test(e))),S=this.gameState.getMapState().getProvinceArray();for(let u=0;u<S.length;++u){const e=S[u],t=e.getCapital();if(this.config.upgrades){this.capitalBS.billboard({id:"features/mapicon_0_0",position:t});const i=e.getUpgrades().sort(h);for(let e=0;e<i.length;e++){const n=i[e];if(n&&(n.isIntact()||n.isConditionUnknown())){const e=n.getFeatureImageName();if(e){const i=n.getRelativePosition();i?({x:g,y:p}=i):(g=0,p=0),d.set(t.x+g,t.y+p),this.capitalBS.billboard({id:`features/${e}`,position:d})}}}}this.config.capitalFlags&&this.paintCapitalFlag(e,t),this.paintRevolt(e,t);const i=e.getActiveQuests();for(let n=0;n<i.length;n++)f.set(-15,-5),d.set(t.x,t.y-15),this.iconBS.billboard({id:"parachute",position:d,offset:f});if(this.paintProvinceResources(e,t),this.config.battleFlames){var y;((null===(y=this.mapInfo)||void 0===y?void 0:y.hasBattle(e.getLocationID()))??e.hasBattle())&&this.capitalBS.billboard({id:"map_flame",position:t})}if(e.isPOI()&&this.poiBS){if(v){const i=x[e.getLocationID()%x.length];i&&(f.set(60,-60),d.set(t.x+5,t.y-5),this.poiBS.billboard({id:i,position:d,offset:f}))}const i=e.getOwnerProfile().getPrimaryColor(),n=new o.Zm(i);n.multiplyScalar(.4),n.a=.5,this.poiBS.billboard({id:"poi_circle",position:t,size:.8,color:n})}this.gameState.getMod().hasImpactMarkers()&&this.paintImpactMarkers(e)}this.capitalBS.end(),this.iconBS.end(),this.resourceBS.end(),null===(a=this.resourceBGBS)||void 0===a||a.end(),null===(s=this.flagBS)||void 0===s||s.end(),null===(l=this.flagNameBS)||void 0===l||l.end(),null===(c=this.poiBS)||void 0===c||c.end(),m&&this.victoryPointsTP.end(),this.paintPlayerStatus()}paintResourcesOnly(e,t){if(!this.config.resources)return;const i=this.gameState.getMod().getResourceEntry(e.getProductionType());if(i&&!i.isHidden()){const i=this.getResourceImageId(e.getProductionType(),e.isDoubleProduction()),n=this.assetManager.atlas("main").getMapping(i);n&&this.resourceBS.billboard({image:i,position:new u.F(t.x-2,t.y),offset:new u.F(.75*-n.width,-2)})}}paintResourcesWithVictoryPoints(e,t){if(this.fontRenderingReady.isFalse)return;const i=new u.F,n=new u.F,r=new u.F,a=new o.Zm(this.cityFontCfg.backgroundStyle);let s,l;e.isUrbanOrCapital()?(s=this.config.provinceTitleOffsetBig,l=this.config.provinceDetailOffsetBig):(s=this.config.provinceTitleOffsetSmall,l=this.config.provinceDetailOffsetSmall),i.set(t.x,t.y+s),n.set(0,l),r.set(0,l);const c=this.assetManager.manifest.search("icon_background").sort();let h,d,f;if(this.config.resources){const t=this.gameState.getMod().getResourceEntry(e.getProductionType());t&&!t.isHidden()&&(d=this.getResourceImageId(e.getProductionType(),e.isDoubleProduction()),n.x=-this.config.provinceDetailOffsetX,h=c[0],e.isDoubleProduction()&&(h=c[1],n.x-=this.config.provinceDetailOversizeX))}if(e.getVictoryPoints()&&(r.x=this.config.provinceVPOffsetX,f=c[1],e.getVictoryPoints()>9&&(f=c[2],r.x+=this.config.provinceVPOversizeX)),n.x)if(r.x){const e=n.x+r.x;n.x-=e,r.x-=e}else n.x=0;else r.x=0;if(d&&(this.resourceBGBS.billboard({id:h,position:i,offset:n,size:.2,color:a}),this.resourceBS.billboard({id:d,position:i,offset:n,size:.9})),f&&(this.resourceBS.billboard({id:f,position:i,offset:r,size:.2,color:a}),this.fontRenderingReady.isTrue))if(this.config.mapFont.victoryPoints.useIcon){r.x+=15,r.y-=3;const t=`${e.getVictoryPoints()}`,n=new u.F(r.x-35,r.y+3);this.resourceBS.billboard({id:"VP_icon",position:i,offset:n,size:.35}),this.victoryPointsTP.print(i,t,void 0,.33,r)}else{r.x+=.1,r.y-=3;const t=`✪${e.getVictoryPoints()}`;this.victoryPointsTP.print(i,t,void 0,.33,r)}}paintPlayerStatus(){this.activePlayerBS.begin();const e=new u.F(0,-22),t=this.gameState.getPlayerState().getPlayers();for(const i in t){if(!Object.prototype.hasOwnProperty.call(t,i)||i<1)continue;const n=t[i],r=n.getCapitalCoords();let o=null;if(this.config.paintProvincePlayerIcon&&r&&!n.isPassiveAI()&&!n.isComputerPlayer()){o=n.isComputerPlayer()?"players/ai_ingame_icon":n.isActivePlayer()?"players/real_player_ingame_icon":"players/inactive_player_ingame_icon";const t=n.getPlayerID();e.y=-.8*(this.playerNameHeight.get(t)??37.5)+8,this.activePlayerBS.billboard({id:o,position:r,offset:e,size:1.5})}}this.activePlayerBS.end()}paintImpactMarkers(e){const t=e.getImpacts();if(null==t||!t.length)return;const i=new u.F,n=new o.tm(e.getLocationID()),r=this.gameState.getGameInfoState().getClientTime(),a=this.assetManager.atlas("main");for(const o of t){if(o.hasExpired(r))continue;const e=[];let t=o.getCount();if(o.isNuclear()){t=Math.min(3,t);for(let i=0;i<t;i++)e.push("crater_nuclear")}else{const i=o.isNormal()?0:2,n=Math.min(5,t/100),r=Math.min(4,t%100/25+1);for(let t=0;t<n;t++)e.push(`crater_${i+1}`);for(let t=0;t<r;t++)e.push(`crater_${i}`)}const s=o.getPosition(),l=o.isNuclear()?.5:5;for(let r=0;r<e.length;r++){const t=a.getMapping(e[r]);if(t){const e=t.width/4,r=t.height/4;i.x=(n.next()-.5)*e*l-e/2,i.y=(n.next()-.5)*r*l-r/2,this.capitalBS.billboard({image:t,offset:i,position:s})}}}}paintRevolt(e,t){e.isRevolting()&&this.capitalBS.billboard({id:"capital_smoke",position:t,offset:new u.F(40,-64)})}paintCapitalFlagPole(e,t){if(!e.isCapital())return;const i=this.flagImageCache.get(e.getOwnerID()),n=this.flagBS.atlasMapper.getMapping("pole");if(i&&n){const e=new u.F,r=.9;e.set((6-.5*n.width)*r,.5*-n.height*r),this.flagBS.billboard({image:n,position:t,offset:e,size:r}),e.set(.5*i.width*r,(.5*i.height-n.height)*r),this.flagBS.billboard({image:i,position:t,offset:e,size:r})}}paintCapitalFlagName(e,t){if(!e.isCapital())return;const i=this.flagImageCache.get(e.getOwnerID(),R.V.PLAYER_SQUARE),n=this.capitalNamesTP.getBoundingBox(e.getLocationID());if(i&&n){const e=this.capitalFontCfg;this.flagNameBS.billboard({image:i,position:new u.F(t.x,t.y+this.config.provinceTitleOffsetBig),offset:new u.F(n.x-e.padding.left+1,.5*e.padding.top+this.config.provinceTitleOffset),size:this.config.provinceFlagSize/i.height})}}updateProvincesBorders(){const e=this.gameState.getMapState(),t=new E(this.urbanBordersLineSystem),i=new E(this.provincesBordersLineSystem,t.linesDrawn);this.urbanBordersLineSystem.begin(),this.provincesBordersLineSystem.begin();const n=this.config.provinceBorderLineCheck??((e,t)=>!(t&Re.u.COAST)),r=[T.J.locationFilter.NOT_ON_SEA_URBAN,T.J.locationFilter.NOT_ON_SEA],o=[t,i];for(let a=this.config.thickUrbanBorders?0:1;a<2;++a){const t=e.getLocations(r[a]),i=o[a];for(let e=0;e<t.length;e++)i.drawLocationBorders(t[e],n)}this.urbanBordersLineSystem.end(),this.provincesBordersLineSystem.end()}calcBorderStones(e,t,i){const n=e.getLocationID(),r=e.getOwnerID(),{playerId:o}=this,a=o===r,s=this.gameState.getForeignAffairsState().getRelations(),l=this.gameState.getMapState(),c=Math.round(16/1.5),h=Math.round(16/1.5),d=1*this.config.borderStoneDistance*.5,u=e.getBorderSegments(Re.u.INTER|Re.u.REVOLT),f={};return u.forEach((e=>{const u=2*e.start,m=2*e.end,g=e.neighbour;if(n<g){if(i){const e=l.getProvince(g);e&&this.calcBorderStones(e,e.getBorder(),i)}return}const p=l.getProvince(g);if(p){const e=p.getOwnerID();let i;if(i=a?s.getRelation(e,o):e===o?s.getRelation(r,o):99,i===A.N.WAR){let e={x:t[u],y:t[u+1]};const i=[e],n=t.length;let r,o,s,l,g=0,p=0;for(let a=u+2;a<=m;a+=2){const e=a%n;i.push({x:t[e],y:t[e+1]})}let v=0;[e]=i;for(let t=1;t<i.length;t++){const n=i[t];if(g=n.x-e.x,p=n.y-e.y,v+=1*Math.sqrt(g*g+p*p),s=Math.floor(v/d),s>0||t===i.length-1){for(v%=d,r=e.x-c,o=e.y-h,s>0&&(g/=s,p/=s),t===i.length-1&&s++,l=0;l<s;l++)f[r]||(f[r]={}),!a&&f[r][o]||(f[r][o]=Math.atan(p/g)+.5*Math.PI),r+=g,o+=p;e=n}}}}})),f}updateWarBorderStones(){const e=this.gameState.getMapState().getLocations(T.J.locationFilter.NOT_ON_SEA),t=new s.P,i=this.config.landmarkSize;this.stonesPS.begin();for(const n of e){if(n.isNeutral())continue;const{landmarkRotation:e}=this.config,r=this.provinceSelection.isSelected(n),o=this.calcBorderStones(n,n.getBorder(),r),a=new s.P;for(const n in o){if(!o.hasOwnProperty(n))continue;const r=o[n];for(const s in r){if(!r.hasOwnProperty(s))continue;t.set(Number(n)+11,Number(s)+11,10);if(t.distanceTo(a)>4){const r=e?o[n][s]:0;this.stonesPS.billboard({id:"enemy_border",position:t,size:i,rotation:r}),a.copy(t)}}}}this.stonesPS.end()}updateNationsBorders(){const e=this.gameState.getMapState(),t=e.getLocations(T.J.locationFilter.NOT_ON_SEA),i=new o.Zm(0,1,0,0),n=new o.Zm(0,0,0,1);this.config.useDoubleLineForNationBorders&&(i.b=1,n.b=1);const r=new E(this.nationsBordersLineSystem);if(this.nationsBordersLineSystem.begin(),this.stonesPS)this.updateWarBorderStones();else{const{getProvinceRelation:i}=je,o=this.gameState.getForeignAffairsState().getRelations(),{simple:a}=A.N,{playerId:s}=this;for(const l of t){if(l.isNeutral())continue;const t=l.getBorderSegments(Re.u.INTER|Re.u.REVOLT);let c=-1,h=!1;for(const d of t){if(l.getLocationID()<d.neighbour)continue;if(d.neighbour!==c){c=d.neighbour;h=i(l,e.getProvince(c),s,o)===a.enemy}if(!h)continue;const t=l.getBorder(),{start:u,end:f}=d;r.drawBorderSegment(t,u,f,n)}}}const a=(e,t,i)=>{const{isNationBorder:n}=this.constructor;return n(i,e,t)};for(const o of t)r.drawLocationBorders(o,a,i);this.nationsBordersLineSystem.end()}static getProvinceRelation(e,t,i,n){if(e&&t){const r=e.getOwnerID(),o=t.getOwnerID();if(r===i)return n.simpleRelationBetween(o,i);if(o===i)return n.simpleRelationBetween(r,i)}return A.N.simple.neutral}static isNationBorder(e,t,i){return t>0||!(i&Re.u.INNER_NEUTRAL)&&(!(i&Re.u.REVOLT)&&(!!(i&Re.u.COAST)||!e.isNeutral()&&!(i&Re.u.INNER)))}dispose(){this.scalers.length=0,this.atlasMapper=null,this.shaderLib=null,this.vertexBufferLib.dispose(),this.vertexBufferLib=null,this.renderer=null,(0,o.ID)(this),(0,r.Rj)()}async getStatistics(){var e;await Promise.all([this.fontRenderingReady.subscribe(),this.initialized.subscribe(),this.mapRendered.subscribe(),this.armiesInitialized.subscribe().then((()=>this.armyPainter.low.complete.subscribe())),(null===(e=this.terrainEngine)||void 0===e?void 0:e.initialized.subscribe())??Promise.resolve(!0),this.bendedNamesInitialized.subscribe()]);const t=o.hd.collectStatistics(this),i=t.$total;delete t.$total;const n={},r={texture:0};for(const s of this.assetManager.atlasIds()){const e=this.assetManager.atlas(s).getPageTextures().reduce(((e,t)=>e+(0,o.$)(t)),0);n[s]=e,r.texture+=e,i.texture+=e}n.$total=r,t.atlas=n;const{buffers:a}=this.vertexBufferLib;return t.shared=Object.fromEntries([...a.entries()].map((e=>{let[t,i]=e;return[t,(0,o.hg)(i)]}))),t.shared.$total={geometry:Object.values(t.shared).reduce(((e,t)=>e+t),0)},i.geometry+=t.shared.$total.geometry,t.$total=i,t}}},43854:(e,t,i)=>{i.d(t,{e:()=>s});var n=i(64292),r=i(24151),o=i(12405),a=i(36882);class s{constructor(e,t){this.mouseController=e,this.mapWidget=t,this.mouse=r.J,this.lastTouches=[],this.touchStartPosition=new n.E,this.gestureCooldown=-1,this.lastGesture=s.GESTURES.TOUCH,this.longTouchTimeout=null,this.firstPinchCenter=new n.E,this.lastPinchCenter=null,this.pinch=!1,this.pinchZoomDelta=0,this.lastTouchDistance=null}registerElement(e){e.addEventListener("touchstart",(e=>{this.onTouchStart(e)})),e.addEventListener("touchmove",(e=>{this.onTouchMove(e)})),e.addEventListener("touchend",(e=>{this.onTouchEnd(e)})),e.addEventListener("touchcancel",(e=>{this.mouseController.onMouseExit(e)})),e.addEventListener("touchleave",(e=>{this.mouseController.onMouseExit(e)}))}onLongTouchStart(e){if(this.shouldSwitchToLongTouch()){this.lastGesture=s.GESTURES.LONG_TOUCH;const t=e.touches[0],i=new n.E(t.pageX,t.pageY);this.mouseController.toggleArmyTooltipMobile(i)}}onTouchStart(e){o.hup.config.isInTouchMode=!0,e.preventDefault(),this.lastTouches=[];Date.now()>this.gestureCooldown&&(this.lastGesture=s.GESTURES.TOUCH),this.cancelLongTouchDetection(!0);const t=e.targetTouches;if(1===t.length){const i=t[0];this.pinch=!1,this.mouse.onMouseDown(i.pageX,i.pageY),this.touchStartPosition.x=i.pageX,this.touchStartPosition.y=i.pageY,this.mouseController.onMouseDown(e),this.mouseController.onMouseMove(e),this.mouseController.setClickStart(!0)}this.longTouchTimeout=setTimeout(this.onLongTouchStart.bind(this,e),s.LONG_TOUCH_TIME)}cancelLongTouchDetection(e){e&&(this.mouseController.armyTooltip=null,this.mouseController.clearTooltip()),this.longTouchTimeout&&clearTimeout(this.longTouchTimeout)}onTouchMove(e){e.preventDefault();const t=e.targetTouches,i=t.length,n=Date.now(),r=s.GESTURES;this.lastTouches.length>1&&i>1?(this.lastGesture===r.PINCH||this.gestureCooldown<n)&&(this.lastGesture=r.PINCH,this._setGestureCooldown(n),this._executePinch(t)):1===this.lastTouches.length&&1===i&&(this.lastGesture===r.DRAG||this.lastGesture===r.LONG_TOUCH_DRAG?(this._setGestureCooldown(n),this._executeDrag(e,t[0])):this.canStartTouchDrag(t,n)&&(this.lastGesture!==r.LONG_TOUCH?(this.cancelLongTouchDetection(!0),this.lastGesture=r.DRAG):this.lastGesture=r.LONG_TOUCH_DRAG,this._setGestureCooldown(n),this._executeDrag(e,t[0]))),this.lastTouches[0]={pageX:t[0].pageX,pageY:t[0].pageY},i>1&&(this.lastTouches[1]={pageX:t[1].pageX,pageY:t[1].pageY})}_executePinch(e){const t=e[0],i=e[1],r=Math.sqrt((i.pageX-t.pageX)**2+(i.pageY-t.pageY)**2);this.lastTouchDistance||(this.lastTouchDistance=r);const o=this.lastTouchDistance-r,a=o*(o<1?2:1)*.005,s=new n.E((i.pageX+t.pageX)/2,(i.pageY+t.pageY)/2);this.pinch||(this.pinchZoomDelta=0,this.firstPinchCenter.setLocation(s),this.pinch=!0),this.pinchZoomDelta=a,this.lastPinchCenter=s,this.lastTouchDistance=r}_executeDrag(e,t){this.mouse.onMouseMove(t.pageX,t.pageY),this.lastGesture===s.GESTURES.LONG_TOUCH_DRAG?this.mouseController.getLassoTool().onLassoDrag(t):this.mouseController.onMouseDrag(e,new n.E(t.pageX,t.pageY),!0,!o.hup.config.allowArmyDraggingInTouch)}_setGestureCooldown(e){this.gestureCooldown=e+50}onTouchEnd(e,t){e.preventDefault(),this.mouse.onMouseUp();const i=s.GESTURES;let n=!0;if(this.lastGesture===i.LONG_TOUCH_DRAG&&this.mouseController.getLassoTool().lassoFinished(e),this.cancelLongTouchDetection(!1),t&&(n=t(this.lastGesture)),n&&e.targetTouches)switch(this.lastGesture){case i.DRAG:this.mouseController.onMouseUp(e,!0);break;case i.TOUCH:o.hup.armyController.getCommandMode()&&this.setTargetForSelectedArmies(e),this.mouseController.onMouseUp(e);break;case i.PINCH:this.onPinchEnd(),this.mouseController.onMouseExit(e);break;case i.LONG_TOUCH:this.onLongTouchEnd(),this.mouseController.onMouseUp(e);break;case i.LONG_TOUCH_DRAG:break;default:this.mouseController.onMouseExit(e)}this.lastTouches=[]}onPinchEnd(){this.pinch=!1,this.lastTouchDistance=null,this.startDist=null}canStartTouchDrag(e,t){return this.gestureCooldown<t&&(Math.abs(e[0].pageX-this.touchStartPosition.x)>4||Math.abs(e[0].pageY-this.touchStartPosition.y)>4)}shouldSwitchToLongTouch(){return this.lastGesture!==s.GESTURES.PINCH}shouldZoom(){return this.firstPinchCenter}onLongTouchEnd(){o.hup.armySelection.getNumberOfSelectedArmies()>0&&o.hup.armyController.setCommandMode(a.OC.ADD_ARMY)}setTargetForSelectedArmies(){if(o.hup.armyController.getCommandMode()===a.OC.ADD_ARMY)return;const e=this.mapWidget.viewport.toMapPos(this.touchStartPosition),t=this.mapWidget.mapRenderer.getArmyAt(this.touchStartPosition);this.mouseController.setArmyTarget(e,t)}}s.LONG_TOUCH_TIME=700,s.GESTURES={TOUCH:0,DRAG:1,PINCH:2,LONG_TOUCH:3,LONG_TOUCH_DRAG:4}},69430:(e,t,i)=>{i.d(t,{HT:()=>S,Y8:()=>v,aE:()=>c,ck:()=>x,iY:()=>l,kL:()=>a,ow:()=>p,vL:()=>d});i(37554);var n=i(72342),r=i(64292),o=i(69165);function a(e,t,i,n,r,o,a,s,l,c,h){let d=arguments.length>11&&void 0!==arguments[11]?arguments[11]:1;if(!t||t.width<=0||t.height<=0)return;let u=t.width,f=t.height;if(1!==d&&(f/=d),!(a>=2))if(u*=a,f*=a,s&&(r-=u/2),i+=r,n+=o-=l?f/2:f,c||h){e.save();let r=i,o=n;c&&(e.translate(i,0),e.scale(-1,1),r=-u),h&&(e.translate(0,n),e.scale(1,-1),o=-f),e.drawImage(t,r,o,u,f),e.restore()}else 1===a&&1===d?(i=Math.round(i),n=Math.round(n),e.drawImage(t,i,n)):e.drawImage(t,i,n,u,f)}const s={};function l(e,t){const i=100*e/20;let n=s[i];n||(n={},s[i]=n);const r=Math.round(10*t);let o=n[r];return o||(o=`hsla(${20*i},100%,40%,${t})`,n[r]=o),o}function c(e,t){let i=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(e);return i?`rgba(${parseInt(i[1],16)},${parseInt(i[2],16)},${parseInt(i[3],16)},${t})`:(i=/^rgba\(([\d]+),([\d]+),([\d]+),([\d.]+)\)$/i.exec(e),i?`rgba(${parseInt(i[1],10)},${parseInt(i[2],10)},${parseInt(i[3],10)},${t})`:null)}let h=0;function d(e,t){h+=1,e=Number(e),t=Number(t);const i=document.createElement("canvas");return Number.isFinite(e)&&e>=0&&(i.width=e),Number.isFinite(t)&&t>=0&&(i.height=t),i.id=`canvas${h}`,i}const u=25,f=50,m=75,g=100;function p(e){const t=e||0;return t<=u?u:t<=f?f:t<=m?m:g}function v(e,t,i,o){const a=e.x-i.x,s=t.x-i.x,l=e.y-i.y,c=t.y-i.y;let h=0,d=0,u=0,f=0;if(Math.abs(s-a)<1){if(Math.abs(s)>=o)return null;h=s,d=s,u=Math.sqrt(o*o-s*s),f=-u}else if(Math.abs(c-l)<1){if(Math.abs(c)>=o)return null;h=Math.sqrt(o*o-c*c),d=-h,u=c,f=c}else{if((0,n.J0)(0,0,a,l,s,c)>=o*o)return null;const e=(s-a)/(c-l),t=a-e*l,i=e*e+1,r=e*t/i,m=(o*o-t*t)/i,g=Math.sqrt(r*r+m);u=-r+g,f=-r-g,h=e*u+t,d=e*f+t}return h+=i.x,u+=i.y,d+=i.x,f+=i.y,(0,n.bG)(h,u,e.x,e.y,t.x,t.y)<1?new r.E(h,u):(0,n.bG)(d,f,e.x,e.y,t.x,t.y)<1?new r.E(d,f):null}function x(e){if(e.src&&!(0,o.gU)(e.src))throw new Error(`Invalid image URL: ${e.src}`);return new Promise(((t,i)=>{const n=()=>{i(new Error(`HTMLImageElement failed to load (src=${e.src})`))},r=()=>{e.removeEventListener("error",n),e.width>0?t(e):i(new Error(`HTMLImageElement invalid data (src=${e.src})`))};e.src&&e.complete?r():(e.addEventListener("load",r,{once:!0}),e.addEventListener("error",n,{once:!0}))}))}function S(e){return e.normalize("NFD").replace(/[\u0300-\u036f]/g,"")}},67514:(e,t,i)=>{i.d(t,{l:()=>d});var n=i(72342),r=i(53754),o=i(9364),a=i(64292),s=i(24151),l=i(91451),c=i(11267);const h=.01;class d{wasDragging=!1;wasZooming=!1;mouseWheelDirection=0;mouseDragging=new r.F;zoomCenter=new r.F;viewportCenter=new r.F;get scale(){return this._scale}get minScale(){return this._minScale}constructor(e){this.rect=e.rect??new n.UL,this._scale=e.scale??1,this.scaleY=e.scaleY??1,this.totalWidth=e.totalWidth,this.totalHeight=e.totalHeight,this.isContinuous=e.isContinuous,this.mouseWheelSpeed=e.mouseWheelSpeed,this.zoomMomentum=e.zoomMomentum,this._minScale=e.minScale,this.maxScale=e.maxScale,this.dragMomentum=e.dragMomentum,this.borderHeight=e.borderHeight,this.mapBorderSize=e.mapBorderSize,this.mapBorderPushSpeed=e.mapBorderPushSpeed}get x(){return this.rect.x}get y(){return this.rect.y}get width(){return this.rect.width}get height(){return this.rect.height}get screenWidth(){return this.rect.width*this.scale}get screenHeight(){return this.rect.height*this.scale*this.scaleY}setSize(e,t){this.rect.width=e/this.scale,this.rect.height=t/this.scale/this.scaleY,this._minScale=.9*t/this.totalHeight/this.scaleY}setCenterInScreenCoordinates(e,t){this.viewportCenter.set(e,t)}applyRestrictions(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.scale,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.rect.width*e;const{rect:i,totalWidth:r,totalHeight:o}=this,a=.5*t/e,s=this.borderHeight/e/this.scaleY;this.isContinuous||(i.x=(0,n.uZ)(i.x,-a,r-i.width+a)),i.y=(0,n.uZ)(i.y,-s,o-i.height+s)}translate(e,t){Math.abs(e)<h&&Math.abs(t)<h||(this.rect.translate(e,t),this.applyRestrictions(),l.EventBus.publish(c.q.UI_MAP_MOVE_END,{viewport:this}))}setCenterPosition(e,t){this.translate(e-this.rect.centerX,t-this.rect.centerY)}setZoom(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];e=(0,n.uZ)(e,this.minScale,this.maxScale);const{screenWidth:i,screenHeight:r}=this,{width:o,height:a}=this.rect,s=i/e,d=r/e/this.scaleY;Math.abs(o-s)<h&&Math.abs(a-d)<h||(this.rect.x-=(s-this.rect.width)/2,this.rect.y-=(d-this.rect.height)/2,this.rect.width=s,this.rect.height=d,this._scale=e,this.applyRestrictions(e,i),t&&this.resetMomentum(),l.EventBus.publish(c.q.UI_MAP_ZOOM_END,this))}setZoomNormalized(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];const{minScale:i,maxScale:n}=this;this.setZoom(i+(1-e)*(n-i),t)}resetMomentum(){let{pan:e,zoom:t}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{pan:!0,zoom:!0};e&&this.mouseDragging.set(0,0),t&&(this.mouseWheelDirection=0)}integrateZoomDelta(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.screenWidth,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:this.screenHeight;if(0===e)return;e=(0,n.uZ)(e,-.5,.5);const r=t/this.maxScale,o=t/this.minScale;if(e=(0,n.uZ)(this.rect.width*(1+e),r,o)/this.rect.width-1,Math.abs(e)<1e-4)return;const{zoomCenter:a}=this,s=this.rect.width*e,l=this.rect.height*e;this.rect.x-=s*a.x/t,this.rect.y-=l*a.y/i,this.rect.width+=s,this.rect.height+=l,this._scale=t/this.rect.width}addWheelDirection(e,t){this.mouseWheelDirection+=e,this.wheelMousePos=t}update(e,t){const{scale:i,zoomCenter:n,screenWidth:r,screenHeight:o}=this;let a=0!==this.mouseWheelDirection,d=0!==this.mouseDragging.x||0!==this.mouseDragging.y;if(s.J.isMouseMoving()?(s.J.dragStarted&&e.isDraggingMap()&&(d=!0,this.mouseDragging.set(s.J.totalDrag.x,s.J.totalDrag.y)),s.J.resetDrag()):s.J.isDrag()&&this.mouseDragging.set(0,0),e.isDraggingArmy()){const{x:e,y:t}=s.J.getPosition(),n=r*this.mapBorderSize,a=o*this.mapBorderSize,l=this.mapBorderPushSpeed/i,c=this.calculateBorderPush(r,e,n),h=this.calculateBorderPush(o,t,a);this.rect.translate(c*l,h*l)}let u=0;if(t){const{pinch:e,pinchZoomDelta:i,firstPinchCenter:r}=t;e&&(a=!0),u=i,t.pinchZoomDelta*=this.zoomMomentum,n.set(r.x,r.y)}0===u&&a&&(u=this.mouseWheelDirection*this.mouseWheelSpeed,this.wheelMousePos?n.set(s.J.position.x,s.J.position.y):n.copy(this.viewportCenter));const f=-this.mouseDragging.x/i,m=-this.mouseDragging.y/i;this.rect.translate(f,m),this.integrateZoomDelta(u),this.applyRestrictions(i,r),a&&(this.mouseWheelDirection*=this.zoomMomentum,Math.abs(this.mouseWheelDirection)<h&&this.resetMomentum({zoom:!0})),d&&(this.mouseDragging.multiplyScalar(this.dragMomentum),this.mouseDragging.lengthSq()<h&&this.resetMomentum({pan:!0})),d?(this.wasDragging||l.EventBus.publish(c.q.UI_MAP_MOVE_START),l.EventBus.publish(c.q.UI_MAP_MOVING,{viewport:this})):this.wasDragging&&l.EventBus.publish(c.q.UI_MAP_MOVE_END,{viewport:this}),this.wasDragging=d,a?(this.wasZooming||l.EventBus.publish(c.q.UI_MAP_ZOOM_START),l.EventBus.publish(c.q.UI_MAP_ZOOMING,this)):this.wasZooming&&l.EventBus.publish(c.q.UI_MAP_ZOOM_END,this),this.wasZooming=a}wasMoving(){return this.wasDragging||this.wasZooming}getCenter(){const e=this.wrapRect();return new a.E(e.centerX,e.centerY)}calculateBorderPush(e,t,i){return(0,n.uZ)(t/i,0,1)-(0,n.uZ)((e-t)/i,0,1)}toMapPos(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new a.E,i=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];return t=this.calculateMapPos(e,t),this.isContinuous&&i&&(t.x=o.kz(t.x,this.totalWidth)),t}fromMapPos(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new a.E;return this.isContinuous?t.x=o.kz(e.x-this.x,this.totalWidth)*this.scale:t.x=(e.x-this.x)*this.scale,t.y=(e.y-this.rect.y)*this.scale*this.scaleY,t}calculateMapPos(e,t){let i=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return t.x=e.x/this.scale+this.rect.x,t.y=e.y/this.scale/this.scaleY+this.rect.y,i||(this.isContinuous||(t.x>=this.totalWidth?t.x=this.totalWidth-1:t.x<0&&(t.x=0)),t.y>=this.totalHeight?t.y=this.totalHeight-1:t.y<0&&(t.y=0)),t}wrapRect(){if(!this.isContinuous)return this.rect;const e=this.rect.clone(),t=this.totalWidth;return e.x=o.kz(e.x,t),e}}},15129:(e,t,i)=>{i.d(t,{VG:()=>o,mK:()=>s});i(5741),i(19202);var n=i(51005);let r;function o(e){switch(e){case r.WEBGL:return"webgl";case r.WEBGL2:return"webgl2";case r.NONE:return"none"}}!function(e){e[e.NONE=0]="NONE",e[e.WEBGL=1]="WEBGL",e[e.WEBGL2=2]="WEBGL2"}(r||(r={}));const a={alpha:!1,depth:!0,stencil:!1,antialias:!1,premultipliedAlpha:!0,preserveDrawingBuffer:!1,powerPreference:"high-performance",failIfMajorPerformanceCaveat:!0};class s{attributes={};canvas=null;context=null;contextType=r.NONE;rendererString="unknown";majorPerformanceCaveat=!1;renderer=null;contextLost=!1;constructor(e){console.time("WebGLState created"),this.init(e),this.context||this.init({...e,failIfMajorPerformanceCaveat:!1}),console.timeEnd("WebGLState created")}init(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};if(this.attributes={...a,...e},this.majorPerformanceCaveat=!1,this.contextLost=!1,window.WebGLRenderingContext){this.context&&(console.log("WebGL - existing context found"),this.dispose());try{const e=document.createElement("canvas"),t=e.getContext("webgl2",this.attributes)||e.getContext("webgl",this.attributes);if(!t)return void console.warn("WebGL - failed creating context");const i=t.getExtension("WEBGL_debug_renderer_info");i&&(this.rendererString=t.getParameter(i.UNMASKED_RENDERER_WEBGL)),this.majorPerformanceCaveat=!this.attributes.failIfMajorPerformanceCaveat,this.canvas=e,this.context=t,this.renderer=new n.C({canvas:e,context:t}),this.renderer.debug.checkShaderErrors=!1,e.addEventListener("webglcontextlost",(e=>{console.warn("WebGL - context lost",e),this.contextLost=!0,this.dispose()})),console.log(`WebGL - context created: ${this.rendererString}`)}catch(i){}var t;this.canvas&&this.context?this.contextType=(t=this.context,"undefined"!=typeof WebGL2RenderingContext&&t instanceof WebGL2RenderingContext?r.WEBGL2:r.WEBGL):this.contextType=r.NONE}}dispose(){var e;null===(e=this.renderer)||void 0===e||e.dispose(),this.renderer=null,this.canvas=null,this.context=null}get webGLSupported(){return this.contextType!==r.NONE}getRenderCapabilities(){var e;const t=null===(e=this.renderer)||void 0===e?void 0:e.capabilities;if(t)return{rendererContext:o(this.contextType),maxAttributes:t.maxAttributes,maxVaryings:t.maxVaryings,maxVertexUniforms:t.maxVertexUniforms,maxFragmentUniforms:t.maxFragmentUniforms,maxTextures:t.maxTextures,maxVertexTextures:t.maxVertexTextures,hasDrawBuffers:t.drawBuffers,hasFloatTextures:t.floatFragmentTextures}}getGlErrorString(){if(this.contextLost)return"CONTEXT_LOST_WEBGL";const e=this.context;if(e){const t=e.getError();if(0!==t)return function(e,t){if(0===t)return"NO_ERROR";const i=["INVALID_ENUM","INVALID_VALUE","INVALID_OPERATION","INVALID_FRAMEBUFFER_OPERATION","OUT_OF_MEMORY","CONTEXT_LOST_WEBGL"];for(const n of i)if(e[n]===t)return n;return`UNKNOWN_ERROR(${t})`}(e,t)}}checkSingleColorError(e){const{context:t}=this;if(!t)return;const i=t.drawingBufferWidth,n=t.drawingBufferHeight,r=new Uint8Array(e*e*4);t.readPixels((i-e)/2,(n-e)/2,e,e,t.RGBA,t.UNSIGNED_BYTE,r);const o=r.slice(0,4);for(let a=4;a<r.length;a+=4)for(let e=0;e<4;e++)if(o[e]!==r[a+e])return;return"SINGLE_COLOR_"+o.join("_")}}},44334:(e,t,i)=>{i.d(t,{D:()=>u});var n=i(72243),r=i(72342),o=i(53754),a=i(28388),s=i(5777),l=i(23942),c=i(28942),h=i(9892);const d={[l.q.UNKNOWN]:{name:"waiting",color:4224271103},[l.q.EMBARKING]:{name:"embarking",color:917558271},[l.q.DISEMBARKING]:{name:"disembarking",color:1607788287},[l.q.REFUELING]:{name:"refueling",color:3867952383},[l.q.MOBILIZING]:{name:"mobilizing",color:3798785023},[l.q.CONVERTING]:{name:"converting",color:917200895},[l.q.UPGRADING]:{name:"upgrading",color:1959149055}};class u{isResourceContainer=!0;time=0;_enabled=!0;constructor(e,t){this.flagImageCache=e.flagImageCache,this.playerId=e.playerId,this.gameState=e.gameState,this.config=t,this.unitTypeVisibilityMap=e.unitTypeVisibilityMap,this.armyStatusVisibilityMap=e.armyStatusVisibilityMap,this.stackBS=new n.C(this.getSystemCount("stackBS")),this.selectStackBS=new n.C(this.getSystemCount("selectStackBS")),this.stackBigBS=new n.C(this.getSystemCount("stackBigBS")),this.selectStackBigBS=new n.C(this.getSystemCount("selectStackBigBS")),this.stackSmallBS=new n.C(this.getSystemCount("stackBigBS")),this.selectStackSmallBS=new n.C(this.getSystemCount("selectStackBigBS")),this.classIconFarBS=new n.C(this.getSystemCount("stackBigBS")),this.digitsBS=new n.FA(this.getSystemCount("digitsBS")),this.digitsFarBS=new n.FA(this.getSystemCount("digitsBS")),this.armyStackWS=new n.C$(this.getSystemCount("armyStackWS")),this.statusTimerBS=new n.C(this.getSystemCount("statusTimerBS")),this.statusTimerBgBS=new n.C(this.getSystemCount("statusTimerBgBS")),this.statusTimerIconBS=new n.C(this.getSystemCount("statusTimerIconBS")),this.selectStatusBS=new n.C(this.getSystemCount("selectStatusBS")),this.healthBarBS=new n.C(this.getSystemCount("healthBarBS")),this.healthBarBGBS=new n.C(this.getSystemCount("healthBarBGBS")),this.scalers=[];const i=this.config.renderOrder.armyStacks+50*e.frequency,a=this.config.globalScale;this.stackSizes=[new o.F(20,20),new o.F(30,10),new o.F(10,40)];const{assets:s}=e,l=s.atlas("main");this.stackBS.init({scene:e.frameScene,renderOrder:i+2,atlasMapper:l,mode:n.bv.normal,materialParameters:{depthTest:!0},verticalScale:a}),this.selectStackBS.init({scene:e.selectionScene,renderOrder:i,atlasMapper:l,mode:n.bv.pixelSelection,materialParameters:{depthTest:!0},verticalScale:a}),this.digitsBS.init({scene:e.frameScene,imageFont:e.digitFont,materialParameters:{depthTest:!0},renderOrder:i+1,filter:!0,color:new r.Zm("#ffffff"),verticalScale:this.config.globalScale}),this.digitsFarBS.init({scene:e.frameScene,imageFont:e.digitFont,materialParameters:{depthTest:!0},renderOrder:i+2,filter:!0,color:new r.Zm("#ffffff"),verticalScale:this.config.globalScale}),this.stackBigBS.init({scene:e.frameScene,renderOrder:i,atlasMapper:l,mode:n.bv.pulse,materialParameters:{depthTest:!0},verticalScale:a}),this.selectStackBigBS.init({scene:e.selectionScene,renderOrder:i,atlasMapper:l,mode:n.bv.pixelSelection,materialParameters:{depthTest:!0},verticalScale:a}),this.stackSmallBS.init({scene:e.frameScene,renderOrder:i,atlasMapper:l,mode:n.bv.pulse,materialParameters:{depthTest:!0},verticalScale:a}),this.selectStackSmallBS.init({scene:e.selectionScene,renderOrder:i,atlasMapper:l,mode:n.bv.pixelSelection,materialParameters:{depthTest:!0},verticalScale:a}),this.classIconFarBS.init({scene:e.frameScene,renderOrder:i+1,atlasMapper:l,mode:n.bv.normal,materialParameters:{depthTest:!0},verticalScale:a}),this.statusTimerBS.init({scene:e.frameScene,renderOrder:i+1,atlasMapper:l,mode:n.bv.coloredGradient,materialParameters:{depthTest:!0},verticalScale:a}),this.statusTimerBgBS.init({scene:e.frameScene,renderOrder:i,atlasMapper:l,mode:n.bv.normal,materialParameters:{depthTest:!0},verticalScale:a}),this.statusTimerIconBS.init({scene:e.frameScene,renderOrder:i+2,atlasMapper:l,mode:n.bv.normal,materialParameters:{depthTest:!0},verticalScale:a}),this.selectStatusBS.init({scene:e.selectionScene,renderOrder:i,atlasMapper:l,mode:n.bv.pixelSelection,materialParameters:{depthTest:!0},verticalScale:a}),this.healthBarBS.init({scene:e.frameScene,renderOrder:i+1,atlasMapper:l,mode:n.bv.coloredGradient,materialParameters:{depthTest:!0},verticalScale:a}),this.healthBarBGBS.init({scene:e.frameScene,renderOrder:i,atlasMapper:l,mode:n.bv.normal,materialParameters:{depthTest:!0},verticalScale:a});const c=s.texture("army_info/window"),d=this.config.uniformColors;this.armyStackWS.init({scene:e.frameScene,selectionScene:e.selectionScene,texture:c,mode:n.mh.SIMPLE_SELECTION,renderOrder:i,patchColors:d,verticalScale:a,stage:1});const{scalersGlobal:u={}}=this.config,{scalers:f=[]}=this.config;this.scalers=f.map((e=>new h.G(this,{...u,...e})))}get enabled(){return this._enabled}set enabled(e){this.stackBS.enabled=e,this.selectStackBS.enabled=e,this.stackBigBS.enabled=e,this.selectStackBigBS.enabled=e,this.stackSmallBS.enabled=e,this.selectStackSmallBS.enabled=e,this.classIconFarBS.enabled=e,this.digitsBS.enabled=e,this.digitsFarBS.enabled=e,this.armyStackWS.enabled=e,this.statusTimerBS.enabled=e,this.statusTimerBgBS.enabled=e,this.statusTimerIconBS.enabled=e,this.selectStatusBS.enabled=e,this.healthBarBGBS.enabled=e,this.healthBarBS.enabled=e,this._enabled=e}begin(){this.stackBS.begin(),this.selectStackBS.begin(),this.stackBigBS.begin(),this.selectStackBigBS.begin(),this.stackSmallBS.begin(),this.selectStackSmallBS.begin(),this.classIconFarBS.begin(),this.digitsBS.begin(),this.digitsFarBS.begin(),this.armyStackWS.begin(),this.statusTimerBS.begin(),this.statusTimerBgBS.begin(),this.statusTimerIconBS.begin(),this.selectStatusBS.begin(),this.healthBarBGBS.begin(),this.healthBarBS.begin()}end(){this.stackBS.end(),this.selectStackBS.end(),this.stackBigBS.end(),this.selectStackBigBS.end(),this.stackSmallBS.end(),this.selectStackSmallBS.end(),this.classIconFarBS.end(),this.digitsBS.end(),this.digitsFarBS.end(),this.armyStackWS.end(),this.statusTimerBS.end(),this.statusTimerBgBS.end(),this.selectStatusBS.end(),this.statusTimerIconBS.end(),this.healthBarBGBS.end(),this.healthBarBS.end()}update(e,t){this.armyStackWS.uniformScale=this.armyStackWS.alpha>.1?1:0,this.healthBarBS.time=this.time,this.stackBigBS.time=this.time,this.stackSmallBS.time=this.time,this.time+=t;for(let i=0;i<this.scalers.length;++i)this.scalers[i].update(t,e)}paint(e,t,i,n,s,l,h){const u=e.getUnitTypeIDs();if(u.length){var f;if(!u.some((e=>{var t;return(null===(t=this.unitTypeVisibilityMap)||void 0===t?void 0:t[e])??!0})))return;if(!1===(null===(f=this.armyStatusVisibilityMap)||void 0===f?void 0:f[e.getStatus()]))return}const m=e.getOwnerProfile(),g=e.getUnitClasses(),p=Object.keys(g).map(Number).sort(),v=e.getVisibleUnits();let x=0;const S=new o.F(16,16);let y=1;for(let r=0;r<p.length;++r){const e=g[p[r]];if(x+=e,e>1){const t=Math.log10(e);y=Math.max(y,Math.floor(t))}}let _=8;p.length>1&&(_+=24*(Math.max(p.length,1)-1));const w=[];for(let r=0;r<v.length;++r){const e=v[r];if(e){const t=e.getUnitType().getUnitClass(),i=e.getStrength();w[t]?w[t]+=i:w[t]=i}}let b,C=-1;for(const r in w)w[r]>C&&(b=r,C=w[r]);this.stackSizes[1].set(10+8*y,_);const P=this.gameState.getForeignAffairsState().getRelations().simpleRelationBetween(m.getPlayerID(),this.playerId);let M=P;n&&(M+=8);const A=new o.F(52,0),T=new a.P(t.x,t.y,this.getZPosition(t,i,this.config.zOffset+120));this.armyStackWS.emit({position:T,offset:A,displacement:i,colorIndex:M,selectionColorIndex:h,sizes:this.stackSizes});const L=new r.Zm(.9,.9,.9,1),D=new r.Zm(1,1,1,1);let I=0;I=0===P?n?.9:.1:n?.1:.9,L.setRGBA(I,I,I,1),D.setRGBA(I,I,I,1);const E=S.add(this.stackSizes[1]),R=new o.F(14,24),U=new o.F(A.x-.5*E.x,0),N=new o.F(65+4*y,0),B=A.x+.5*E.x+R.x+12,F=new o.F(B,-4),O=new o.F(F.x,F.y);let z=0;const k=24,V=1.3*k,G=new r.Zm,H=p.length<=1?24:28,W=H/68;if(1!==v.length||v[0].size>=1){if(p.length>0){U.y=1!==p.length?-6:-4,U.y-=24*(p.length-1)-(H-24),N.y-=(p.length-1)*V;const e=4/(p.length-1);for(let t=0;t<p.length;++t){const n=p[t];G.set(this.config.uniformColors[2*M]),this.stackBS.billboard({id:"army_info/diamond_solid_0",position:T,offset:U,displacement:i,size:W,color:G}),this.selectStackBS.billboard({id:"army_info/diamond_solid_0",position:T,offset:U,displacement:i,size:W,color:l}),this.stackBS.billboard({id:`army_info/unit_class_${n}`,position:T,offset:U,displacement:i,size:.6*this.config.classIconSize,color:D}),U.y+=24-e;const r=g[n];this.digitsBS.numberRightAligned(T,N,i,r,L),N.y+=V}}else F.x-=14,O.x=F.x,U.y=-4,G.set(this.config.uniformColors[2*M]),this.stackBS.billboard({id:"army_info/diamond_solid_0",position:T,offset:U,displacement:i,size:W,color:G}),this.selectStackBS.billboard({id:"army_info/diamond_solid_0",position:T,offset:U,displacement:i,size:W,color:l}),this.stackBS.billboard({id:"army_info/unit_class_undefined",position:T,offset:U,displacement:i,size:.6*this.config.classIconSize,color:D}),this.digitsBS.numberRightAligned(T,N,i,-1,L);const t=new r.Zm("#ffffffe0"),n=this.flagImageCache.get(e.getOwnerID(),c.V.PLAYER_SQUARE);if(n&&0!==P){const e=.26;this.statusTimerBgBS.billboard({image:n,position:T,offset:F,displacement:i,size:e,color:t}),this.selectStatusBS.billboard({image:n,position:T,offset:F,displacement:i,size:e,color:l}),O.y-=k,z++}}let X=0,j=null;const Y=this.gameState.getGameInfoState().getTimeScale();let q=this.config.attackInterval*Y;const Z=new r.Zm("#ffffffff");if(e.isAttacking()&&!e.isFlying()&&e.getNextAttackTime()>0)j="attacking",Z.setHex(4282665983),X=e.getTimeRemainingForAttackInSeconds();else if(e.isPatrolling()&&!e.isAirplaneReturning()&&!e.isApproachPatrolling()&&e.getNextAttackTime()>0)j="patroling",Z.setHex(1887305727),X=e.getTimeRemainingForAttackInSeconds(),q=this.config.patrolInterval*Y;else{const t=e.getFirstCommandIfWait();var $,K;if(t)Z.set((null===($=d[t.direction])||void 0===$?void 0:$.color)??4294967295),j=null===(K=d[t.direction])||void 0===K?void 0:K.name,q=t.waitSeconds,X=t.remainingTime()/1e3}if(j){const e=`army_info/status_${j}_icon`;this.paintStatusIcon(e,l,T,O,i);const t=q-X;this.statusTimerBS.billboard({id:"army_info/status_gradient",position:T,offset:O,displacement:i,size:.6,color:Z,gradient:new a.P(0,t/q,0)}),z++,p.length<=1&&z>=2?O.x-=k:O.y-=k}if(e.hasAttackers()){const e="army_info/status_defending_icon";this.paintStatusIcon(e,l,T,O,i),z++,p.length<=1&&z>=2?O.x-=k:O.y-=k}if(0===P)this.paintAgressionIcon(e,l,T,O,i);else if(0!==e.getSpyRevealedTime()){const e="army_info/status_spyinfo_icon";this.paintStatusIcon(e,l,T,O,i)}const J=new o.F(F.x-20,F.y-12*(p.length-1));this.paintHealthBar(e,l,p.length,T,J,i);const Q=new o.F;var ee,te;e.isPatrolling()&&!e.isApproachPatrolling()&&(T.x=null===(ee=e.getAttackPosition())||void 0===ee?void 0:ee.x,T.y=null===(te=e.getAttackPosition())||void 0===te?void 0:te.y);G.set(this.config.uniformColors[2*M]);const ie=e=>`army_info/diamond_zoom_${e}_selected`;let ne=0;(e.isAttacking()||e.isBeingBombarded())&&(ne=0!==P||n?1:-1),n&&G.setRGBA(1,1,1,1);const re=Math.floor(Math.log10(x))+1,oe=re>=3?.5:.4;this.stackBigBS.billboard({id:n?ie(P):"army_info/diamond_zoom_own",position:T,offset:Q,displacement:i,size:oe,rotation:ne,color:G}),this.selectStackBigBS.billboard({id:"army_info/diamond_solid_0",position:T,offset:Q,displacement:i,size:oe,color:l});this.stackSmallBS.billboard({id:n?ie(P):"army_info/diamond_zoom_own",position:T,offset:Q,displacement:i,size:.2,rotation:ne,color:G}),this.selectStackSmallBS.billboard({id:"army_info/diamond_solid_0",position:T,offset:Q,displacement:i,size:.2,color:l}),Q.y=b?-3:0,this.classIconFarBS.billboard({id:`army_info/unit_class_${b}`,position:T,offset:Q,displacement:i,size:.4,color:D}),b&&(Q.y=20,Q.x=-3*(re-1),this.digitsFarBS.numberLeftAligned(T,Q,i,x,L))}paintAgressionIcon(e,t,i,n,r){const o=e.getAggressiveness();if(o!==s._U.NORMAL&&o!==s._U.DEFAULT){const e=`army_info/status_agression_${o}_icon`;this.paintStatusIcon(e,t,i,n,r)}}paintStatusIcon(e,t,i,n,r){const o="army_info/status_background";this.statusTimerBgBS.billboard({id:o,position:i,offset:n,displacement:r,size:.6}),this.statusTimerIconBS.billboard({id:e,position:i,offset:n,displacement:r,size:.6}),this.selectStatusBS.billboard({id:o,position:i,offset:n,displacement:r,size:.6,color:t})}paintHealthBar(e,t,i,n,o,s){if(e.getUnits().length<1)return;const l=new r.Zm("#6e951ae0"),c=new r.Zm("#90bc26e0");e.morale<=.25?(l.setHex(4284173024),c.setHex(4286869728)):e.morale<=.5?(l.setHex(3466343648),c.setHex(3988410592)):e.morale<=.75&&(l.setHex(2459708384),c.setHex(3083022560));const h={position:n,offset:o,displacement:s,size:.5},d=e.isBeingBombarded()||e.isFighting()?1:0,u=new a.P(0,e.morale,d);this.healthBarBGBS.billboard({id:`army_info/healthbar_bg${i}`,...h}),this.selectStackBS.billboard({id:`army_info/healthbar_bg${i}`,...h,color:t}),this.healthBarBS.billboard({id:`army_info/healthbar_filling${i}`,...h,color:l,gradient:u}),this.healthBarBS.billboard({id:`army_info/healthbar_filling_second${i}`,...h,color:c,gradient:u})}getZPosition(e,t){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return e.y+.01*e.x+i+t.y-this.config.zFar}getSystemCount(e){var t;let i=this.config.maxCount;const n=null===(t=this.config.multipliers)||void 0===t?void 0:t[e];return"number"==typeof n?i*=n:console.error(`getSystemCount - no system found: ${e} `),i}dispose(){(0,r.ID)(this)}}},49787:(e,t,i)=>{i.d(t,{B:()=>h});var n=i(72243),r=i(72342),o=i(18498),a=i(53754),s=i(28942),l=i(9892),c=i(86065);class h{isResourceContainer=!0;_enabled=!0;constructor(e,t){this.flagImageCache=e.flagImageCache,this.playerId=e.playerId,this.alliances=e.alliances,this.config=t,this.renderOrder=this.config.renderOrder.armyStacks+50*e.frequency,this.stackSimpleBS=new n.C(this.getSystemCount("stackSimpleBS")),this.digitsSimpleDS=new n.FA(this.getSystemCount("digitsSimpleDS")),this.scalers=[];const i=e.assets.atlas("main");this.stackSimpleBS.init({scene:e.frameScene,renderOrder:this.renderOrder,atlasMapper:i,mode:n.bv.normal,materialParameters:{blending:o.bdR,depthTest:!0},verticalScale:this.config.globalScale}),this.digitsSimpleDS.init({scene:e.frameScene,imageFont:e.digitFont,materialParameters:{depthTest:!0},renderOrder:this.renderOrder,filter:!1,color:new r.Zm(1,1,1,1),verticalScale:this.config.globalScale});const{scalersGlobal:a={}}=this.config,{scalers:s=[]}=this.config;this.scalers=s.map((e=>new l.G(this,{...a,...e})))}get enabled(){return this._enabled}set enabled(e){this.stackSimpleBS.enabled=e,this.digitsSimpleDS.enabled=e,this._enabled=e}begin(){this.stackSimpleBS.begin(),this.digitsSimpleDS.begin()}end(){this.stackSimpleBS.end(),this.digitsSimpleDS.end()}update(e,t){for(let i=0;i<this.scalers.length;++i)this.scalers[i].update(t,e)}paint(e,t,i,n){this.paintOwnerFlag(e,t,i,n),this.paintInGameAllianceFlag(e,t,i,n),this.paintArmyCount(e,t,i),this.paintUnitClasses(e,t,i,n)}paintOwnerFlag(e,t,i,n){if(e.getOwnerID()===this.playerId&&!n)return;const r=this.flagImageCache.get(e.getOwnerID());r&&this.stackSimpleBS.billboard({image:r,position:t,offset:new a.F(48,10),displacement:i,size:.9})}paintInGameAllianceFlag(e,t,i,n){if(!this.alliances)return;if(e.getOwnerID()===this.playerId&&!n)return;const r=this.flagImageCache.get(e.getOwnerProfile().getTeamID(),s.V.TEAM);r&&this.stackSimpleBS.billboard({image:r,position:t,offset:new a.F(48,-12),displacement:i,size:.25})}paintArmyCount(e,t,i){const n=e.getSize()>0?e.getSize():-1,r=new a.F(8,5),o=new a.F(t.x+10,t.y+2);this.digitsSimpleDS.numberRightAligned(o,r,i,n)}paintUnitClasses(e,t,i,n){if(this.config.paintClasses===c.A.NEVER)return;const r=e.getVisibleUnits(),o=new Set;if(n||e.getUnitClassCount()>1||this.config.paintClasses===c.A.ALWAYS){const e=new a.F(104,11);for(let n=r.length-1;n>=0;--n){var s;const a=null===(s=r[n])||void 0===s?void 0:s.getUnitType().getUnitClass();if(void 0!==a&&!o.has(a)){o.add(a);const n=`warfare/class_${a}_b`;this.stackSimpleBS.billboard({id:n,position:t,offset:e,displacement:i,size:1.5}),e.y-=24}}}}getSystemCount(e){var t;let i=this.config.maxCount;const n=null===(t=this.config.multipliers)||void 0===t?void 0:t[e];return"number"==typeof n?i*=n:console.error(`getSystemCount - no system found: ${e} `),i}dispose(){(0,r.ID)(this)}}},56335:(e,t,i)=>{i.d(t,{J:()=>s});var n=i(12405),r=i(31405);class o{constructor(e){this.name=e,this.lastTimestamp=0,this.lastFrameCount=0,this.frameCount=0,this.avgFramerate=-1,this.avgN=0}}class a{constructor(){this.container=null,this.counters={},this.lastMode=null,this.reset()}static modes={astar:"astar",drag:"drag",nodrag:"nodrag"};update(e){let t;t=n.hup.armyController.getDragTarget()?a.modes.astar:n.hup.mapMouseController.isDraggingMap()?a.modes.drag:a.modes.nodrag;const{lastMode:i}=this;this.updateCounter(t,i,e);const r=t===a.modes.drag,o=i===a.modes.drag;(r||o)&&n.hup.gameState.getMapState().getProvinceCountForPlayer(n.hup.config.userData.playerID)>=50&&this.updateCounter(r?"drag-lategame":null,o?"drag-lategame":null,e),this.lastMode=t}updateCounter(e,t,i){if(t&&this.getCounter(t).lastTimestamp>0){const r=this.getCounter(t),o=i-r.lastTimestamp;if(o>this.UPDATE_INTERVAL||t!==e){const e=r.frameCount-r.lastFrameCount,t=o/this.UPDATE_INTERVAL;if(e>0){const a=e*Math.round(1e3/o);if(o<=2*this.UPDATE_INTERVAL){const e=r.avgN;r.avgFramerate=e>1?(r.avgFramerate*e+a*t)/(e+t):a,r.avgN+=t}if(r.lastTimestamp=i,r.lastFrameCount=r.frameCount,n.hup.config.showFps){let e=`FPS: ${a}`;e+=this.toHTMLString(),this.container&&(this.container.innerHTML=e)}}}}if(e){const n=this.getCounter(e);t!==e&&(n.lastTimestamp=i,n.lastFrameCount=n.frameCount),n.frameCount++}}toHTMLString(){let e="";for(const t in this.counters)if(this.counters.hasOwnProperty(t)){const i=this.counters[t];i.avgN>0&&(e+=`<br>${t}: ${i.avgFramerate>0?i.avgFramerate.toFixed(1):"--"}`)}return e}toString(){let e="";for(const t in this.counters)if(this.counters.hasOwnProperty(t)){const i=this.counters[t];i.avgN>0&&(e+=`\nAvg ${t} FPS: ${i.avgFramerate>0?i.avgFramerate.toFixed(1):"--"}`)}return e}getAvgDragFps(){const e=this.getCounter("drag");return e.avgN>2?e.avgFramerate:-1}getCounter(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"avgfps",i=this.counters[e];return i||(t+=".webgl",i=new o(`${t}.${e}`),this.counters[e]=i),i}reset(){this.qualityChange=0,this.UPDATE_INTERVAL=1e3}getQualityChange(){const{qualityChange:e}=this;return this.qualityChange=0,e}showStatsContainer(){n.hup.config.showFps=Math.max(1,n.hup.config.showFps??0),this.container&&(this.container.style.display="block")}hideStatsContainer(){this.container&&(this.container.style.display="none")}init(){this.container=document.getElementById("fps"),this.container&&(this.container.style.display="none"),n.hup.config.showFps&&this.showStatsContainer(),this.resetAverageFPS(),setTimeout(this.sendAverageFPS.bind(this),3e4)}resetAverageFPS(){const e=Object.values(this.counters);for(let t=e.length-1;t>=0;t--){const i=e[t];i.avgN=0,i.avgFramerate=-1}}shouldSendToServer(){return Date.now()-globalTimeApplicationStarted<6e5&&n.hup.config.userData.siteUserID>0}sendAverageFPS(){if(this.shouldSendToServer()){const e=Object.values(this.counters);for(let t=e.length-1;t>=0;t--){const i=e[t];i.avgFramerate>0&&r.W.timing(i.name,i.avgFramerate),i.avgN=1}r.W.flushToServer()}this.resetAverageFPS(),setTimeout(this.sendAverageFPS.bind(this),6e4)}static instance=new a}const s=a.instance},98947:(e,t,i)=>{i.d(t,{W:()=>n});const n={alphamap_fragment:"#ifdef USE_ALPHAMAP\ndiffuseColor.a*=texture2D(alphaMap,vUv).g;\n#endif",alphamap_pars_fragment:"#ifdef USE_ALPHAMAP\nuniform sampler2D alphaMap;\n#endif",alphatest_fragment:"#ifdef USE_ALPHATEST\nif(diffuseColor.a<alphaTest)discard;\n#endif",alphatest_pars_fragment:"#ifdef USE_ALPHATEST\nuniform float alphaTest;\n#endif",aomap_fragment:"#ifdef USE_AOMAP\nfloat ambientOcclusion=(texture2D(aoMap,vUv2).r-1.0)*aoMapIntensity+1.0;reflectedLight.indirectDiffuse*=ambientOcclusion;\n#if defined(USE_ENVMAP)&&defined(STANDARD)\nfloat dotNV=saturate(dot(geometry.normal,geometry.viewDir));reflectedLight.indirectSpecular*=computeSpecularOcclusion(dotNV,ambientOcclusion,material.roughness);\n#endif\n#endif",aomap_pars_fragment:"#ifdef USE_AOMAP\nuniform sampler2D aoMap;uniform float aoMapIntensity;\n#endif",begin_vertex:"vec3 transformed=vec3(position);",beginnormal_vertex:"vec3 objectNormal=vec3(normal);\n#ifdef USE_TANGENT\nvec3 objectTangent=vec3(tangent.xyz);\n#endif",bsdfs:"vec3 BRDF_Lambert(const in vec3 diffuseColor){return RECIPROCAL_PI*diffuseColor;}vec3 F_Schlick(const in vec3 f0,const in float f90,const in float dotVH){float fresnel=exp2((-5.55473*dotVH-6.98316)*dotVH);return f0*(1.0-fresnel)+(f90*fresnel);}float V_GGX_SmithCorrelated(const in float alpha,const in float dotNL,const in float dotNV){float a2=pow2(alpha);float gv=dotNL*sqrt(a2+(1.0-a2)*pow2(dotNV));float gl=dotNV*sqrt(a2+(1.0-a2)*pow2(dotNL));return 0.5/max(gv+gl,EPSILON);}float D_GGX(const in float alpha,const in float dotNH){float a2=pow2(alpha);float denom=pow2(dotNH)*(a2-1.0)+1.0;return RECIPROCAL_PI*a2/pow2(denom);}vec3 BRDF_GGX(const in vec3 lightDir,const in vec3 viewDir,const in vec3 normal,const in vec3 f0,const in float f90,const in float roughness){float alpha=pow2(roughness);vec3 halfDir=normalize(lightDir+viewDir);float dotNL=saturate(dot(normal,lightDir));float dotNV=saturate(dot(normal,viewDir));float dotNH=saturate(dot(normal,halfDir));float dotVH=saturate(dot(viewDir,halfDir));vec3 F=F_Schlick(f0,f90,dotVH);float V=V_GGX_SmithCorrelated(alpha,dotNL,dotNV);float D=D_GGX(alpha,dotNH);return F*(V*D);}vec2 LTC_Uv(const in vec3 N,const in vec3 V,const in float roughness){const float LUT_SIZE=64.0;const float LUT_SCALE=(LUT_SIZE-1.0)/LUT_SIZE;const float LUT_BIAS=0.5/LUT_SIZE;float dotNV=saturate(dot(N,V));vec2 uv=vec2(roughness,sqrt(1.0-dotNV));uv=uv*LUT_SCALE+LUT_BIAS;return uv;}float LTC_ClippedSphereFormFactor(const in vec3 f){float l=length(f);return max((l*l+f.z)/(l+1.0),0.0);}vec3 LTC_EdgeVectorFormFactor(const in vec3 v1,const in vec3 v2){float x=dot(v1,v2);float y=abs(x);float a=0.8543985+(0.4965155+0.0145206*y)*y;float b=3.4175940+(4.1616724+y)*y;float v=a/b;float theta_sintheta=(x>0.0)?v:0.5*inversesqrt(max(1.0-x*x,1e-7))-v;return cross(v1,v2)*theta_sintheta;}vec3 LTC_Evaluate(const in vec3 N,const in vec3 V,const in vec3 P,const in mat3 mInv,const in vec3 rectCoords[4]){vec3 v1=rectCoords[1]-rectCoords[0];vec3 v2=rectCoords[3]-rectCoords[0];vec3 lightNormal=cross(v1,v2);if(dot(lightNormal,P-rectCoords[0])<0.0)return vec3(0.0);vec3 T1,T2;T1=normalize(V-N*dot(V,N));T2=-cross(N,T1);mat3 mat=mInv*transposeMat3(mat3(T1,T2,N));vec3 coords[4];coords[0]=mat*(rectCoords[0]-P);coords[1]=mat*(rectCoords[1]-P);coords[2]=mat*(rectCoords[2]-P);coords[3]=mat*(rectCoords[3]-P);coords[0]=normalize(coords[0]);coords[1]=normalize(coords[1]);coords[2]=normalize(coords[2]);coords[3]=normalize(coords[3]);vec3 vectorFormFactor=vec3(0.0);vectorFormFactor+=LTC_EdgeVectorFormFactor(coords[0],coords[1]);vectorFormFactor+=LTC_EdgeVectorFormFactor(coords[1],coords[2]);vectorFormFactor+=LTC_EdgeVectorFormFactor(coords[2],coords[3]);vectorFormFactor+=LTC_EdgeVectorFormFactor(coords[3],coords[0]);float result=LTC_ClippedSphereFormFactor(vectorFormFactor);return vec3(result);}float G_BlinnPhong_Implicit(){return 0.25;}float D_BlinnPhong(const in float shininess,const in float dotNH){return RECIPROCAL_PI*(shininess*0.5+1.0)*pow(dotNH,shininess);}vec3 BRDF_BlinnPhong(const in vec3 lightDir,const in vec3 viewDir,const in vec3 normal,const in vec3 specularColor,const in float shininess){vec3 halfDir=normalize(lightDir+viewDir);float dotNH=saturate(dot(normal,halfDir));float dotVH=saturate(dot(viewDir,halfDir));vec3 F=F_Schlick(specularColor,1.0,dotVH);float G=G_BlinnPhong_Implicit();float D=D_BlinnPhong(shininess,dotNH);return F*(G*D);}\n#if defined(USE_SHEEN)\nfloat D_Charlie(float roughness,float dotNH){float alpha=pow2(roughness);float invAlpha=1.0/alpha;float cos2h=dotNH*dotNH;float sin2h=max(1.0-cos2h,0.0078125);return(2.0+invAlpha)*pow(sin2h,invAlpha*0.5)/(2.0*PI);}float V_Neubelt(float dotNV,float dotNL){return saturate(1.0/(4.0*(dotNL+dotNV-dotNL*dotNV)));}vec3 BRDF_Sheen(const in vec3 lightDir,const in vec3 viewDir,const in vec3 normal,vec3 sheenColor,const in float sheenRoughness){vec3 halfDir=normalize(lightDir+viewDir);float dotNL=saturate(dot(normal,lightDir));float dotNV=saturate(dot(normal,viewDir));float dotNH=saturate(dot(normal,halfDir));float D=D_Charlie(sheenRoughness,dotNH);float V=V_Neubelt(dotNV,dotNL);return sheenColor*(D*V);}\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\nuniform sampler2D bumpMap;uniform float bumpScale;vec2 dHdxy_fwd(){vec2 dSTdx=dFdx(vUv);vec2 dSTdy=dFdy(vUv);float Hll=bumpScale*texture2D(bumpMap,vUv).x;float dBx=bumpScale*texture2D(bumpMap,vUv+dSTdx).x-Hll;float dBy=bumpScale*texture2D(bumpMap,vUv+dSTdy).x-Hll;return vec2(dBx,dBy);}vec3 perturbNormalArb(vec3 surf_pos,vec3 surf_norm,vec2 dHdxy,float faceDirection){vec3 vSigmaX=vec3(dFdx(surf_pos.x),dFdx(surf_pos.y),dFdx(surf_pos.z));vec3 vSigmaY=vec3(dFdy(surf_pos.x),dFdy(surf_pos.y),dFdy(surf_pos.z));vec3 vN=surf_norm;vec3 R1=cross(vSigmaY,vN);vec3 R2=cross(vN,vSigmaX);float fDet=dot(vSigmaX,R1)*faceDirection;vec3 vGrad=sign(fDet)*(dHdxy.x*R1+dHdxy.y*R2);return normalize(abs(fDet)*surf_norm-vGrad);}\n#endif",clipping_planes_fragment:"#if NUM_CLIPPING_PLANES>0\nvec4 plane;\n#pragma unroll_loop_start\nfor(int i=0;i<UNION_CLIPPING_PLANES;i++){plane=clippingPlanes[i];if(dot(vClipPosition,plane.xyz)>plane.w)discard;}\n#pragma unroll_loop_end\n#if UNION_CLIPPING_PLANES<NUM_CLIPPING_PLANES\nbool clipped=true;\n#pragma unroll_loop_start\nfor(int i=UNION_CLIPPING_PLANES;i<NUM_CLIPPING_PLANES;i++){plane=clippingPlanes[i];clipped=(dot(vClipPosition,plane.xyz)>plane.w)&&clipped;}\n#pragma unroll_loop_end\nif(clipped)discard;\n#endif\n#endif",clipping_planes_pars_fragment:"#if NUM_CLIPPING_PLANES>0\nvarying vec3 vClipPosition;uniform vec4 clippingPlanes[NUM_CLIPPING_PLANES];\n#endif",clipping_planes_pars_vertex:"#if NUM_CLIPPING_PLANES>0\nvarying vec3 vClipPosition;\n#endif",clipping_planes_vertex:"#if NUM_CLIPPING_PLANES>0\nvClipPosition=-mvPosition.xyz;\n#endif",color_fragment:"#if defined(USE_COLOR_ALPHA)\ndiffuseColor*=vColor;\n#elif defined(USE_COLOR)\ndiffuseColor.rgb*=vColor;\n#endif",color_pars_fragment:"#if defined(USE_COLOR_ALPHA)\nvarying vec4 vColor;\n#elif defined(USE_COLOR)\nvarying vec3 vColor;\n#endif",color_pars_vertex:"#if defined(USE_COLOR_ALPHA)\nvarying vec4 vColor;\n#elif defined(USE_COLOR)||defined(USE_INSTANCING_COLOR)\nvarying vec3 vColor;\n#endif",color_vertex:"#if defined(USE_COLOR_ALPHA)\nvColor=vec4(1.0);\n#elif defined(USE_COLOR)||defined(USE_INSTANCING_COLOR)\nvColor=vec3(1.0);\n#endif\n#ifdef USE_COLOR\nvColor*=color;\n#endif\n#ifdef USE_INSTANCING_COLOR\nvColor.xyz*=instanceColor.xyz;\n#endif",common:"#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate(a)clamp(a,0.0,1.0)\n#endif\n#define whiteComplement(a)(1.0-saturate(a))\nfloat pow2(const in float x){return x*x;}float pow3(const in float x){return x*x*x;}float pow4(const in float x){float x2=x*x;return x2*x2;}float max3(const in vec3 v){return max(max(v.x,v.y),v.z);}float average(const in vec3 color){return dot(color,vec3(0.3333));}highp float rand(const in vec2 uv){const highp float a=12.9898,b=78.233,c=43758.5453;highp float dt=dot(uv.xy,vec2(a,b)),sn=mod(dt,PI);return fract(sin(sn)*c);}\n#ifdef HIGH_PRECISION\nfloat precisionSafeLength(vec3 v){return length(v);}\n#else\nfloat precisionSafeLength(vec3 v){float maxComponent=max3(abs(v));return length(v/maxComponent)*maxComponent;}\n#endif\nstruct IncidentLight{vec3 color;vec3 direction;bool visible;};struct ReflectedLight{vec3 directDiffuse;vec3 directSpecular;vec3 indirectDiffuse;vec3 indirectSpecular;};struct GeometricContext{vec3 position;vec3 normal;vec3 viewDir;\n#ifdef USE_CLEARCOAT\nvec3 clearcoatNormal;\n#endif\n};vec3 transformDirection(in vec3 dir,in mat4 matrix){return normalize((matrix*vec4(dir,0.0)).xyz);}vec3 inverseTransformDirection(in vec3 dir,in mat4 matrix){return normalize((vec4(dir,0.0)*matrix).xyz);}mat3 transposeMat3(const in mat3 m){mat3 tmp;tmp[0]=vec3(m[0].x,m[1].x,m[2].x);tmp[1]=vec3(m[0].y,m[1].y,m[2].y);tmp[2]=vec3(m[0].z,m[1].z,m[2].z);return tmp;}float linearToRelativeLuminance(const in vec3 color){vec3 weights=vec3(0.2126,0.7152,0.0722);return dot(weights,color.rgb);}bool isPerspectiveMatrix(mat4 m){return m[2][3]==-1.0;}vec2 equirectUv(in vec3 dir){float u=atan(dir.z,dir.x)*RECIPROCAL_PI2+0.5;float v=asin(clamp(dir.y,-1.0,1.0))*RECIPROCAL_PI+0.5;return vec2(u,v);}",cube_uv_reflection_fragment:"#ifdef ENVMAP_TYPE_CUBE_UV\n#define cubeUV_maxMipLevel 8.0\n#define cubeUV_minMipLevel 4.0\n#define cubeUV_maxTileSize 256.0\n#define cubeUV_minTileSize 16.0\nfloat getFace(vec3 direction){vec3 absDirection=abs(direction);float face=-1.0;if(absDirection.x>absDirection.z){if(absDirection.x>absDirection.y)face=direction.x>0.0?0.0:3.0;else face=direction.y>0.0?1.0:4.0;}else{if(absDirection.z>absDirection.y)face=direction.z>0.0?2.0:5.0;else face=direction.y>0.0?1.0:4.0;}return face;}vec2 getUV(vec3 direction,float face){vec2 uv;if(face==0.0){uv=vec2(direction.z,direction.y)/abs(direction.x);}else if(face==1.0){uv=vec2(-direction.x,-direction.z)/abs(direction.y);}else if(face==2.0){uv=vec2(-direction.x,direction.y)/abs(direction.z);}else if(face==3.0){uv=vec2(-direction.z,direction.y)/abs(direction.x);}else if(face==4.0){uv=vec2(-direction.x,direction.z)/abs(direction.y);}else{uv=vec2(direction.x,direction.y)/abs(direction.z);}return 0.5*(uv+1.0);}vec3 bilinearCubeUV(sampler2D envMap,vec3 direction,float mipInt){float face=getFace(direction);float filterInt=max(cubeUV_minMipLevel-mipInt,0.0);mipInt=max(mipInt,cubeUV_minMipLevel);float faceSize=exp2(mipInt);float texelSize=1.0/(3.0*cubeUV_maxTileSize);vec2 uv=getUV(direction,face)*(faceSize-1.0);vec2 f=fract(uv);uv+=0.5-f;if(face>2.0){uv.y+=faceSize;face-=3.0;}uv.x+=face*faceSize;if(mipInt<cubeUV_maxMipLevel){uv.y+=2.0*cubeUV_maxTileSize;}uv.y+=filterInt*2.0*cubeUV_minTileSize;uv.x+=3.0*max(0.0,cubeUV_maxTileSize-2.0*faceSize);uv*=texelSize;vec3 tl=envMapTexelToLinear(texture2D(envMap,uv)).rgb;uv.x+=texelSize;vec3 tr=envMapTexelToLinear(texture2D(envMap,uv)).rgb;uv.y+=texelSize;vec3 br=envMapTexelToLinear(texture2D(envMap,uv)).rgb;uv.x-=texelSize;vec3 bl=envMapTexelToLinear(texture2D(envMap,uv)).rgb;vec3 tm=mix(tl,tr,f.x);vec3 bm=mix(bl,br,f.x);return mix(tm,bm,f.y);}\n#define r0 1.0\n#define v0 0.339\n#define m0-2.0\n#define r1 0.8\n#define v1 0.276\n#define m1-1.0\n#define r4 0.4\n#define v4 0.046\n#define m4 2.0\n#define r5 0.305\n#define v5 0.016\n#define m5 3.0\n#define r6 0.21\n#define v6 0.0038\n#define m6 4.0\nfloat roughnessToMip(float roughness){float mip=0.0;if(roughness>=r1){mip=(r0-roughness)*(m1-m0)/(r0-r1)+m0;}else if(roughness>=r4){mip=(r1-roughness)*(m4-m1)/(r1-r4)+m1;}else if(roughness>=r5){mip=(r4-roughness)*(m5-m4)/(r4-r5)+m4;}else if(roughness>=r6){mip=(r5-roughness)*(m6-m5)/(r5-r6)+m5;}else{mip=-2.0*log2(1.16*roughness);}return mip;}vec4 textureCubeUV(sampler2D envMap,vec3 sampleDir,float roughness){float mip=clamp(roughnessToMip(roughness),m0,cubeUV_maxMipLevel);float mipF=fract(mip);float mipInt=floor(mip);vec3 color0=bilinearCubeUV(envMap,sampleDir,mipInt);if(mipF==0.0){return vec4(color0,1.0);}else{vec3 color1=bilinearCubeUV(envMap,sampleDir,mipInt+1.0);return vec4(mix(color0,color1,mipF),1.0);}}\n#endif",defaultnormal_vertex:"vec3 transformedNormal=objectNormal;\n#ifdef USE_INSTANCING\nmat3 m=mat3(instanceMatrix);transformedNormal/=vec3(dot(m[0],m[0]),dot(m[1],m[1]),dot(m[2],m[2]));transformedNormal=m*transformedNormal;\n#endif\ntransformedNormal=normalMatrix*transformedNormal;\n#ifdef FLIP_SIDED\ntransformedNormal=-transformedNormal;\n#endif\n#ifdef USE_TANGENT\nvec3 transformedTangent=(modelViewMatrix*vec4(objectTangent,0.0)).xyz;\n#ifdef FLIP_SIDED\ntransformedTangent=-transformedTangent;\n#endif\n#endif",displacementmap_pars_vertex:"#ifdef USE_DISPLACEMENTMAP\nuniform sampler2D displacementMap;uniform float displacementScale;uniform float displacementBias;\n#endif",displacementmap_vertex:"#ifdef USE_DISPLACEMENTMAP\ntransformed+=normalize(objectNormal)*(texture2D(displacementMap,vUv).x*displacementScale+displacementBias);\n#endif",emissivemap_fragment:"#ifdef USE_EMISSIVEMAP\nvec4 emissiveColor=texture2D(emissiveMap,vUv);emissiveColor.rgb=emissiveMapTexelToLinear(emissiveColor).rgb;totalEmissiveRadiance*=emissiveColor.rgb;\n#endif",emissivemap_pars_fragment:"#ifdef USE_EMISSIVEMAP\nuniform sampler2D emissiveMap;\n#endif",encodings_fragment:"gl_FragColor=linearToOutputTexel(gl_FragColor);",encodings_pars_fragment:"vec4 LinearToLinear(in vec4 value){return value;}vec4 GammaToLinear(in vec4 value,in float gammaFactor){return vec4(pow(value.rgb,vec3(gammaFactor)),value.a);}vec4 LinearToGamma(in vec4 value,in float gammaFactor){return vec4(pow(value.rgb,vec3(1.0/gammaFactor)),value.a);}vec4 sRGBToLinear(in vec4 value){return vec4(mix(pow(value.rgb*0.9478672986+vec3(0.0521327014),vec3(2.4)),value.rgb*0.0773993808,vec3(lessThanEqual(value.rgb,vec3(0.04045)))),value.a);}vec4 LinearTosRGB(in vec4 value){return vec4(mix(pow(value.rgb,vec3(0.41666))*1.055-vec3(0.055),value.rgb*12.92,vec3(lessThanEqual(value.rgb,vec3(0.0031308)))),value.a);}vec4 RGBEToLinear(in vec4 value){return vec4(value.rgb*exp2(value.a*255.0-128.0),1.0);}vec4 LinearToRGBE(in vec4 value){float maxComponent=max(max(value.r,value.g),value.b);float fExp=clamp(ceil(log2(maxComponent)),-128.0,127.0);return vec4(value.rgb/exp2(fExp),(fExp+128.0)/255.0);}vec4 RGBMToLinear(in vec4 value,in float maxRange){return vec4(value.rgb*value.a*maxRange,1.0);}vec4 LinearToRGBM(in vec4 value,in float maxRange){float maxRGB=max(value.r,max(value.g,value.b));float M=clamp(maxRGB/maxRange,0.0,1.0);M=ceil(M*255.0)/255.0;return vec4(value.rgb/(M*maxRange),M);}vec4 RGBDToLinear(in vec4 value,in float maxRange){return vec4(value.rgb*((maxRange/255.0)/value.a),1.0);}vec4 LinearToRGBD(in vec4 value,in float maxRange){float maxRGB=max(value.r,max(value.g,value.b));float D=max(maxRange/maxRGB,1.0);D=clamp(floor(D)/255.0,0.0,1.0);return vec4(value.rgb*(D*(255.0/maxRange)),D);}const mat3 cLogLuvM=mat3(0.2209,0.3390,0.4184,0.1138,0.6780,0.7319,0.0102,0.1130,0.2969);vec4 LinearToLogLuv(in vec4 value){vec3 Xp_Y_XYZp=cLogLuvM*value.rgb;Xp_Y_XYZp=max(Xp_Y_XYZp,vec3(1e-6,1e-6,1e-6));vec4 vResult;vResult.xy=Xp_Y_XYZp.xy/Xp_Y_XYZp.z;float Le=2.0*log2(Xp_Y_XYZp.y)+127.0;vResult.w=fract(Le);vResult.z=(Le-(floor(vResult.w*255.0))/255.0)/255.0;return vResult;}const mat3 cLogLuvInverseM=mat3(6.0014,-2.7008,-1.7996,-1.3320,3.1029,-5.7721,0.3008,-1.0882,5.6268);vec4 LogLuvToLinear(in vec4 value){float Le=value.z*255.0+value.w;vec3 Xp_Y_XYZp;Xp_Y_XYZp.y=exp2((Le-127.0)/2.0);Xp_Y_XYZp.z=Xp_Y_XYZp.y/value.y;Xp_Y_XYZp.x=value.x*Xp_Y_XYZp.z;vec3 vRGB=cLogLuvInverseM*Xp_Y_XYZp.rgb;return vec4(max(vRGB,0.0),1.0);}",envmap_fragment:"#ifdef USE_ENVMAP\n#ifdef ENV_WORLDPOS\nvec3 cameraToFrag;if(isOrthographic){cameraToFrag=normalize(vec3(-viewMatrix[0][2],-viewMatrix[1][2],-viewMatrix[2][2]));}else{cameraToFrag=normalize(vWorldPosition-cameraPosition);}vec3 worldNormal=inverseTransformDirection(normal,viewMatrix);\n#ifdef ENVMAP_MODE_REFLECTION\nvec3 reflectVec=reflect(cameraToFrag,worldNormal);\n#else\nvec3 reflectVec=refract(cameraToFrag,worldNormal,refractionRatio);\n#endif\n#else\nvec3 reflectVec=vReflect;\n#endif\n#ifdef ENVMAP_TYPE_CUBE\nvec4 envColor=textureCube(envMap,vec3(flipEnvMap*reflectVec.x,reflectVec.yz));envColor=envMapTexelToLinear(envColor);\n#elif defined(ENVMAP_TYPE_CUBE_UV)\nvec4 envColor=textureCubeUV(envMap,reflectVec,0.0);\n#else\nvec4 envColor=vec4(0.0);\n#endif\n#ifdef ENVMAP_BLENDING_MULTIPLY\noutgoingLight=mix(outgoingLight,outgoingLight*envColor.xyz,specularStrength*reflectivity);\n#elif defined(ENVMAP_BLENDING_MIX)\noutgoingLight=mix(outgoingLight,envColor.xyz,specularStrength*reflectivity);\n#elif defined(ENVMAP_BLENDING_ADD)\noutgoingLight+=envColor.xyz*specularStrength*reflectivity;\n#endif\n#endif",envmap_common_pars_fragment:"#ifdef USE_ENVMAP\nuniform float envMapIntensity;uniform float flipEnvMap;uniform int maxMipLevel;\n#ifdef ENVMAP_TYPE_CUBE\nuniform samplerCube envMap;\n#else\nuniform sampler2D envMap;\n#endif\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\nuniform float reflectivity;\n#if defined(USE_BUMPMAP)||defined(USE_NORMALMAP)||defined(PHONG)\n#define ENV_WORLDPOS\n#endif\n#ifdef ENV_WORLDPOS\nvarying vec3 vWorldPosition;uniform float refractionRatio;\n#else\nvarying vec3 vReflect;\n#endif\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\n#if defined(USE_BUMPMAP)||defined(USE_NORMALMAP)||defined(PHONG)\n#define ENV_WORLDPOS\n#endif\n#ifdef ENV_WORLDPOS\nvarying vec3 vWorldPosition;\n#else\nvarying vec3 vReflect;uniform float refractionRatio;\n#endif\n#endif",envmap_physical_pars_fragment:"#if defined(USE_ENVMAP)\n#ifdef ENVMAP_MODE_REFRACTION\nuniform float refractionRatio;\n#endif\nvec3 getIBLIrradiance(const in vec3 normal){\n#if defined(ENVMAP_TYPE_CUBE_UV)\nvec3 worldNormal=inverseTransformDirection(normal,viewMatrix);vec4 envMapColor=textureCubeUV(envMap,worldNormal,1.0);return PI*envMapColor.rgb*envMapIntensity;\n#else\nreturn vec3(0.0);\n#endif\n}vec3 getIBLRadiance(const in vec3 viewDir,const in vec3 normal,const in float roughness){\n#if defined(ENVMAP_TYPE_CUBE_UV)\nvec3 reflectVec;\n#ifdef ENVMAP_MODE_REFLECTION\nreflectVec=reflect(-viewDir,normal);reflectVec=normalize(mix(reflectVec,normal,roughness*roughness));\n#else\nreflectVec=refract(-viewDir,normal,refractionRatio);\n#endif\nreflectVec=inverseTransformDirection(reflectVec,viewMatrix);vec4 envMapColor=textureCubeUV(envMap,reflectVec,roughness);return envMapColor.rgb*envMapIntensity;\n#else\nreturn vec3(0.0);\n#endif\n}\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\n#ifdef ENV_WORLDPOS\nvWorldPosition=worldPosition.xyz;\n#else\nvec3 cameraToVertex;if(isOrthographic){cameraToVertex=normalize(vec3(-viewMatrix[0][2],-viewMatrix[1][2],-viewMatrix[2][2]));}else{cameraToVertex=normalize(worldPosition.xyz-cameraPosition);}vec3 worldNormal=inverseTransformDirection(transformedNormal,viewMatrix);\n#ifdef ENVMAP_MODE_REFLECTION\nvReflect=reflect(cameraToVertex,worldNormal);\n#else\nvReflect=refract(cameraToVertex,worldNormal,refractionRatio);\n#endif\n#endif\n#endif",fog_vertex:"#ifdef USE_FOG\nvFogDepth=-mvPosition.z;\n#endif",fog_pars_vertex:"#ifdef USE_FOG\nvarying float vFogDepth;\n#endif",fog_fragment:"#ifdef USE_FOG\n#ifdef FOG_EXP2\nfloat fogFactor=1.0-exp(-fogDensity*fogDensity*vFogDepth*vFogDepth);\n#else\nfloat fogFactor=smoothstep(fogNear,fogFar,vFogDepth);\n#endif\ngl_FragColor.rgb=mix(gl_FragColor.rgb,fogColor,fogFactor);\n#endif",fog_pars_fragment:"#ifdef USE_FOG\nuniform vec3 fogColor;varying float vFogDepth;\n#ifdef FOG_EXP2\nuniform float fogDensity;\n#else\nuniform float fogNear;uniform float fogFar;\n#endif\n#endif",gradientmap_pars_fragment:"#ifdef USE_GRADIENTMAP\nuniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance(vec3 normal,vec3 lightDirection){float dotNL=dot(normal,lightDirection);vec2 coord=vec2(dotNL*0.5+0.5,0.0);\n#ifdef USE_GRADIENTMAP\nreturn texture2D(gradientMap,coord).rgb;\n#else\nreturn(coord.x<0.7)?vec3(0.7):vec3(1.0);\n#endif\n}",lightmap_fragment:"#ifdef USE_LIGHTMAP\nvec4 lightMapTexel=texture2D(lightMap,vUv2);vec3 lightMapIrradiance=lightMapTexelToLinear(lightMapTexel).rgb*lightMapIntensity;\n#ifndef PHYSICALLY_CORRECT_LIGHTS\nlightMapIrradiance*=PI;\n#endif\nreflectedLight.indirectDiffuse+=lightMapIrradiance;\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\nuniform sampler2D lightMap;uniform float lightMapIntensity;\n#endif",lights_lambert_vertex:"vec3 diffuse=vec3(1.0);GeometricContext geometry;geometry.position=mvPosition.xyz;geometry.normal=normalize(transformedNormal);geometry.viewDir=(isOrthographic)?vec3(0,0,1):normalize(-mvPosition.xyz);GeometricContext backGeometry;backGeometry.position=geometry.position;backGeometry.normal=-geometry.normal;backGeometry.viewDir=geometry.viewDir;vLightFront=vec3(0.0);vIndirectFront=vec3(0.0);\n#ifdef DOUBLE_SIDED\nvLightBack=vec3(0.0);vIndirectBack=vec3(0.0);\n#endif\nIncidentLight directLight;float dotNL;vec3 directLightColor_Diffuse;vIndirectFront+=getAmbientLightIrradiance(ambientLightColor);vIndirectFront+=getLightProbeIrradiance(lightProbe,geometry.normal);\n#ifdef DOUBLE_SIDED\nvIndirectBack+=getAmbientLightIrradiance(ambientLightColor);vIndirectBack+=getLightProbeIrradiance(lightProbe,backGeometry.normal);\n#endif\n#if NUM_POINT_LIGHTS>0\n#pragma unroll_loop_start\nfor(int i=0;i<NUM_POINT_LIGHTS;i++){getPointLightInfo(pointLights[i],geometry,directLight);dotNL=dot(geometry.normal,directLight.direction);directLightColor_Diffuse=directLight.color;vLightFront+=saturate(dotNL)*directLightColor_Diffuse;\n#ifdef DOUBLE_SIDED\nvLightBack+=saturate(-dotNL)*directLightColor_Diffuse;\n#endif\n}\n#pragma unroll_loop_end\n#endif\n#if NUM_SPOT_LIGHTS>0\n#pragma unroll_loop_start\nfor(int i=0;i<NUM_SPOT_LIGHTS;i++){getSpotLightInfo(spotLights[i],geometry,directLight);dotNL=dot(geometry.normal,directLight.direction);directLightColor_Diffuse=directLight.color;vLightFront+=saturate(dotNL)*directLightColor_Diffuse;\n#ifdef DOUBLE_SIDED\nvLightBack+=saturate(-dotNL)*directLightColor_Diffuse;\n#endif\n}\n#pragma unroll_loop_end\n#endif\n#if NUM_DIR_LIGHTS>0\n#pragma unroll_loop_start\nfor(int i=0;i<NUM_DIR_LIGHTS;i++){getDirectionalLightInfo(directionalLights[i],geometry,directLight);dotNL=dot(geometry.normal,directLight.direction);directLightColor_Diffuse=directLight.color;vLightFront+=saturate(dotNL)*directLightColor_Diffuse;\n#ifdef DOUBLE_SIDED\nvLightBack+=saturate(-dotNL)*directLightColor_Diffuse;\n#endif\n}\n#pragma unroll_loop_end\n#endif\n#if NUM_HEMI_LIGHTS>0\n#pragma unroll_loop_start\nfor(int i=0;i<NUM_HEMI_LIGHTS;i++){vIndirectFront+=getHemisphereLightIrradiance(hemisphereLights[i],geometry.normal);\n#ifdef DOUBLE_SIDED\nvIndirectBack+=getHemisphereLightIrradiance(hemisphereLights[i],backGeometry.normal);\n#endif\n}\n#pragma unroll_loop_end\n#endif",lights_pars_begin:"uniform bool receiveShadow;uniform vec3 ambientLightColor;uniform vec3 lightProbe[9];vec3 shGetIrradianceAt(in vec3 normal,in vec3 shCoefficients[9]){float x=normal.x,y=normal.y,z=normal.z;vec3 result=shCoefficients[0]*0.886227;result+=shCoefficients[1]*2.0*0.511664*y;result+=shCoefficients[2]*2.0*0.511664*z;result+=shCoefficients[3]*2.0*0.511664*x;result+=shCoefficients[4]*2.0*0.429043*x*y;result+=shCoefficients[5]*2.0*0.429043*y*z;result+=shCoefficients[6]*(0.743125*z*z-0.247708);result+=shCoefficients[7]*2.0*0.429043*x*z;result+=shCoefficients[8]*0.429043*(x*x-y*y);return result;}vec3 getLightProbeIrradiance(const in vec3 lightProbe[9],const in vec3 normal){vec3 worldNormal=inverseTransformDirection(normal,viewMatrix);vec3 irradiance=shGetIrradianceAt(worldNormal,lightProbe);return irradiance;}vec3 getAmbientLightIrradiance(const in vec3 ambientLightColor){vec3 irradiance=ambientLightColor;return irradiance;}float getDistanceAttenuation(const in float lightDistance,const in float cutoffDistance,const in float decayExponent){\n#if defined(PHYSICALLY_CORRECT_LIGHTS)\nfloat distanceFalloff=1.0/max(pow(lightDistance,decayExponent),0.01);if(cutoffDistance>0.0){distanceFalloff*=pow2(saturate(1.0-pow4(lightDistance/cutoffDistance)));}return distanceFalloff;\n#else\nif(cutoffDistance>0.0&&decayExponent>0.0){return pow(saturate(-lightDistance/cutoffDistance+1.0),decayExponent);}return 1.0;\n#endif\n}float getSpotAttenuation(const in float coneCosine,const in float penumbraCosine,const in float angleCosine){return smoothstep(coneCosine,penumbraCosine,angleCosine);}\n#if NUM_DIR_LIGHTS>0\nstruct DirectionalLight{vec3 direction;vec3 color;};uniform DirectionalLight directionalLights[NUM_DIR_LIGHTS];void getDirectionalLightInfo(const in DirectionalLight directionalLight,const in GeometricContext geometry,out IncidentLight light){light.color=directionalLight.color;light.direction=directionalLight.direction;light.visible=true;}\n#endif\n#if NUM_POINT_LIGHTS>0\nstruct PointLight{vec3 position;vec3 color;float distance;float decay;};uniform PointLight pointLights[NUM_POINT_LIGHTS];void getPointLightInfo(const in PointLight pointLight,const in GeometricContext geometry,out IncidentLight light){vec3 lVector=pointLight.position-geometry.position;light.direction=normalize(lVector);float lightDistance=length(lVector);light.color=pointLight.color;light.color*=getDistanceAttenuation(lightDistance,pointLight.distance,pointLight.decay);light.visible=(light.color!=vec3(0.0));}\n#endif\n#if NUM_SPOT_LIGHTS>0\nstruct SpotLight{vec3 position;vec3 direction;vec3 color;float distance;float decay;float coneCos;float penumbraCos;};uniform SpotLight spotLights[NUM_SPOT_LIGHTS];void getSpotLightInfo(const in SpotLight spotLight,const in GeometricContext geometry,out IncidentLight light){vec3 lVector=spotLight.position-geometry.position;light.direction=normalize(lVector);float angleCos=dot(light.direction,spotLight.direction);float spotAttenuation=getSpotAttenuation(spotLight.coneCos,spotLight.penumbraCos,angleCos);if(spotAttenuation>0.0){float lightDistance=length(lVector);light.color=spotLight.color*spotAttenuation;light.color*=getDistanceAttenuation(lightDistance,spotLight.distance,spotLight.decay);light.visible=(light.color!=vec3(0.0));}else{light.color=vec3(0.0);light.visible=false;}}\n#endif\n#if NUM_RECT_AREA_LIGHTS>0\nstruct RectAreaLight{vec3 color;vec3 position;vec3 halfWidth;vec3 halfHeight;};uniform sampler2D ltc_1;uniform sampler2D ltc_2;uniform RectAreaLight rectAreaLights[NUM_RECT_AREA_LIGHTS];\n#endif\n#if NUM_HEMI_LIGHTS>0\nstruct HemisphereLight{vec3 direction;vec3 skyColor;vec3 groundColor;};uniform HemisphereLight hemisphereLights[NUM_HEMI_LIGHTS];vec3 getHemisphereLightIrradiance(const in HemisphereLight hemiLight,const in vec3 normal){float dotNL=dot(normal,hemiLight.direction);float hemiDiffuseWeight=0.5*dotNL+0.5;vec3 irradiance=mix(hemiLight.groundColor,hemiLight.skyColor,hemiDiffuseWeight);return irradiance;}\n#endif",lights_toon_fragment:"ToonMaterial material;material.diffuseColor=diffuseColor.rgb;",lights_toon_pars_fragment:"varying vec3 vViewPosition;struct ToonMaterial{vec3 diffuseColor;};void RE_Direct_Toon(const in IncidentLight directLight,const in GeometricContext geometry,const in ToonMaterial material,inout ReflectedLight reflectedLight){vec3 irradiance=getGradientIrradiance(geometry.normal,directLight.direction)*directLight.color;reflectedLight.directDiffuse+=irradiance*BRDF_Lambert(material.diffuseColor);}void RE_IndirectDiffuse_Toon(const in vec3 irradiance,const in GeometricContext geometry,const in ToonMaterial material,inout ReflectedLight reflectedLight){reflectedLight.indirectDiffuse+=irradiance*BRDF_Lambert(material.diffuseColor);}\n#define RE_Direct RE_Direct_Toon\n#define RE_IndirectDiffuse RE_IndirectDiffuse_Toon\n#define Material_LightProbeLOD(material)(0)",lights_phong_fragment:"BlinnPhongMaterial material;material.diffuseColor=diffuseColor.rgb;material.specularColor=specular;material.specularShininess=shininess;material.specularStrength=specularStrength;",lights_phong_pars_fragment:"varying vec3 vViewPosition;struct BlinnPhongMaterial{vec3 diffuseColor;vec3 specularColor;float specularShininess;float specularStrength;};void RE_Direct_BlinnPhong(const in IncidentLight directLight,const in GeometricContext geometry,const in BlinnPhongMaterial material,inout ReflectedLight reflectedLight){float dotNL=saturate(dot(geometry.normal,directLight.direction));vec3 irradiance=dotNL*directLight.color;reflectedLight.directDiffuse+=irradiance*BRDF_Lambert(material.diffuseColor);reflectedLight.directSpecular+=irradiance*BRDF_BlinnPhong(directLight.direction,geometry.viewDir,geometry.normal,material.specularColor,material.specularShininess)*material.specularStrength;}void RE_IndirectDiffuse_BlinnPhong(const in vec3 irradiance,const in GeometricContext geometry,const in BlinnPhongMaterial material,inout ReflectedLight reflectedLight){reflectedLight.indirectDiffuse+=irradiance*BRDF_Lambert(material.diffuseColor);}\n#define RE_Direct RE_Direct_BlinnPhong\n#define RE_IndirectDiffuse RE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD(material)(0)",lights_physical_fragment:"PhysicalMaterial material;material.diffuseColor=diffuseColor.rgb*(1.0-metalnessFactor);vec3 dxy=max(abs(dFdx(geometryNormal)),abs(dFdy(geometryNormal)));float geometryRoughness=max(max(dxy.x,dxy.y),dxy.z);material.roughness=max(roughnessFactor,0.0525);material.roughness+=geometryRoughness;material.roughness=min(material.roughness,1.0);\n#ifdef IOR\n#ifdef SPECULAR\nfloat specularIntensityFactor=specularIntensity;vec3 specularColorFactor=specularColor;\n#ifdef USE_SPECULARINTENSITYMAP\nspecularIntensityFactor*=texture2D(specularIntensityMap,vUv).a;\n#endif\n#ifdef USE_SPECULARCOLORMAP\nspecularColorFactor*=specularColorMapTexelToLinear(texture2D(specularColorMap,vUv)).rgb;\n#endif\nmaterial.specularF90=mix(specularIntensityFactor,1.0,metalnessFactor);\n#else\nfloat specularIntensityFactor=1.0;vec3 specularColorFactor=vec3(1.0);material.specularF90=1.0;\n#endif\nmaterial.specularColor=mix(min(pow2((ior-1.0)/(ior+1.0))*specularColorFactor,vec3(1.0))*specularIntensityFactor,diffuseColor.rgb,metalnessFactor);\n#else\nmaterial.specularColor=mix(vec3(0.04),diffuseColor.rgb,metalnessFactor);material.specularF90=1.0;\n#endif\n#ifdef USE_CLEARCOAT\nmaterial.clearcoat=clearcoat;material.clearcoatRoughness=clearcoatRoughness;material.clearcoatF0=vec3(0.04);material.clearcoatF90=1.0;\n#ifdef USE_CLEARCOATMAP\nmaterial.clearcoat*=texture2D(clearcoatMap,vUv).x;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\nmaterial.clearcoatRoughness*=texture2D(clearcoatRoughnessMap,vUv).y;\n#endif\nmaterial.clearcoat=saturate(material.clearcoat);material.clearcoatRoughness=max(material.clearcoatRoughness,0.0525);material.clearcoatRoughness+=geometryRoughness;material.clearcoatRoughness=min(material.clearcoatRoughness,1.0);\n#endif\n#ifdef USE_SHEEN\nmaterial.sheenColor=sheenColor;\n#ifdef USE_SHEENCOLORMAP\nmaterial.sheenColor*=sheenColorMapTexelToLinear(texture2D(sheenColorMap,vUv)).rgb;\n#endif\nmaterial.sheenRoughness=clamp(sheenRoughness,0.07,1.0);\n#ifdef USE_SHEENROUGHNESSMAP\nmaterial.sheenRoughness*=texture2D(sheenRoughnessMap,vUv).a;\n#endif\n#endif",lights_physical_pars_fragment:"struct PhysicalMaterial{vec3 diffuseColor;float roughness;vec3 specularColor;float specularF90;\n#ifdef USE_CLEARCOAT\nfloat clearcoat;float clearcoatRoughness;vec3 clearcoatF0;float clearcoatF90;\n#endif\n#ifdef USE_SHEEN\nvec3 sheenColor;float sheenRoughness;\n#endif\n};vec3 clearcoatSpecular=vec3(0.0);vec2 DFGApprox(const in vec3 normal,const in vec3 viewDir,const in float roughness){float dotNV=saturate(dot(normal,viewDir));const vec4 c0=vec4(-1,-0.0275,-0.572,0.022);const vec4 c1=vec4(1,0.0425,1.04,-0.04);vec4 r=roughness*c0+c1;float a004=min(r.x*r.x,exp2(-9.28*dotNV))*r.x+r.y;vec2 fab=vec2(-1.04,1.04)*a004+r.zw;return fab;}vec3 EnvironmentBRDF(const in vec3 normal,const in vec3 viewDir,const in vec3 specularColor,const in float specularF90,const in float roughness){vec2 fab=DFGApprox(normal,viewDir,roughness);return specularColor*fab.x+specularF90*fab.y;}void computeMultiscattering(const in vec3 normal,const in vec3 viewDir,const in vec3 specularColor,const in float specularF90,const in float roughness,inout vec3 singleScatter,inout vec3 multiScatter){vec2 fab=DFGApprox(normal,viewDir,roughness);vec3 FssEss=specularColor*fab.x+specularF90*fab.y;float Ess=fab.x+fab.y;float Ems=1.0-Ess;vec3 Favg=specularColor+(1.0-specularColor)*0.047619;vec3 Fms=FssEss*Favg/(1.0-Ems*Favg);singleScatter+=FssEss;multiScatter+=Fms*Ems;}\n#if NUM_RECT_AREA_LIGHTS>0\nvoid RE_Direct_RectArea_Physical(const in RectAreaLight rectAreaLight,const in GeometricContext geometry,const in PhysicalMaterial material,inout ReflectedLight reflectedLight){vec3 normal=geometry.normal;vec3 viewDir=geometry.viewDir;vec3 position=geometry.position;vec3 lightPos=rectAreaLight.position;vec3 halfWidth=rectAreaLight.halfWidth;vec3 halfHeight=rectAreaLight.halfHeight;vec3 lightColor=rectAreaLight.color;float roughness=material.roughness;vec3 rectCoords[4];rectCoords[0]=lightPos+halfWidth-halfHeight;rectCoords[1]=lightPos-halfWidth-halfHeight;rectCoords[2]=lightPos-halfWidth+halfHeight;rectCoords[3]=lightPos+halfWidth+halfHeight;vec2 uv=LTC_Uv(normal,viewDir,roughness);vec4 t1=texture2D(ltc_1,uv);vec4 t2=texture2D(ltc_2,uv);mat3 mInv=mat3(vec3(t1.x,0,t1.y),vec3(0,1,0),vec3(t1.z,0,t1.w));vec3 fresnel=(material.specularColor*t2.x+(vec3(1.0)-material.specularColor)*t2.y);reflectedLight.directSpecular+=lightColor*fresnel*LTC_Evaluate(normal,viewDir,position,mInv,rectCoords);reflectedLight.directDiffuse+=lightColor*material.diffuseColor*LTC_Evaluate(normal,viewDir,position,mat3(1.0),rectCoords);}\n#endif\nvoid RE_Direct_Physical(const in IncidentLight directLight,const in GeometricContext geometry,const in PhysicalMaterial material,inout ReflectedLight reflectedLight){float dotNL=saturate(dot(geometry.normal,directLight.direction));vec3 irradiance=dotNL*directLight.color;\n#ifdef USE_CLEARCOAT\nfloat dotNLcc=saturate(dot(geometry.clearcoatNormal,directLight.direction));vec3 ccIrradiance=dotNLcc*directLight.color;clearcoatSpecular+=ccIrradiance*BRDF_GGX(directLight.direction,geometry.viewDir,geometry.clearcoatNormal,material.clearcoatF0,material.clearcoatF90,material.clearcoatRoughness);\n#endif\n#ifdef USE_SHEEN\nreflectedLight.directSpecular+=irradiance*BRDF_Sheen(directLight.direction,geometry.viewDir,geometry.normal,material.sheenColor,material.sheenRoughness);\n#endif\nreflectedLight.directSpecular+=irradiance*BRDF_GGX(directLight.direction,geometry.viewDir,geometry.normal,material.specularColor,material.specularF90,material.roughness);reflectedLight.directDiffuse+=irradiance*BRDF_Lambert(material.diffuseColor);}void RE_IndirectDiffuse_Physical(const in vec3 irradiance,const in GeometricContext geometry,const in PhysicalMaterial material,inout ReflectedLight reflectedLight){reflectedLight.indirectDiffuse+=irradiance*BRDF_Lambert(material.diffuseColor);}void RE_IndirectSpecular_Physical(const in vec3 radiance,const in vec3 irradiance,const in vec3 clearcoatRadiance,const in GeometricContext geometry,const in PhysicalMaterial material,inout ReflectedLight reflectedLight){\n#ifdef USE_CLEARCOAT\nclearcoatSpecular+=clearcoatRadiance*EnvironmentBRDF(geometry.clearcoatNormal,geometry.viewDir,material.clearcoatF0,material.clearcoatF90,material.clearcoatRoughness);\n#endif\nvec3 singleScattering=vec3(0.0);vec3 multiScattering=vec3(0.0);vec3 cosineWeightedIrradiance=irradiance*RECIPROCAL_PI;computeMultiscattering(geometry.normal,geometry.viewDir,material.specularColor,material.specularF90,material.roughness,singleScattering,multiScattering);vec3 diffuse=material.diffuseColor*(1.0-(singleScattering+multiScattering));reflectedLight.indirectSpecular+=radiance*singleScattering;reflectedLight.indirectSpecular+=multiScattering*cosineWeightedIrradiance;reflectedLight.indirectDiffuse+=diffuse*cosineWeightedIrradiance;}\n#define RE_Direct RE_Direct_Physical\n#define RE_Direct_RectArea RE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse RE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular RE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion(const in float dotNV,const in float ambientOcclusion,const in float roughness){return saturate(pow(dotNV+ambientOcclusion,exp2(-16.0*roughness-1.0))-1.0+ambientOcclusion);}",lights_fragment_begin:"GeometricContext geometry;geometry.position=-vViewPosition;geometry.normal=normal;geometry.viewDir=(isOrthographic)?vec3(0,0,1):normalize(vViewPosition);\n#ifdef USE_CLEARCOAT\ngeometry.clearcoatNormal=clearcoatNormal;\n#endif\nIncidentLight directLight;\n#if (NUM_POINT_LIGHTS>0)&&defined(RE_Direct)\nPointLight pointLight;\n#if defined(USE_SHADOWMAP)&&NUM_POINT_LIGHT_SHADOWS>0\nPointLightShadow pointLightShadow;\n#endif\n#pragma unroll_loop_start\nfor(int i=0;i<NUM_POINT_LIGHTS;i++){pointLight=pointLights[i];getPointLightInfo(pointLight,geometry,directLight);\n#if defined(USE_SHADOWMAP)&&(UNROLLED_LOOP_INDEX<NUM_POINT_LIGHT_SHADOWS)\npointLightShadow=pointLightShadows[i];directLight.color*=all(bvec2(directLight.visible,receiveShadow))?getPointShadow(pointShadowMap[i],pointLightShadow.shadowMapSize,pointLightShadow.shadowBias,pointLightShadow.shadowRadius,vPointShadowCoord[i],pointLightShadow.shadowCameraNear,pointLightShadow.shadowCameraFar):1.0;\n#endif\nRE_Direct(directLight,geometry,material,reflectedLight);}\n#pragma unroll_loop_end\n#endif\n#if (NUM_SPOT_LIGHTS>0)&&defined(RE_Direct)\nSpotLight spotLight;\n#if defined(USE_SHADOWMAP)&&NUM_SPOT_LIGHT_SHADOWS>0\nSpotLightShadow spotLightShadow;\n#endif\n#pragma unroll_loop_start\nfor(int i=0;i<NUM_SPOT_LIGHTS;i++){spotLight=spotLights[i];getSpotLightInfo(spotLight,geometry,directLight);\n#if defined(USE_SHADOWMAP)&&(UNROLLED_LOOP_INDEX<NUM_SPOT_LIGHT_SHADOWS)\nspotLightShadow=spotLightShadows[i];directLight.color*=all(bvec2(directLight.visible,receiveShadow))?getShadow(spotShadowMap[i],spotLightShadow.shadowMapSize,spotLightShadow.shadowBias,spotLightShadow.shadowRadius,vSpotShadowCoord[i]):1.0;\n#endif\nRE_Direct(directLight,geometry,material,reflectedLight);}\n#pragma unroll_loop_end\n#endif\n#if (NUM_DIR_LIGHTS>0)&&defined(RE_Direct)\nDirectionalLight directionalLight;\n#if defined(USE_SHADOWMAP)&&NUM_DIR_LIGHT_SHADOWS>0\nDirectionalLightShadow directionalLightShadow;\n#endif\n#pragma unroll_loop_start\nfor(int i=0;i<NUM_DIR_LIGHTS;i++){directionalLight=directionalLights[i];getDirectionalLightInfo(directionalLight,geometry,directLight);\n#if defined(USE_SHADOWMAP)&&(UNROLLED_LOOP_INDEX<NUM_DIR_LIGHT_SHADOWS)\ndirectionalLightShadow=directionalLightShadows[i];directLight.color*=all(bvec2(directLight.visible,receiveShadow))?getShadow(directionalShadowMap[i],directionalLightShadow.shadowMapSize,directionalLightShadow.shadowBias,directionalLightShadow.shadowRadius,vDirectionalShadowCoord[i]):1.0;\n#endif\nRE_Direct(directLight,geometry,material,reflectedLight);}\n#pragma unroll_loop_end\n#endif\n#if (NUM_RECT_AREA_LIGHTS>0)&&defined(RE_Direct_RectArea)\nRectAreaLight rectAreaLight;\n#pragma unroll_loop_start\nfor(int i=0;i<NUM_RECT_AREA_LIGHTS;i++){rectAreaLight=rectAreaLights[i];RE_Direct_RectArea(rectAreaLight,geometry,material,reflectedLight);}\n#pragma unroll_loop_end\n#endif\n#if defined(RE_IndirectDiffuse)\nvec3 iblIrradiance=vec3(0.0);vec3 irradiance=getAmbientLightIrradiance(ambientLightColor);irradiance+=getLightProbeIrradiance(lightProbe,geometry.normal);\n#if (NUM_HEMI_LIGHTS>0)\n#pragma unroll_loop_start\nfor(int i=0;i<NUM_HEMI_LIGHTS;i++){irradiance+=getHemisphereLightIrradiance(hemisphereLights[i],geometry.normal);}\n#pragma unroll_loop_end\n#endif\n#endif\n#if defined(RE_IndirectSpecular)\nvec3 radiance=vec3(0.0);vec3 clearcoatRadiance=vec3(0.0);\n#endif",lights_fragment_maps:"#if defined(RE_IndirectDiffuse)\n#ifdef USE_LIGHTMAP\nvec4 lightMapTexel=texture2D(lightMap,vUv2);vec3 lightMapIrradiance=lightMapTexelToLinear(lightMapTexel).rgb*lightMapIntensity;\n#ifndef PHYSICALLY_CORRECT_LIGHTS\nlightMapIrradiance*=PI;\n#endif\nirradiance+=lightMapIrradiance;\n#endif\n#if defined(USE_ENVMAP)&&defined(STANDARD)&&defined(ENVMAP_TYPE_CUBE_UV)\niblIrradiance+=getIBLIrradiance(geometry.normal);\n#endif\n#endif\n#if defined(USE_ENVMAP)&&defined(RE_IndirectSpecular)\nradiance+=getIBLRadiance(geometry.viewDir,geometry.normal,material.roughness);\n#ifdef USE_CLEARCOAT\nclearcoatRadiance+=getIBLRadiance(geometry.viewDir,geometry.clearcoatNormal,material.clearcoatRoughness);\n#endif\n#endif",lights_fragment_end:"#if defined(RE_IndirectDiffuse)\nRE_IndirectDiffuse(irradiance,geometry,material,reflectedLight);\n#endif\n#if defined(RE_IndirectSpecular)\nRE_IndirectSpecular(radiance,iblIrradiance,clearcoatRadiance,geometry,material,reflectedLight);\n#endif",logdepthbuf_fragment:"#if defined(USE_LOGDEPTHBUF)&&defined(USE_LOGDEPTHBUF_EXT)\ngl_FragDepthEXT=vIsPerspective==0.0?gl_FragCoord.z:log2(vFragDepth)*logDepthBufFC*0.5;\n#endif",logdepthbuf_pars_fragment:"#if defined(USE_LOGDEPTHBUF)&&defined(USE_LOGDEPTHBUF_EXT)\nuniform float logDepthBufFC;varying float vFragDepth;varying float vIsPerspective;\n#endif",logdepthbuf_pars_vertex:"#ifdef USE_LOGDEPTHBUF\n#ifdef USE_LOGDEPTHBUF_EXT\nvarying float vFragDepth;varying float vIsPerspective;\n#else\nuniform float logDepthBufFC;\n#endif\n#endif",logdepthbuf_vertex:"#ifdef USE_LOGDEPTHBUF\n#ifdef USE_LOGDEPTHBUF_EXT\nvFragDepth=1.0+gl_Position.w;vIsPerspective=float(isPerspectiveMatrix(projectionMatrix));\n#else\nif(isPerspectiveMatrix(projectionMatrix)){gl_Position.z=log2(max(EPSILON,gl_Position.w+1.0))*logDepthBufFC-1.0;gl_Position.z*=gl_Position.w;}\n#endif\n#endif",map_fragment:"#ifdef USE_MAP\nvec4 texelColor=texture2D(map,vUv);texelColor=mapTexelToLinear(texelColor);diffuseColor*=texelColor;\n#endif",map_pars_fragment:"#ifdef USE_MAP\nuniform sampler2D map;\n#endif",map_particle_fragment:"#if defined(USE_MAP)||defined(USE_ALPHAMAP)\nvec2 uv=(uvTransform*vec3(gl_PointCoord.x,1.0-gl_PointCoord.y,1)).xy;\n#endif\n#ifdef USE_MAP\nvec4 mapTexel=texture2D(map,uv);diffuseColor*=mapTexelToLinear(mapTexel);\n#endif\n#ifdef USE_ALPHAMAP\ndiffuseColor.a*=texture2D(alphaMap,uv).g;\n#endif",map_particle_pars_fragment:"#if defined(USE_MAP)||defined(USE_ALPHAMAP)\nuniform mat3 uvTransform;\n#endif\n#ifdef USE_MAP\nuniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\nuniform sampler2D alphaMap;\n#endif",metalnessmap_fragment:"float metalnessFactor=metalness;\n#ifdef USE_METALNESSMAP\nvec4 texelMetalness=texture2D(metalnessMap,vUv);metalnessFactor*=texelMetalness.b;\n#endif",metalnessmap_pars_fragment:"#ifdef USE_METALNESSMAP\nuniform sampler2D metalnessMap;\n#endif",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\nobjectNormal*=morphTargetBaseInfluence;\n#ifdef MORPHTARGETS_TEXTURE\nfor(int i=0;i<MORPHTARGETS_COUNT;i++){if(morphTargetInfluences[i]>0.0)objectNormal+=getMorph(gl_VertexID,i,1,2)*morphTargetInfluences[i];}\n#else\nobjectNormal+=morphNormal0*morphTargetInfluences[0];objectNormal+=morphNormal1*morphTargetInfluences[1];objectNormal+=morphNormal2*morphTargetInfluences[2];objectNormal+=morphNormal3*morphTargetInfluences[3];\n#endif\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\nuniform float morphTargetBaseInfluence;\n#ifdef MORPHTARGETS_TEXTURE\nuniform float morphTargetInfluences[MORPHTARGETS_COUNT];uniform sampler2DArray morphTargetsTexture;uniform vec2 morphTargetsTextureSize;vec3 getMorph(const in int vertexIndex,const in int morphTargetIndex,const in int offset,const in int stride){float texelIndex=float(vertexIndex*stride+offset);float y=floor(texelIndex/morphTargetsTextureSize.x);float x=texelIndex-y*morphTargetsTextureSize.x;vec3 morphUV=vec3((x+0.5)/morphTargetsTextureSize.x,y/morphTargetsTextureSize.y,morphTargetIndex);return texture(morphTargetsTexture,morphUV).xyz;}\n#else\n#ifndef USE_MORPHNORMALS\nuniform float morphTargetInfluences[8];\n#else\nuniform float morphTargetInfluences[4];\n#endif\n#endif\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\ntransformed*=morphTargetBaseInfluence;\n#ifdef MORPHTARGETS_TEXTURE\nfor(int i=0;i<MORPHTARGETS_COUNT;i++){\n#ifndef USE_MORPHNORMALS\nif(morphTargetInfluences[i]>0.0)transformed+=getMorph(gl_VertexID,i,0,1)*morphTargetInfluences[i];\n#else\nif(morphTargetInfluences[i]>0.0)transformed+=getMorph(gl_VertexID,i,0,2)*morphTargetInfluences[i];\n#endif\n}\n#else\ntransformed+=morphTarget0*morphTargetInfluences[0];transformed+=morphTarget1*morphTargetInfluences[1];transformed+=morphTarget2*morphTargetInfluences[2];transformed+=morphTarget3*morphTargetInfluences[3];\n#ifndef USE_MORPHNORMALS\ntransformed+=morphTarget4*morphTargetInfluences[4];transformed+=morphTarget5*morphTargetInfluences[5];transformed+=morphTarget6*morphTargetInfluences[6];transformed+=morphTarget7*morphTargetInfluences[7];\n#endif\n#endif\n#endif",normal_fragment_begin:"float faceDirection=gl_FrontFacing?1.0:-1.0;\n#ifdef FLAT_SHADED\nvec3 fdx=vec3(dFdx(vViewPosition.x),dFdx(vViewPosition.y),dFdx(vViewPosition.z));vec3 fdy=vec3(dFdy(vViewPosition.x),dFdy(vViewPosition.y),dFdy(vViewPosition.z));vec3 normal=normalize(cross(fdx,fdy));\n#else\nvec3 normal=normalize(vNormal);\n#ifdef DOUBLE_SIDED\nnormal=normal*faceDirection;\n#endif\n#ifdef USE_TANGENT\nvec3 tangent=normalize(vTangent);vec3 bitangent=normalize(vBitangent);\n#ifdef DOUBLE_SIDED\ntangent=tangent*faceDirection;bitangent=bitangent*faceDirection;\n#endif\n#if defined(TANGENTSPACE_NORMALMAP)||defined(USE_CLEARCOAT_NORMALMAP)\nmat3 vTBN=mat3(tangent,bitangent,normal);\n#endif\n#endif\n#endif\nvec3 geometryNormal=normal;",normal_fragment_maps:"#ifdef OBJECTSPACE_NORMALMAP\nnormal=texture2D(normalMap,vUv).xyz*2.0-1.0;\n#ifdef FLIP_SIDED\nnormal=-normal;\n#endif\n#ifdef DOUBLE_SIDED\nnormal=normal*faceDirection;\n#endif\nnormal=normalize(normalMatrix*normal);\n#elif defined(TANGENTSPACE_NORMALMAP)\nvec3 mapN=texture2D(normalMap,vUv).xyz*2.0-1.0;mapN.xy*=normalScale;\n#ifdef USE_TANGENT\nnormal=normalize(vTBN*mapN);\n#else\nnormal=perturbNormal2Arb(-vViewPosition,normal,mapN,faceDirection);\n#endif\n#elif defined(USE_BUMPMAP)\nnormal=perturbNormalArb(-vViewPosition,normal,dHdxy_fwd(),faceDirection);\n#endif",normal_pars_fragment:"#ifndef FLAT_SHADED\nvarying vec3 vNormal;\n#ifdef USE_TANGENT\nvarying vec3 vTangent;varying vec3 vBitangent;\n#endif\n#endif",normal_pars_vertex:"#ifndef FLAT_SHADED\nvarying vec3 vNormal;\n#ifdef USE_TANGENT\nvarying vec3 vTangent;varying vec3 vBitangent;\n#endif\n#endif",normal_vertex:"#ifndef FLAT_SHADED\nvNormal=normalize(transformedNormal);\n#ifdef USE_TANGENT\nvTangent=normalize(transformedTangent);vBitangent=normalize(cross(vNormal,vTangent)*tangent.w);\n#endif\n#endif",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\nuniform sampler2D normalMap;uniform vec2 normalScale;\n#endif\n#ifdef OBJECTSPACE_NORMALMAP\nuniform mat3 normalMatrix;\n#endif\n#if !defined(USE_TANGENT)&&(defined(TANGENTSPACE_NORMALMAP)||defined(USE_CLEARCOAT_NORMALMAP))\nvec3 perturbNormal2Arb(vec3 eye_pos,vec3 surf_norm,vec3 mapN,float faceDirection){vec3 q0=vec3(dFdx(eye_pos.x),dFdx(eye_pos.y),dFdx(eye_pos.z));vec3 q1=vec3(dFdy(eye_pos.x),dFdy(eye_pos.y),dFdy(eye_pos.z));vec2 st0=dFdx(vUv.st);vec2 st1=dFdy(vUv.st);vec3 N=surf_norm;vec3 q1perp=cross(q1,N);vec3 q0perp=cross(N,q0);vec3 T=q1perp*st0.x+q0perp*st1.x;vec3 B=q1perp*st0.y+q0perp*st1.y;float det=max(dot(T,T),dot(B,B));float scale=(det==0.0)?0.0:faceDirection*inversesqrt(det);return normalize(T*(mapN.x*scale)+B*(mapN.y*scale)+N*mapN.z);}\n#endif",clearcoat_normal_fragment_begin:"#ifdef USE_CLEARCOAT\nvec3 clearcoatNormal=geometryNormal;\n#endif",clearcoat_normal_fragment_maps:"#ifdef USE_CLEARCOAT_NORMALMAP\nvec3 clearcoatMapN=texture2D(clearcoatNormalMap,vUv).xyz*2.0-1.0;clearcoatMapN.xy*=clearcoatNormalScale;\n#ifdef USE_TANGENT\nclearcoatNormal=normalize(vTBN*clearcoatMapN);\n#else\nclearcoatNormal=perturbNormal2Arb(-vViewPosition,clearcoatNormal,clearcoatMapN,faceDirection);\n#endif\n#endif",clearcoat_pars_fragment:"#ifdef USE_CLEARCOATMAP\nuniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\nuniform sampler2D clearcoatRoughnessMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\nuniform sampler2D clearcoatNormalMap;uniform vec2 clearcoatNormalScale;\n#endif",output_fragment:"#ifdef OPAQUE\ndiffuseColor.a=1.0;\n#endif\n#ifdef USE_TRANSMISSION\ndiffuseColor.a*=transmissionAlpha+0.1;\n#endif\ngl_FragColor=vec4(outgoingLight,diffuseColor.a);",packing:"vec3 packNormalToRGB(const in vec3 normal){return normalize(normal)*0.5+0.5;}vec3 unpackRGBToNormal(const in vec3 rgb){return 2.0*rgb.xyz-1.0;}const float PackUpscale=256./255.;const float UnpackDownscale=255./256.;const vec3 PackFactors=vec3(256.*256.*256.,256.*256.,256.);const vec4 UnpackFactors=UnpackDownscale/vec4(PackFactors,1.);const float ShiftRight8=1./256.;vec4 packDepthToRGBA(const in float v){vec4 r=vec4(fract(v*PackFactors),v);r.yzw-=r.xyz*ShiftRight8;return r*PackUpscale;}float unpackRGBAToDepth(const in vec4 v){return dot(v,UnpackFactors);}vec4 pack2HalfToRGBA(vec2 v){vec4 r=vec4(v.x,fract(v.x*255.0),v.y,fract(v.y*255.0));return vec4(r.x-r.y/255.0,r.y,r.z-r.w/255.0,r.w);}vec2 unpackRGBATo2Half(vec4 v){return vec2(v.x+(v.y/255.0),v.z+(v.w/255.0));}float viewZToOrthographicDepth(const in float viewZ,const in float near,const in float far){return(viewZ+near)/(near-far);}float orthographicDepthToViewZ(const in float linearClipZ,const in float near,const in float far){return linearClipZ*(near-far)-near;}float viewZToPerspectiveDepth(const in float viewZ,const in float near,const in float far){return((near+viewZ)*far)/((far-near)*viewZ);}float perspectiveDepthToViewZ(const in float invClipZ,const in float near,const in float far){return(near*far)/((far-near)*invClipZ-far);}",premultiplied_alpha_fragment:"#ifdef PREMULTIPLIED_ALPHA\ngl_FragColor.rgb*=gl_FragColor.a;\n#endif",project_vertex:"vec4 mvPosition=vec4(transformed,1.0);\n#ifdef USE_INSTANCING\nmvPosition=instanceMatrix*mvPosition;\n#endif\nmvPosition=modelViewMatrix*mvPosition;gl_Position=projectionMatrix*mvPosition;",dithering_fragment:"#ifdef DITHERING\ngl_FragColor.rgb=dithering(gl_FragColor.rgb);\n#endif",dithering_pars_fragment:"#ifdef DITHERING\nvec3 dithering(vec3 color){float grid_position=rand(gl_FragCoord.xy);vec3 dither_shift_RGB=vec3(0.25/255.0,-0.25/255.0,0.25/255.0);dither_shift_RGB=mix(2.0*dither_shift_RGB,-2.0*dither_shift_RGB,grid_position);return color+dither_shift_RGB;}\n#endif",roughnessmap_fragment:"float roughnessFactor=roughness;\n#ifdef USE_ROUGHNESSMAP\nvec4 texelRoughness=texture2D(roughnessMap,vUv);roughnessFactor*=texelRoughness.g;\n#endif",roughnessmap_pars_fragment:"#ifdef USE_ROUGHNESSMAP\nuniform sampler2D roughnessMap;\n#endif",shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\n#if NUM_DIR_LIGHT_SHADOWS>0\nuniform sampler2D directionalShadowMap[NUM_DIR_LIGHT_SHADOWS];varying vec4 vDirectionalShadowCoord[NUM_DIR_LIGHT_SHADOWS];struct DirectionalLightShadow{float shadowBias;float shadowNormalBias;float shadowRadius;vec2 shadowMapSize;};uniform DirectionalLightShadow directionalLightShadows[NUM_DIR_LIGHT_SHADOWS];\n#endif\n#if NUM_SPOT_LIGHT_SHADOWS>0\nuniform sampler2D spotShadowMap[NUM_SPOT_LIGHT_SHADOWS];varying vec4 vSpotShadowCoord[NUM_SPOT_LIGHT_SHADOWS];struct SpotLightShadow{float shadowBias;float shadowNormalBias;float shadowRadius;vec2 shadowMapSize;};uniform SpotLightShadow spotLightShadows[NUM_SPOT_LIGHT_SHADOWS];\n#endif\n#if NUM_POINT_LIGHT_SHADOWS>0\nuniform sampler2D pointShadowMap[NUM_POINT_LIGHT_SHADOWS];varying vec4 vPointShadowCoord[NUM_POINT_LIGHT_SHADOWS];struct PointLightShadow{float shadowBias;float shadowNormalBias;float shadowRadius;vec2 shadowMapSize;float shadowCameraNear;float shadowCameraFar;};uniform PointLightShadow pointLightShadows[NUM_POINT_LIGHT_SHADOWS];\n#endif\nfloat texture2DCompare(sampler2D depths,vec2 uv,float compare){return step(compare,unpackRGBAToDepth(texture2D(depths,uv)));}vec2 texture2DDistribution(sampler2D shadow,vec2 uv){return unpackRGBATo2Half(texture2D(shadow,uv));}float VSMShadow(sampler2D shadow,vec2 uv,float compare){float occlusion=1.0;vec2 distribution=texture2DDistribution(shadow,uv);float hard_shadow=step(compare,distribution.x);if(hard_shadow!=1.0){float distance=compare-distribution.x;float variance=max(0.00000,distribution.y*distribution.y);float softness_probability=variance/(variance+distance*distance);softness_probability=clamp((softness_probability-0.3)/(0.95-0.3),0.0,1.0);occlusion=clamp(max(hard_shadow,softness_probability),0.0,1.0);}return occlusion;}float getShadow(sampler2D shadowMap,vec2 shadowMapSize,float shadowBias,float shadowRadius,vec4 shadowCoord){float shadow=1.0;shadowCoord.xyz/=shadowCoord.w;shadowCoord.z+=shadowBias;bvec4 inFrustumVec=bvec4(shadowCoord.x>=0.0,shadowCoord.x<=1.0,shadowCoord.y>=0.0,shadowCoord.y<=1.0);bool inFrustum=all(inFrustumVec);bvec2 frustumTestVec=bvec2(inFrustum,shadowCoord.z<=1.0);bool frustumTest=all(frustumTestVec);if(frustumTest){\n#if defined(SHADOWMAP_TYPE_PCF)\nvec2 texelSize=vec2(1.0)/shadowMapSize;float dx0=-texelSize.x*shadowRadius;float dy0=-texelSize.y*shadowRadius;float dx1=+texelSize.x*shadowRadius;float dy1=+texelSize.y*shadowRadius;float dx2=dx0/2.0;float dy2=dy0/2.0;float dx3=dx1/2.0;float dy3=dy1/2.0;shadow=(texture2DCompare(shadowMap,shadowCoord.xy+vec2(dx0,dy0),shadowCoord.z)+texture2DCompare(shadowMap,shadowCoord.xy+vec2(0.0,dy0),shadowCoord.z)+texture2DCompare(shadowMap,shadowCoord.xy+vec2(dx1,dy0),shadowCoord.z)+texture2DCompare(shadowMap,shadowCoord.xy+vec2(dx2,dy2),shadowCoord.z)+texture2DCompare(shadowMap,shadowCoord.xy+vec2(0.0,dy2),shadowCoord.z)+texture2DCompare(shadowMap,shadowCoord.xy+vec2(dx3,dy2),shadowCoord.z)+texture2DCompare(shadowMap,shadowCoord.xy+vec2(dx0,0.0),shadowCoord.z)+texture2DCompare(shadowMap,shadowCoord.xy+vec2(dx2,0.0),shadowCoord.z)+texture2DCompare(shadowMap,shadowCoord.xy,shadowCoord.z)+texture2DCompare(shadowMap,shadowCoord.xy+vec2(dx3,0.0),shadowCoord.z)+texture2DCompare(shadowMap,shadowCoord.xy+vec2(dx1,0.0),shadowCoord.z)+texture2DCompare(shadowMap,shadowCoord.xy+vec2(dx2,dy3),shadowCoord.z)+texture2DCompare(shadowMap,shadowCoord.xy+vec2(0.0,dy3),shadowCoord.z)+texture2DCompare(shadowMap,shadowCoord.xy+vec2(dx3,dy3),shadowCoord.z)+texture2DCompare(shadowMap,shadowCoord.xy+vec2(dx0,dy1),shadowCoord.z)+texture2DCompare(shadowMap,shadowCoord.xy+vec2(0.0,dy1),shadowCoord.z)+texture2DCompare(shadowMap,shadowCoord.xy+vec2(dx1,dy1),shadowCoord.z))*(1.0/17.0);\n#elif defined(SHADOWMAP_TYPE_PCF_SOFT)\nvec2 texelSize=vec2(1.0)/shadowMapSize;float dx=texelSize.x;float dy=texelSize.y;vec2 uv=shadowCoord.xy;vec2 f=fract(uv*shadowMapSize+0.5);uv-=f*texelSize;shadow=(texture2DCompare(shadowMap,uv,shadowCoord.z)+texture2DCompare(shadowMap,uv+vec2(dx,0.0),shadowCoord.z)+texture2DCompare(shadowMap,uv+vec2(0.0,dy),shadowCoord.z)+texture2DCompare(shadowMap,uv+texelSize,shadowCoord.z)+mix(texture2DCompare(shadowMap,uv+vec2(-dx,0.0),shadowCoord.z),texture2DCompare(shadowMap,uv+vec2(2.0*dx,0.0),shadowCoord.z),f.x)+mix(texture2DCompare(shadowMap,uv+vec2(-dx,dy),shadowCoord.z),texture2DCompare(shadowMap,uv+vec2(2.0*dx,dy),shadowCoord.z),f.x)+mix(texture2DCompare(shadowMap,uv+vec2(0.0,-dy),shadowCoord.z),texture2DCompare(shadowMap,uv+vec2(0.0,2.0*dy),shadowCoord.z),f.y)+mix(texture2DCompare(shadowMap,uv+vec2(dx,-dy),shadowCoord.z),texture2DCompare(shadowMap,uv+vec2(dx,2.0*dy),shadowCoord.z),f.y)+mix(mix(texture2DCompare(shadowMap,uv+vec2(-dx,-dy),shadowCoord.z),texture2DCompare(shadowMap,uv+vec2(2.0*dx,-dy),shadowCoord.z),f.x),mix(texture2DCompare(shadowMap,uv+vec2(-dx,2.0*dy),shadowCoord.z),texture2DCompare(shadowMap,uv+vec2(2.0*dx,2.0*dy),shadowCoord.z),f.x),f.y))*(1.0/9.0);\n#elif defined(SHADOWMAP_TYPE_VSM)\nshadow=VSMShadow(shadowMap,shadowCoord.xy,shadowCoord.z);\n#else\nshadow=texture2DCompare(shadowMap,shadowCoord.xy,shadowCoord.z);\n#endif\n}return shadow;}vec2 cubeToUV(vec3 v,float texelSizeY){vec3 absV=abs(v);float scaleToCube=1.0/max(absV.x,max(absV.y,absV.z));absV*=scaleToCube;v*=scaleToCube*(1.0-2.0*texelSizeY);vec2 planar=v.xy;float almostATexel=1.5*texelSizeY;float almostOne=1.0-almostATexel;if(absV.z>=almostOne){if(v.z>0.0)planar.x=4.0-v.x;}else if(absV.x>=almostOne){float signX=sign(v.x);planar.x=v.z*signX+2.0*signX;}else if(absV.y>=almostOne){float signY=sign(v.y);planar.x=v.x+2.0*signY+2.0;planar.y=v.z*signY-2.0;}return vec2(0.125,0.25)*planar+vec2(0.375,0.75);}float getPointShadow(sampler2D shadowMap,vec2 shadowMapSize,float shadowBias,float shadowRadius,vec4 shadowCoord,float shadowCameraNear,float shadowCameraFar){vec2 texelSize=vec2(1.0)/(shadowMapSize*vec2(4.0,2.0));vec3 lightToPosition=shadowCoord.xyz;float dp=(length(lightToPosition)-shadowCameraNear)/(shadowCameraFar-shadowCameraNear);dp+=shadowBias;vec3 bd3D=normalize(lightToPosition);\n#if defined(SHADOWMAP_TYPE_PCF)||defined(SHADOWMAP_TYPE_PCF_SOFT)||defined(SHADOWMAP_TYPE_VSM)\nvec2 offset=vec2(-1,1)*shadowRadius*texelSize.y;return(texture2DCompare(shadowMap,cubeToUV(bd3D+offset.xyy,texelSize.y),dp)+texture2DCompare(shadowMap,cubeToUV(bd3D+offset.yyy,texelSize.y),dp)+texture2DCompare(shadowMap,cubeToUV(bd3D+offset.xyx,texelSize.y),dp)+texture2DCompare(shadowMap,cubeToUV(bd3D+offset.yyx,texelSize.y),dp)+texture2DCompare(shadowMap,cubeToUV(bd3D,texelSize.y),dp)+texture2DCompare(shadowMap,cubeToUV(bd3D+offset.xxy,texelSize.y),dp)+texture2DCompare(shadowMap,cubeToUV(bd3D+offset.yxy,texelSize.y),dp)+texture2DCompare(shadowMap,cubeToUV(bd3D+offset.xxx,texelSize.y),dp)+texture2DCompare(shadowMap,cubeToUV(bd3D+offset.yxx,texelSize.y),dp))*(1.0/9.0);\n#else\nreturn texture2DCompare(shadowMap,cubeToUV(bd3D,texelSize.y),dp);\n#endif\n}\n#endif",shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\n#if NUM_DIR_LIGHT_SHADOWS>0\nuniform mat4 directionalShadowMatrix[NUM_DIR_LIGHT_SHADOWS];varying vec4 vDirectionalShadowCoord[NUM_DIR_LIGHT_SHADOWS];struct DirectionalLightShadow{float shadowBias;float shadowNormalBias;float shadowRadius;vec2 shadowMapSize;};uniform DirectionalLightShadow directionalLightShadows[NUM_DIR_LIGHT_SHADOWS];\n#endif\n#if NUM_SPOT_LIGHT_SHADOWS>0\nuniform mat4 spotShadowMatrix[NUM_SPOT_LIGHT_SHADOWS];varying vec4 vSpotShadowCoord[NUM_SPOT_LIGHT_SHADOWS];struct SpotLightShadow{float shadowBias;float shadowNormalBias;float shadowRadius;vec2 shadowMapSize;};uniform SpotLightShadow spotLightShadows[NUM_SPOT_LIGHT_SHADOWS];\n#endif\n#if NUM_POINT_LIGHT_SHADOWS>0\nuniform mat4 pointShadowMatrix[NUM_POINT_LIGHT_SHADOWS];varying vec4 vPointShadowCoord[NUM_POINT_LIGHT_SHADOWS];struct PointLightShadow{float shadowBias;float shadowNormalBias;float shadowRadius;vec2 shadowMapSize;float shadowCameraNear;float shadowCameraFar;};uniform PointLightShadow pointLightShadows[NUM_POINT_LIGHT_SHADOWS];\n#endif\n#endif",shadowmap_vertex:"#ifdef USE_SHADOWMAP\n#if NUM_DIR_LIGHT_SHADOWS>0||NUM_SPOT_LIGHT_SHADOWS>0||NUM_POINT_LIGHT_SHADOWS>0\nvec3 shadowWorldNormal=inverseTransformDirection(transformedNormal,viewMatrix);vec4 shadowWorldPosition;\n#endif\n#if NUM_DIR_LIGHT_SHADOWS>0\n#pragma unroll_loop_start\nfor(int i=0;i<NUM_DIR_LIGHT_SHADOWS;i++){shadowWorldPosition=worldPosition+vec4(shadowWorldNormal*directionalLightShadows[i].shadowNormalBias,0);vDirectionalShadowCoord[i]=directionalShadowMatrix[i]*shadowWorldPosition;}\n#pragma unroll_loop_end\n#endif\n#if NUM_SPOT_LIGHT_SHADOWS>0\n#pragma unroll_loop_start\nfor(int i=0;i<NUM_SPOT_LIGHT_SHADOWS;i++){shadowWorldPosition=worldPosition+vec4(shadowWorldNormal*spotLightShadows[i].shadowNormalBias,0);vSpotShadowCoord[i]=spotShadowMatrix[i]*shadowWorldPosition;}\n#pragma unroll_loop_end\n#endif\n#if NUM_POINT_LIGHT_SHADOWS>0\n#pragma unroll_loop_start\nfor(int i=0;i<NUM_POINT_LIGHT_SHADOWS;i++){shadowWorldPosition=worldPosition+vec4(shadowWorldNormal*pointLightShadows[i].shadowNormalBias,0);vPointShadowCoord[i]=pointShadowMatrix[i]*shadowWorldPosition;}\n#pragma unroll_loop_end\n#endif\n#endif",shadowmask_pars_fragment:"float getShadowMask(){float shadow=1.0;\n#ifdef USE_SHADOWMAP\n#if NUM_DIR_LIGHT_SHADOWS>0\nDirectionalLightShadow directionalLight;\n#pragma unroll_loop_start\nfor(int i=0;i<NUM_DIR_LIGHT_SHADOWS;i++){directionalLight=directionalLightShadows[i];shadow*=receiveShadow?getShadow(directionalShadowMap[i],directionalLight.shadowMapSize,directionalLight.shadowBias,directionalLight.shadowRadius,vDirectionalShadowCoord[i]):1.0;}\n#pragma unroll_loop_end\n#endif\n#if NUM_SPOT_LIGHT_SHADOWS>0\nSpotLightShadow spotLight;\n#pragma unroll_loop_start\nfor(int i=0;i<NUM_SPOT_LIGHT_SHADOWS;i++){spotLight=spotLightShadows[i];shadow*=receiveShadow?getShadow(spotShadowMap[i],spotLight.shadowMapSize,spotLight.shadowBias,spotLight.shadowRadius,vSpotShadowCoord[i]):1.0;}\n#pragma unroll_loop_end\n#endif\n#if NUM_POINT_LIGHT_SHADOWS>0\nPointLightShadow pointLight;\n#pragma unroll_loop_start\nfor(int i=0;i<NUM_POINT_LIGHT_SHADOWS;i++){pointLight=pointLightShadows[i];shadow*=receiveShadow?getPointShadow(pointShadowMap[i],pointLight.shadowMapSize,pointLight.shadowBias,pointLight.shadowRadius,vPointShadowCoord[i],pointLight.shadowCameraNear,pointLight.shadowCameraFar):1.0;}\n#pragma unroll_loop_end\n#endif\n#endif\nreturn shadow;}",skinbase_vertex:"#ifdef USE_SKINNING\nmat4 boneMatX=getBoneMatrix(skinIndex.x);mat4 boneMatY=getBoneMatrix(skinIndex.y);mat4 boneMatZ=getBoneMatrix(skinIndex.z);mat4 boneMatW=getBoneMatrix(skinIndex.w);\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\nuniform mat4 bindMatrix;uniform mat4 bindMatrixInverse;\n#ifdef BONE_TEXTURE\nuniform highp sampler2D boneTexture;uniform int boneTextureSize;mat4 getBoneMatrix(const in float i){float j=i*4.0;float x=mod(j,float(boneTextureSize));float y=floor(j/float(boneTextureSize));float dx=1.0/float(boneTextureSize);float dy=1.0/float(boneTextureSize);y=dy*(y+0.5);vec4 v1=texture2D(boneTexture,vec2(dx*(x+0.5),y));vec4 v2=texture2D(boneTexture,vec2(dx*(x+1.5),y));vec4 v3=texture2D(boneTexture,vec2(dx*(x+2.5),y));vec4 v4=texture2D(boneTexture,vec2(dx*(x+3.5),y));mat4 bone=mat4(v1,v2,v3,v4);return bone;}\n#else\nuniform mat4 boneMatrices[MAX_BONES];mat4 getBoneMatrix(const in float i){mat4 bone=boneMatrices[int(i)];return bone;}\n#endif\n#endif",skinning_vertex:"#ifdef USE_SKINNING\nvec4 skinVertex=bindMatrix*vec4(transformed,1.0);vec4 skinned=vec4(0.0);skinned+=boneMatX*skinVertex*skinWeight.x;skinned+=boneMatY*skinVertex*skinWeight.y;skinned+=boneMatZ*skinVertex*skinWeight.z;skinned+=boneMatW*skinVertex*skinWeight.w;transformed=(bindMatrixInverse*skinned).xyz;\n#endif",skinnormal_vertex:"#ifdef USE_SKINNING\nmat4 skinMatrix=mat4(0.0);skinMatrix+=skinWeight.x*boneMatX;skinMatrix+=skinWeight.y*boneMatY;skinMatrix+=skinWeight.z*boneMatZ;skinMatrix+=skinWeight.w*boneMatW;skinMatrix=bindMatrixInverse*skinMatrix*bindMatrix;objectNormal=vec4(skinMatrix*vec4(objectNormal,0.0)).xyz;\n#ifdef USE_TANGENT\nobjectTangent=vec4(skinMatrix*vec4(objectTangent,0.0)).xyz;\n#endif\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\nvec4 texelSpecular=texture2D(specularMap,vUv);specularStrength=texelSpecular.r;\n#else\nspecularStrength=1.0;\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\nuniform sampler2D specularMap;\n#endif",tonemapping_fragment:"#if defined(TONE_MAPPING)\ngl_FragColor.rgb=toneMapping(gl_FragColor.rgb);\n#endif",tonemapping_pars_fragment:"#ifndef saturate\n#define saturate(a)clamp(a,0.0,1.0)\n#endif\nuniform float toneMappingExposure;vec3 LinearToneMapping(vec3 color){return toneMappingExposure*color;}vec3 ReinhardToneMapping(vec3 color){color*=toneMappingExposure;return saturate(color/(vec3(1.0)+color));}vec3 OptimizedCineonToneMapping(vec3 color){color*=toneMappingExposure;color=max(vec3(0.0),color-0.004);return pow((color*(6.2*color+0.5))/(color*(6.2*color+1.7)+0.06),vec3(2.2));}vec3 RRTAndODTFit(vec3 v){vec3 a=v*(v+0.0245786)-0.000090537;vec3 b=v*(0.983729*v+0.4329510)+0.238081;return a/b;}vec3 ACESFilmicToneMapping(vec3 color){const mat3 ACESInputMat=mat3(vec3(0.59719,0.07600,0.02840),vec3(0.35458,0.90834,0.13383),vec3(0.04823,0.01566,0.83777));const mat3 ACESOutputMat=mat3(vec3(1.60475,-0.10208,-0.00327),vec3(-0.53108,1.10813,-0.07276),vec3(-0.07367,-0.00605,1.07602));color*=toneMappingExposure/0.6;color=ACESInputMat*color;color=RRTAndODTFit(color);color=ACESOutputMat*color;return saturate(color);}vec3 CustomToneMapping(vec3 color){return color;}",transmission_fragment:"#ifdef USE_TRANSMISSION\nfloat transmissionAlpha=1.0;float transmissionFactor=transmission;float thicknessFactor=thickness;\n#ifdef USE_TRANSMISSIONMAP\ntransmissionFactor*=texture2D(transmissionMap,vUv).r;\n#endif\n#ifdef USE_THICKNESSMAP\nthicknessFactor*=texture2D(thicknessMap,vUv).g;\n#endif\nvec3 pos=vWorldPosition;vec3 v=normalize(cameraPosition-pos);vec3 n=inverseTransformDirection(normal,viewMatrix);vec4 transmission=getIBLVolumeRefraction(n,v,roughnessFactor,material.diffuseColor,material.specularColor,material.specularF90,pos,modelMatrix,viewMatrix,projectionMatrix,ior,thicknessFactor,attenuationColor,attenuationDistance);totalDiffuse=mix(totalDiffuse,transmission.rgb,transmissionFactor);transmissionAlpha=mix(transmissionAlpha,transmission.a,transmissionFactor);\n#endif",transmission_pars_fragment:"#ifdef USE_TRANSMISSION\nuniform float transmission;uniform float thickness;uniform float attenuationDistance;uniform vec3 attenuationColor;\n#ifdef USE_TRANSMISSIONMAP\nuniform sampler2D transmissionMap;\n#endif\n#ifdef USE_THICKNESSMAP\nuniform sampler2D thicknessMap;\n#endif\nuniform vec2 transmissionSamplerSize;uniform sampler2D transmissionSamplerMap;uniform mat4 modelMatrix;uniform mat4 projectionMatrix;varying vec3 vWorldPosition;vec3 getVolumeTransmissionRay(vec3 n,vec3 v,float thickness,float ior,mat4 modelMatrix){vec3 refractionVector=refract(-v,normalize(n),1.0/ior);vec3 modelScale;modelScale.x=length(vec3(modelMatrix[0].xyz));modelScale.y=length(vec3(modelMatrix[1].xyz));modelScale.z=length(vec3(modelMatrix[2].xyz));return normalize(refractionVector)*thickness*modelScale;}float applyIorToRoughness(float roughness,float ior){return roughness*clamp(ior*2.0-2.0,0.0,1.0);}vec4 getTransmissionSample(vec2 fragCoord,float roughness,float ior){float framebufferLod=log2(transmissionSamplerSize.x)*applyIorToRoughness(roughness,ior);\n#ifdef TEXTURE_LOD_EXT\nreturn texture2DLodEXT(transmissionSamplerMap,fragCoord.xy,framebufferLod);\n#else\nreturn texture2D(transmissionSamplerMap,fragCoord.xy,framebufferLod);\n#endif\n}vec3 applyVolumeAttenuation(vec3 radiance,float transmissionDistance,vec3 attenuationColor,float attenuationDistance){if(attenuationDistance==0.0){return radiance;}else{vec3 attenuationCoefficient=-log(attenuationColor)/attenuationDistance;vec3 transmittance=exp(-attenuationCoefficient*transmissionDistance);return transmittance*radiance;}}vec4 getIBLVolumeRefraction(vec3 n,vec3 v,float roughness,vec3 diffuseColor,vec3 specularColor,float specularF90,vec3 position,mat4 modelMatrix,mat4 viewMatrix,mat4 projMatrix,float ior,float thickness,vec3 attenuationColor,float attenuationDistance){vec3 transmissionRay=getVolumeTransmissionRay(n,v,thickness,ior,modelMatrix);vec3 refractedRayExit=position+transmissionRay;vec4 ndcPos=projMatrix*viewMatrix*vec4(refractedRayExit,1.0);vec2 refractionCoords=ndcPos.xy/ndcPos.w;refractionCoords+=1.0;refractionCoords/=2.0;vec4 transmittedLight=getTransmissionSample(refractionCoords,roughness,ior);vec3 attenuatedColor=applyVolumeAttenuation(transmittedLight.rgb,length(transmissionRay),attenuationColor,attenuationDistance);vec3 F=EnvironmentBRDF(n,v,specularColor,specularF90,roughness);return vec4((1.0-F)*attenuatedColor*diffuseColor,transmittedLight.a);}\n#endif",uv_pars_fragment:"#if (defined(USE_UV)&&!defined(UVS_VERTEX_ONLY))\nvarying vec2 vUv;\n#endif",uv_pars_vertex:"#ifdef USE_UV\n#ifdef UVS_VERTEX_ONLY\nvec2 vUv;\n#else\nvarying vec2 vUv;\n#endif\nuniform mat3 uvTransform;\n#endif",uv_vertex:"#ifdef USE_UV\nvUv=(uvTransform*vec3(uv,1)).xy;\n#endif",uv2_pars_fragment:"#if defined(USE_LIGHTMAP)||defined(USE_AOMAP)\nvarying vec2 vUv2;\n#endif",uv2_pars_vertex:"#if defined(USE_LIGHTMAP)||defined(USE_AOMAP)\nattribute vec2 uv2;varying vec2 vUv2;uniform mat3 uv2Transform;\n#endif",uv2_vertex:"#if defined(USE_LIGHTMAP)||defined(USE_AOMAP)\nvUv2=(uv2Transform*vec3(uv2,1)).xy;\n#endif",worldpos_vertex:"#if defined(USE_ENVMAP)||defined(DISTANCE)||defined(USE_SHADOWMAP)||defined(USE_TRANSMISSION)\nvec4 worldPosition=vec4(transformed,1.0);\n#ifdef USE_INSTANCING\nworldPosition=instanceMatrix*worldPosition;\n#endif\nworldPosition=modelMatrix*worldPosition;\n#endif",background_vert:"varying vec2 vUv;uniform mat3 uvTransform;void main(){vUv=(uvTransform*vec3(uv,1)).xy;gl_Position=vec4(position.xy,1.0,1.0);}",background_frag:"uniform sampler2D t2D;varying vec2 vUv;void main(){vec4 texColor=texture2D(t2D,vUv);gl_FragColor=mapTexelToLinear(texColor);\n#include <tonemapping_fragment>\n#include <encodings_fragment>\n}",cube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main(){vWorldDirection=transformDirection(position,modelMatrix);\n#include <begin_vertex>\n#include <project_vertex>\ngl_Position.z=gl_Position.w;}",cube_frag:"#include <envmap_common_pars_fragment>\nuniform float opacity;varying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main(){vec3 vReflect=vWorldDirection;\n#include <envmap_fragment>\ngl_FragColor=envColor;gl_FragColor.a*=opacity;\n#include <tonemapping_fragment>\n#include <encodings_fragment>\n}",depth_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;void main(){\n#include <uv_vertex>\n#include <skinbase_vertex>\n#ifdef USE_DISPLACEMENTMAP\n#include <beginnormal_vertex>\n#include <morphnormal_vertex>\n#include <skinnormal_vertex>\n#endif\n#include <begin_vertex>\n#include <morphtarget_vertex>\n#include <skinning_vertex>\n#include <displacementmap_vertex>\n#include <project_vertex>\n#include <logdepthbuf_vertex>\n#include <clipping_planes_vertex>\nvHighPrecisionZW=gl_Position.zw;}",depth_frag:"#if DEPTH_PACKING==3200\nuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;void main(){\n#include <clipping_planes_fragment>\nvec4 diffuseColor=vec4(1.0);\n#if DEPTH_PACKING==3200\ndiffuseColor.a=opacity;\n#endif\n#include <map_fragment>\n#include <alphamap_fragment>\n#include <alphatest_fragment>\n#include <logdepthbuf_fragment>\nfloat fragCoordZ=0.5*vHighPrecisionZW[0]/vHighPrecisionZW[1]+0.5;\n#if DEPTH_PACKING==3200\ngl_FragColor=vec4(vec3(1.0-fragCoordZ),opacity);\n#elif DEPTH_PACKING==3201\ngl_FragColor=packDepthToRGBA(fragCoordZ);\n#endif\n}",distanceRGBA_vert:"#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main(){\n#include <uv_vertex>\n#include <skinbase_vertex>\n#ifdef USE_DISPLACEMENTMAP\n#include <beginnormal_vertex>\n#include <morphnormal_vertex>\n#include <skinnormal_vertex>\n#endif\n#include <begin_vertex>\n#include <morphtarget_vertex>\n#include <skinning_vertex>\n#include <displacementmap_vertex>\n#include <project_vertex>\n#include <worldpos_vertex>\n#include <clipping_planes_vertex>\nvWorldPosition=worldPosition.xyz;}",distanceRGBA_frag:"#define DISTANCE\nuniform vec3 referencePosition;uniform float nearDistance;uniform float farDistance;varying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main(){\n#include <clipping_planes_fragment>\nvec4 diffuseColor=vec4(1.0);\n#include <map_fragment>\n#include <alphamap_fragment>\n#include <alphatest_fragment>\nfloat dist=length(vWorldPosition-referencePosition);dist=(dist-nearDistance)/(farDistance-nearDistance);dist=saturate(dist);gl_FragColor=packDepthToRGBA(dist);}",equirect_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main(){vWorldDirection=transformDirection(position,modelMatrix);\n#include <begin_vertex>\n#include <project_vertex>\n}",equirect_frag:"uniform sampler2D tEquirect;varying vec3 vWorldDirection;\n#include <common>\nvoid main(){vec3 direction=normalize(vWorldDirection);vec2 sampleUV=equirectUv(direction);vec4 texColor=texture2D(tEquirect,sampleUV);gl_FragColor=mapTexelToLinear(texColor);\n#include <tonemapping_fragment>\n#include <encodings_fragment>\n}",linedashed_vert:"uniform float scale;attribute float lineDistance;varying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main(){vLineDistance=scale*lineDistance;\n#include <color_vertex>\n#include <begin_vertex>\n#include <morphtarget_vertex>\n#include <project_vertex>\n#include <logdepthbuf_vertex>\n#include <clipping_planes_vertex>\n#include <fog_vertex>\n}",linedashed_frag:"uniform vec3 diffuse;uniform float opacity;uniform float dashSize;uniform float totalSize;varying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main(){\n#include <clipping_planes_fragment>\nif(mod(vLineDistance,totalSize)>dashSize){discard;}vec3 outgoingLight=vec3(0.0);vec4 diffuseColor=vec4(diffuse,opacity);\n#include <logdepthbuf_fragment>\n#include <color_fragment>\noutgoingLight=diffuseColor.rgb;\n#include <output_fragment>\n#include <tonemapping_fragment>\n#include <encodings_fragment>\n#include <fog_fragment>\n#include <premultiplied_alpha_fragment>\n}",meshbasic_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main(){\n#include <uv_vertex>\n#include <uv2_vertex>\n#include <color_vertex>\n#if defined(USE_ENVMAP)||defined(USE_SKINNING)\n#include <beginnormal_vertex>\n#include <morphnormal_vertex>\n#include <skinbase_vertex>\n#include <skinnormal_vertex>\n#include <defaultnormal_vertex>\n#endif\n#include <begin_vertex>\n#include <morphtarget_vertex>\n#include <skinning_vertex>\n#include <project_vertex>\n#include <logdepthbuf_vertex>\n#include <clipping_planes_vertex>\n#include <worldpos_vertex>\n#include <envmap_vertex>\n#include <fog_vertex>\n}",meshbasic_frag:"uniform vec3 diffuse;uniform float opacity;\n#ifndef FLAT_SHADED\nvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main(){\n#include <clipping_planes_fragment>\nvec4 diffuseColor=vec4(diffuse,opacity);\n#include <logdepthbuf_fragment>\n#include <map_fragment>\n#include <color_fragment>\n#include <alphamap_fragment>\n#include <alphatest_fragment>\n#include <specularmap_fragment>\nReflectedLight reflectedLight=ReflectedLight(vec3(0.0),vec3(0.0),vec3(0.0),vec3(0.0));\n#ifdef USE_LIGHTMAP\nvec4 lightMapTexel=texture2D(lightMap,vUv2);reflectedLight.indirectDiffuse+=lightMapTexelToLinear(lightMapTexel).rgb*lightMapIntensity;\n#else\nreflectedLight.indirectDiffuse+=vec3(1.0);\n#endif\n#include <aomap_fragment>\nreflectedLight.indirectDiffuse*=diffuseColor.rgb;vec3 outgoingLight=reflectedLight.indirectDiffuse;\n#include <envmap_fragment>\n#include <output_fragment>\n#include <tonemapping_fragment>\n#include <encodings_fragment>\n#include <fog_fragment>\n#include <premultiplied_alpha_fragment>\n#include <dithering_fragment>\n}",meshlambert_vert:"#define LAMBERT\nvarying vec3 vLightFront;varying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\nvarying vec3 vLightBack;varying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main(){\n#include <uv_vertex>\n#include <uv2_vertex>\n#include <color_vertex>\n#include <beginnormal_vertex>\n#include <morphnormal_vertex>\n#include <skinbase_vertex>\n#include <skinnormal_vertex>\n#include <defaultnormal_vertex>\n#include <begin_vertex>\n#include <morphtarget_vertex>\n#include <skinning_vertex>\n#include <project_vertex>\n#include <logdepthbuf_vertex>\n#include <clipping_planes_vertex>\n#include <worldpos_vertex>\n#include <envmap_vertex>\n#include <lights_lambert_vertex>\n#include <shadowmap_vertex>\n#include <fog_vertex>\n}",meshlambert_frag:"uniform vec3 diffuse;uniform vec3 emissive;uniform float opacity;varying vec3 vLightFront;varying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\nvarying vec3 vLightBack;varying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main(){\n#include <clipping_planes_fragment>\nvec4 diffuseColor=vec4(diffuse,opacity);ReflectedLight reflectedLight=ReflectedLight(vec3(0.0),vec3(0.0),vec3(0.0),vec3(0.0));vec3 totalEmissiveRadiance=emissive;\n#include <logdepthbuf_fragment>\n#include <map_fragment>\n#include <color_fragment>\n#include <alphamap_fragment>\n#include <alphatest_fragment>\n#include <specularmap_fragment>\n#include <emissivemap_fragment>\n#ifdef DOUBLE_SIDED\nreflectedLight.indirectDiffuse+=(gl_FrontFacing)?vIndirectFront:vIndirectBack;\n#else\nreflectedLight.indirectDiffuse+=vIndirectFront;\n#endif\n#include <lightmap_fragment>\nreflectedLight.indirectDiffuse*=BRDF_Lambert(diffuseColor.rgb);\n#ifdef DOUBLE_SIDED\nreflectedLight.directDiffuse=(gl_FrontFacing)?vLightFront:vLightBack;\n#else\nreflectedLight.directDiffuse=vLightFront;\n#endif\nreflectedLight.directDiffuse*=BRDF_Lambert(diffuseColor.rgb)*getShadowMask();\n#include <aomap_fragment>\nvec3 outgoingLight=reflectedLight.directDiffuse+reflectedLight.indirectDiffuse+totalEmissiveRadiance;\n#include <envmap_fragment>\n#include <output_fragment>\n#include <tonemapping_fragment>\n#include <encodings_fragment>\n#include <fog_fragment>\n#include <premultiplied_alpha_fragment>\n#include <dithering_fragment>\n}",meshmatcap_vert:"#define MATCAP\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main(){\n#include <uv_vertex>\n#include <color_vertex>\n#include <beginnormal_vertex>\n#include <morphnormal_vertex>\n#include <skinbase_vertex>\n#include <skinnormal_vertex>\n#include <defaultnormal_vertex>\n#include <normal_vertex>\n#include <begin_vertex>\n#include <morphtarget_vertex>\n#include <skinning_vertex>\n#include <displacementmap_vertex>\n#include <project_vertex>\n#include <logdepthbuf_vertex>\n#include <clipping_planes_vertex>\n#include <fog_vertex>\nvViewPosition=-mvPosition.xyz;}",meshmatcap_frag:"#define MATCAP\nuniform vec3 diffuse;uniform float opacity;uniform sampler2D matcap;varying vec3 vViewPosition;\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main(){\n#include <clipping_planes_fragment>\nvec4 diffuseColor=vec4(diffuse,opacity);\n#include <logdepthbuf_fragment>\n#include <map_fragment>\n#include <color_fragment>\n#include <alphamap_fragment>\n#include <alphatest_fragment>\n#include <normal_fragment_begin>\n#include <normal_fragment_maps>\nvec3 viewDir=normalize(vViewPosition);vec3 x=normalize(vec3(viewDir.z,0.0,-viewDir.x));vec3 y=cross(viewDir,x);vec2 uv=vec2(dot(x,normal),dot(y,normal))*0.495+0.5;\n#ifdef USE_MATCAP\nvec4 matcapColor=texture2D(matcap,uv);matcapColor=matcapTexelToLinear(matcapColor);\n#else\nvec4 matcapColor=vec4(1.0);\n#endif\nvec3 outgoingLight=diffuseColor.rgb*matcapColor.rgb;\n#include <output_fragment>\n#include <tonemapping_fragment>\n#include <encodings_fragment>\n#include <fog_fragment>\n#include <premultiplied_alpha_fragment>\n#include <dithering_fragment>\n}",meshnormal_vert:"#define NORMAL\n#if defined(FLAT_SHADED)||defined(USE_BUMPMAP)||defined(TANGENTSPACE_NORMALMAP)\nvarying vec3 vViewPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main(){\n#include <uv_vertex>\n#include <beginnormal_vertex>\n#include <morphnormal_vertex>\n#include <skinbase_vertex>\n#include <skinnormal_vertex>\n#include <defaultnormal_vertex>\n#include <normal_vertex>\n#include <begin_vertex>\n#include <morphtarget_vertex>\n#include <skinning_vertex>\n#include <displacementmap_vertex>\n#include <project_vertex>\n#include <logdepthbuf_vertex>\n#include <clipping_planes_vertex>\n#if defined(FLAT_SHADED)||defined(USE_BUMPMAP)||defined(TANGENTSPACE_NORMALMAP)\nvViewPosition=-mvPosition.xyz;\n#endif\n}",meshnormal_frag:"#define NORMAL\nuniform float opacity;\n#if defined(FLAT_SHADED)||defined(USE_BUMPMAP)||defined(TANGENTSPACE_NORMALMAP)\nvarying vec3 vViewPosition;\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main(){\n#include <clipping_planes_fragment>\n#include <logdepthbuf_fragment>\n#include <normal_fragment_begin>\n#include <normal_fragment_maps>\ngl_FragColor=vec4(packNormalToRGB(normal),opacity);}",meshphong_vert:"#define PHONG\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main(){\n#include <uv_vertex>\n#include <uv2_vertex>\n#include <color_vertex>\n#include <beginnormal_vertex>\n#include <morphnormal_vertex>\n#include <skinbase_vertex>\n#include <skinnormal_vertex>\n#include <defaultnormal_vertex>\n#include <normal_vertex>\n#include <begin_vertex>\n#include <morphtarget_vertex>\n#include <skinning_vertex>\n#include <displacementmap_vertex>\n#include <project_vertex>\n#include <logdepthbuf_vertex>\n#include <clipping_planes_vertex>\nvViewPosition=-mvPosition.xyz;\n#include <worldpos_vertex>\n#include <envmap_vertex>\n#include <shadowmap_vertex>\n#include <fog_vertex>\n}",meshphong_frag:"#define PHONG\nuniform vec3 diffuse;uniform vec3 emissive;uniform vec3 specular;uniform float shininess;uniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main(){\n#include <clipping_planes_fragment>\nvec4 diffuseColor=vec4(diffuse,opacity);ReflectedLight reflectedLight=ReflectedLight(vec3(0.0),vec3(0.0),vec3(0.0),vec3(0.0));vec3 totalEmissiveRadiance=emissive;\n#include <logdepthbuf_fragment>\n#include <map_fragment>\n#include <color_fragment>\n#include <alphamap_fragment>\n#include <alphatest_fragment>\n#include <specularmap_fragment>\n#include <normal_fragment_begin>\n#include <normal_fragment_maps>\n#include <emissivemap_fragment>\n#include <lights_phong_fragment>\n#include <lights_fragment_begin>\n#include <lights_fragment_maps>\n#include <lights_fragment_end>\n#include <aomap_fragment>\nvec3 outgoingLight=reflectedLight.directDiffuse+reflectedLight.indirectDiffuse+reflectedLight.directSpecular+reflectedLight.indirectSpecular+totalEmissiveRadiance;\n#include <envmap_fragment>\n#include <output_fragment>\n#include <tonemapping_fragment>\n#include <encodings_fragment>\n#include <fog_fragment>\n#include <premultiplied_alpha_fragment>\n#include <dithering_fragment>\n}",meshphysical_vert:"#define STANDARD\nvarying vec3 vViewPosition;\n#ifdef USE_TRANSMISSION\nvarying vec3 vWorldPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main(){\n#include <uv_vertex>\n#include <uv2_vertex>\n#include <color_vertex>\n#include <beginnormal_vertex>\n#include <morphnormal_vertex>\n#include <skinbase_vertex>\n#include <skinnormal_vertex>\n#include <defaultnormal_vertex>\n#include <normal_vertex>\n#include <begin_vertex>\n#include <morphtarget_vertex>\n#include <skinning_vertex>\n#include <displacementmap_vertex>\n#include <project_vertex>\n#include <logdepthbuf_vertex>\n#include <clipping_planes_vertex>\nvViewPosition=-mvPosition.xyz;\n#include <worldpos_vertex>\n#include <shadowmap_vertex>\n#include <fog_vertex>\n#ifdef USE_TRANSMISSION\nvWorldPosition=worldPosition.xyz;\n#endif\n}",meshphysical_frag:"#define STANDARD\n#ifdef PHYSICAL\n#define IOR\n#define SPECULAR\n#endif\nuniform vec3 diffuse;uniform vec3 emissive;uniform float roughness;uniform float metalness;uniform float opacity;\n#ifdef IOR\nuniform float ior;\n#endif\n#ifdef SPECULAR\nuniform float specularIntensity;uniform vec3 specularColor;\n#ifdef USE_SPECULARINTENSITYMAP\nuniform sampler2D specularIntensityMap;\n#endif\n#ifdef USE_SPECULARCOLORMAP\nuniform sampler2D specularColorMap;\n#endif\n#endif\n#ifdef USE_CLEARCOAT\nuniform float clearcoat;uniform float clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\nuniform vec3 sheenColor;uniform float sheenRoughness;\n#ifdef USE_SHEENCOLORMAP\nuniform sampler2D sheenColorMap;\n#endif\n#ifdef USE_SHEENROUGHNESSMAP\nuniform sampler2D sheenRoughnessMap;\n#endif\n#endif\nvarying vec3 vViewPosition;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_physical_pars_fragment>\n#include <transmission_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main(){\n#include <clipping_planes_fragment>\nvec4 diffuseColor=vec4(diffuse,opacity);ReflectedLight reflectedLight=ReflectedLight(vec3(0.0),vec3(0.0),vec3(0.0),vec3(0.0));vec3 totalEmissiveRadiance=emissive;\n#include <logdepthbuf_fragment>\n#include <map_fragment>\n#include <color_fragment>\n#include <alphamap_fragment>\n#include <alphatest_fragment>\n#include <roughnessmap_fragment>\n#include <metalnessmap_fragment>\n#include <normal_fragment_begin>\n#include <normal_fragment_maps>\n#include <clearcoat_normal_fragment_begin>\n#include <clearcoat_normal_fragment_maps>\n#include <emissivemap_fragment>\n#include <lights_physical_fragment>\n#include <lights_fragment_begin>\n#include <lights_fragment_maps>\n#include <lights_fragment_end>\n#include <aomap_fragment>\nvec3 totalDiffuse=reflectedLight.directDiffuse+reflectedLight.indirectDiffuse;vec3 totalSpecular=reflectedLight.directSpecular+reflectedLight.indirectSpecular;\n#include <transmission_fragment>\nvec3 outgoingLight=totalDiffuse+totalSpecular+totalEmissiveRadiance;\n#ifdef USE_CLEARCOAT\nfloat dotNVcc=saturate(dot(geometry.clearcoatNormal,geometry.viewDir));vec3 Fcc=F_Schlick(material.clearcoatF0,material.clearcoatF90,dotNVcc);outgoingLight=outgoingLight*(1.0-clearcoat*Fcc)+clearcoatSpecular*clearcoat;\n#endif\n#include <output_fragment>\n#include <tonemapping_fragment>\n#include <encodings_fragment>\n#include <fog_fragment>\n#include <premultiplied_alpha_fragment>\n#include <dithering_fragment>\n}",meshtoon_vert:"#define TOON\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main(){\n#include <uv_vertex>\n#include <uv2_vertex>\n#include <color_vertex>\n#include <beginnormal_vertex>\n#include <morphnormal_vertex>\n#include <skinbase_vertex>\n#include <skinnormal_vertex>\n#include <defaultnormal_vertex>\n#include <normal_vertex>\n#include <begin_vertex>\n#include <morphtarget_vertex>\n#include <skinning_vertex>\n#include <displacementmap_vertex>\n#include <project_vertex>\n#include <logdepthbuf_vertex>\n#include <clipping_planes_vertex>\nvViewPosition=-mvPosition.xyz;\n#include <worldpos_vertex>\n#include <shadowmap_vertex>\n#include <fog_vertex>\n}",meshtoon_frag:"#define TOON\nuniform vec3 diffuse;uniform vec3 emissive;uniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main(){\n#include <clipping_planes_fragment>\nvec4 diffuseColor=vec4(diffuse,opacity);ReflectedLight reflectedLight=ReflectedLight(vec3(0.0),vec3(0.0),vec3(0.0),vec3(0.0));vec3 totalEmissiveRadiance=emissive;\n#include <logdepthbuf_fragment>\n#include <map_fragment>\n#include <color_fragment>\n#include <alphamap_fragment>\n#include <alphatest_fragment>\n#include <normal_fragment_begin>\n#include <normal_fragment_maps>\n#include <emissivemap_fragment>\n#include <lights_toon_fragment>\n#include <lights_fragment_begin>\n#include <lights_fragment_maps>\n#include <lights_fragment_end>\n#include <aomap_fragment>\nvec3 outgoingLight=reflectedLight.directDiffuse+reflectedLight.indirectDiffuse+totalEmissiveRadiance;\n#include <output_fragment>\n#include <tonemapping_fragment>\n#include <encodings_fragment>\n#include <fog_fragment>\n#include <premultiplied_alpha_fragment>\n#include <dithering_fragment>\n}",points_vert:"uniform float size;uniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main(){\n#include <color_vertex>\n#include <begin_vertex>\n#include <morphtarget_vertex>\n#include <project_vertex>\ngl_PointSize=size;\n#ifdef USE_SIZEATTENUATION\nbool isPerspective=isPerspectiveMatrix(projectionMatrix);if(isPerspective)gl_PointSize*=(scale/-mvPosition.z);\n#endif\n#include <logdepthbuf_vertex>\n#include <clipping_planes_vertex>\n#include <worldpos_vertex>\n#include <fog_vertex>\n}",points_frag:"uniform vec3 diffuse;uniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main(){\n#include <clipping_planes_fragment>\nvec3 outgoingLight=vec3(0.0);vec4 diffuseColor=vec4(diffuse,opacity);\n#include <logdepthbuf_fragment>\n#include <map_particle_fragment>\n#include <color_fragment>\n#include <alphatest_fragment>\noutgoingLight=diffuseColor.rgb;\n#include <output_fragment>\n#include <tonemapping_fragment>\n#include <encodings_fragment>\n#include <fog_fragment>\n#include <premultiplied_alpha_fragment>\n}",shadow_vert:"#include <common>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main(){\n#include <beginnormal_vertex>\n#include <morphnormal_vertex>\n#include <skinbase_vertex>\n#include <skinnormal_vertex>\n#include <defaultnormal_vertex>\n#include <begin_vertex>\n#include <morphtarget_vertex>\n#include <skinning_vertex>\n#include <project_vertex>\n#include <worldpos_vertex>\n#include <shadowmap_vertex>\n#include <fog_vertex>\n}",shadow_frag:"uniform vec3 color;uniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main(){gl_FragColor=vec4(color,opacity*(1.0-getShadowMask()));\n#include <tonemapping_fragment>\n#include <encodings_fragment>\n#include <fog_fragment>\n}",sprite_vert:"uniform float rotation;uniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main(){\n#include <uv_vertex>\nvec4 mvPosition=modelViewMatrix*vec4(0.0,0.0,0.0,1.0);vec2 scale;scale.x=length(vec3(modelMatrix[0].x,modelMatrix[0].y,modelMatrix[0].z));scale.y=length(vec3(modelMatrix[1].x,modelMatrix[1].y,modelMatrix[1].z));\n#ifndef USE_SIZEATTENUATION\nbool isPerspective=isPerspectiveMatrix(projectionMatrix);if(isPerspective)scale*=-mvPosition.z;\n#endif\nvec2 alignedPosition=(position.xy-(center-vec2(0.5)))*scale;vec2 rotatedPosition;rotatedPosition.x=cos(rotation)*alignedPosition.x-sin(rotation)*alignedPosition.y;rotatedPosition.y=sin(rotation)*alignedPosition.x+cos(rotation)*alignedPosition.y;mvPosition.xy+=rotatedPosition;gl_Position=projectionMatrix*mvPosition;\n#include <logdepthbuf_vertex>\n#include <clipping_planes_vertex>\n#include <fog_vertex>\n}",sprite_frag:"uniform vec3 diffuse;uniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main(){\n#include <clipping_planes_fragment>\nvec3 outgoingLight=vec3(0.0);vec4 diffuseColor=vec4(diffuse,opacity);\n#include <logdepthbuf_fragment>\n#include <map_fragment>\n#include <alphamap_fragment>\n#include <alphatest_fragment>\noutgoingLight=diffuseColor.rgb;\n#include <output_fragment>\n#include <tonemapping_fragment>\n#include <encodings_fragment>\n#include <fog_fragment>\n}"}},94898:(e,t,i)=>{i.d(t,{Z:()=>n});const n="void main(){gl_FragColor=vec4(1.0,0.0,0.0,1.0);}"},35434:(e,t,i)=>{i.d(t,{Z:()=>n});const n="void main(){gl_Position=projectionMatrix*modelViewMatrix*vec4(position,1.0);}"},62310:(e,t,i)=>{i.d(t,{V:()=>h});var n=i(98947),r=i(22535),o=i(53754),a=i(28388),s=i(56519),l=i(89725),c=i(15037);const h={basic:{uniforms:(0,r.Rh)([s.r.common,s.r.specularmap,s.r.envmap,s.r.aomap,s.r.lightmap,s.r.fog]),vertexShader:n.W.meshbasic_vert,fragmentShader:n.W.meshbasic_frag},lambert:{uniforms:(0,r.Rh)([s.r.common,s.r.specularmap,s.r.envmap,s.r.aomap,s.r.lightmap,s.r.emissivemap,s.r.fog,s.r.lights,{emissive:{value:new l.I(0)}}]),vertexShader:n.W.meshlambert_vert,fragmentShader:n.W.meshlambert_frag},phong:{uniforms:(0,r.Rh)([s.r.common,s.r.specularmap,s.r.envmap,s.r.aomap,s.r.lightmap,s.r.emissivemap,s.r.bumpmap,s.r.normalmap,s.r.displacementmap,s.r.fog,s.r.lights,{emissive:{value:new l.I(0)},specular:{value:new l.I(1118481)},shininess:{value:30}}]),vertexShader:n.W.meshphong_vert,fragmentShader:n.W.meshphong_frag},standard:{uniforms:(0,r.Rh)([s.r.common,s.r.envmap,s.r.aomap,s.r.lightmap,s.r.emissivemap,s.r.bumpmap,s.r.normalmap,s.r.displacementmap,s.r.roughnessmap,s.r.metalnessmap,s.r.fog,s.r.lights,{emissive:{value:new l.I(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:n.W.meshphysical_vert,fragmentShader:n.W.meshphysical_frag},toon:{uniforms:(0,r.Rh)([s.r.common,s.r.aomap,s.r.lightmap,s.r.emissivemap,s.r.bumpmap,s.r.normalmap,s.r.displacementmap,s.r.gradientmap,s.r.fog,s.r.lights,{emissive:{value:new l.I(0)}}]),vertexShader:n.W.meshtoon_vert,fragmentShader:n.W.meshtoon_frag},matcap:{uniforms:(0,r.Rh)([s.r.common,s.r.bumpmap,s.r.normalmap,s.r.displacementmap,s.r.fog,{matcap:{value:null}}]),vertexShader:n.W.meshmatcap_vert,fragmentShader:n.W.meshmatcap_frag},points:{uniforms:(0,r.Rh)([s.r.points,s.r.fog]),vertexShader:n.W.points_vert,fragmentShader:n.W.points_frag},dashed:{uniforms:(0,r.Rh)([s.r.common,s.r.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:n.W.linedashed_vert,fragmentShader:n.W.linedashed_frag},depth:{uniforms:(0,r.Rh)([s.r.common,s.r.displacementmap]),vertexShader:n.W.depth_vert,fragmentShader:n.W.depth_frag},normal:{uniforms:(0,r.Rh)([s.r.common,s.r.bumpmap,s.r.normalmap,s.r.displacementmap,{opacity:{value:1}}]),vertexShader:n.W.meshnormal_vert,fragmentShader:n.W.meshnormal_frag},sprite:{uniforms:(0,r.Rh)([s.r.sprite,s.r.fog]),vertexShader:n.W.sprite_vert,fragmentShader:n.W.sprite_frag},background:{uniforms:{uvTransform:{value:new c.V},t2D:{value:null}},vertexShader:n.W.background_vert,fragmentShader:n.W.background_frag},cube:{uniforms:(0,r.Rh)([s.r.envmap,{opacity:{value:1}}]),vertexShader:n.W.cube_vert,fragmentShader:n.W.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:n.W.equirect_vert,fragmentShader:n.W.equirect_frag},distanceRGBA:{uniforms:(0,r.Rh)([s.r.common,s.r.displacementmap,{referencePosition:{value:new a.P},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:n.W.distanceRGBA_vert,fragmentShader:n.W.distanceRGBA_frag},shadow:{uniforms:(0,r.Rh)([s.r.lights,s.r.fog,{color:{value:new l.I(0)},opacity:{value:1}}]),vertexShader:n.W.shadow_vert,fragmentShader:n.W.shadow_frag}};h.physical={uniforms:(0,r.Rh)([h.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new o.F(1,1)},clearcoatNormalMap:{value:null},sheen:{value:0},sheenColor:{value:new l.I(0)},sheenColorMap:{value:null},sheenRoughness:{value:0},sheenRoughnessMap:{value:null},transmission:{value:0},transmissionMap:{value:null},transmissionSamplerSize:{value:new o.F},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},attenuationDistance:{value:0},attenuationColor:{value:new l.I(0)},specularIntensity:{value:0},specularIntensityMap:{value:null},specularColor:{value:new l.I(1,1,1)},specularColorMap:{value:null}}]),vertexShader:n.W.meshphysical_vert,fragmentShader:n.W.meshphysical_frag}},76324:(e,t,i)=>{i.d(t,{D:()=>r,u:()=>n});const n="void main(){gl_Position=vec4(position,1.0);}",r="uniform sampler2D shadow_pass;uniform vec2 resolution;uniform float radius;\n#include <packing>\nvoid main(){const float samples=float(VSM_SAMPLES);float mean=0.0;float squared_mean=0.0;float uvStride=samples<=1.0?0.0:2.0/(samples-1.0);float uvStart=samples<=1.0?0.0:-1.0;for(float i=0.0;i<samples;i++){float uvOffset=uvStart+i*uvStride;\n#ifdef HORIZONTAL_PASS\nvec2 distribution=unpackRGBATo2Half(texture2D(shadow_pass,(gl_FragCoord.xy+vec2(uvOffset,0.0)*radius)/resolution));mean+=distribution.x;squared_mean+=distribution.y*distribution.y+distribution.x*distribution.x;\n#else\nfloat depth=unpackRGBAToDepth(texture2D(shadow_pass,(gl_FragCoord.xy+vec2(0.0,uvOffset)*radius)/resolution));mean+=depth;squared_mean+=depth*depth;\n#endif\n}mean=mean/samples;squared_mean=squared_mean/samples;float std_dev=sqrt(squared_mean-mean*mean);gl_FragColor=pack2HalfToRGBA(vec2(mean,std_dev));}"},56519:(e,t,i)=>{i.d(t,{r:()=>a});var n=i(89725),r=i(53754),o=i(15037);const a={common:{diffuse:{value:new n.I(16777215)},opacity:{value:1},map:{value:null},uvTransform:{value:new o.V},uv2Transform:{value:new o.V},alphaMap:{value:null},alphaTest:{value:0}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98},maxMipLevel:{value:0}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new r.F(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new n.I(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new n.I(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new o.V}},sprite:{diffuse:{value:new n.I(16777215)},opacity:{value:1},center:{value:new r.F(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new o.V}}}},22535:(e,t,i)=>{function n(e){const t={};for(const i in e){t[i]={};for(const n in e[i]){const r=e[i][n];r&&(r.isColor||r.isMatrix3||r.isMatrix4||r.isVector2||r.isVector3||r.isVector4||r.isTexture||r.isQuaternion)?t[i][n]=r.clone():Array.isArray(r)?t[i][n]=r.slice():t[i][n]=r}}return t}function r(e){const t={};for(let i=0;i<e.length;i++){const r=n(e[i]);for(const e in r)t[e]=r[e]}return t}i.d(t,{Rh:()=>r,dw:()=>n,rD:()=>o});const o={clone:n,merge:r}},32515:(e,t,i)=>{i.d(t,{XO:()=>c,c8:()=>n,Pv:()=>d,V3:()=>r,kV:()=>u});i(37554);class n{mappings=new Map;textures=[];getPageTextures(){return this.textures}getMapping(e){return this.mappings.get(e)}clear(){this.dispose()}dispose(){this.mappings.clear(),this.textures.forEach((e=>e.dispose())),this.textures=[]}addPageTexture(e,t){const i=this.textures.length,{width:n,height:r}=e.image;for(const o of t){const{id:e}=o;if(this.mappings.has(e))throw new Error(`Duplicate texture atlas image id '${e}'`);this.mappings.set(e,{...o,page:i,u0:(o.x+.5)/n,v0:(o.y+.5)/r,u:(o.width-1)/n,v:(o.height-1)/r})}this.textures.push(e)}isImmutableAtlasMapper(){}}function r(e){return e&&"object"==typeof e&&"isImmutableAtlasMapper"in e}var o=i(42342),a=i(18498),s=i(96144);class l extends s.$W{total(){const e=this.options.border??0;return(this.width-2*e)*(this.height-2*e)}used(){const e=this.padding??0;return this.rects.reduce(((t,i)=>t+(i.width+e)*(i.height+e)),0)}free(){return this.total()-this.used()}freeMax(){const e=this.padding??0;return this.freeRects.reduce(((t,i)=>Math.max((i.width-e)*(i.height-e),t)),0)}occupancy(){return this.used()/this.total()}fragmentation(){const e=this.free();if(0===e)return 0;return(e-this.freeMax())/e}remove(e){const t=this.rects.findIndex((t=>t===e));if(-1!==t)return this.rects.splice(t,1),this.freeRects.push(new s.Ae(e.width+this.padding,e.height+this.padding,e.x,e.y)),e}}var c={NOT_UPDATED:0,UPDATED:1,REMAPPED:2};const h=e=>e.fragmentation()>.9&&e.occupancy()<.75;class d{mappings=new Map;newImages=[];bins=[];textures=[];forceRemap=!1;isLoadingImages=null;constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.renderer=e,this.width=t.width??1024,this.height=t.height??1024,this.padding=t.padding??0,this.mipmapping=t.mipmapping??!1;const i=t.remapping??!0;this.remapCallback="boolean"==typeof i?i?h:null:i,this.createAtlasTexture()}get remapping(){return null!==this.remapCallback}get needsUpdate(){return this.newImages.length>0||this.forceRemap||null!==this.isLoadingImages}triggerRemap(){this.remapping&&(this.forceRemap=!0)}createAtlasTexture(){const e=this.renderer.getContext(),{width:t,height:i}=this,n=this.mipmapping?2:1,r=e.createTexture();if(null===r)throw new Error("Failed creating atlas texture");if(e.activeTexture(e.TEXTURE0),e.bindTexture(e.TEXTURE_2D,r),e.texImage2D(e.TEXTURE_2D,0,e.RGBA,t,i,0,e.RGBA,e.UNSIGNED_BYTE,null),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,this.mipmapping?e.NEAREST_MIPMAP_LINEAR:e.LINEAR),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.LINEAR),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),n>1){const t=this.renderer.extensions.get("EXT_texture_filter_anisotropic");t&&e.texParameterf(e.TEXTURE_2D,t.TEXTURE_MAX_ANISOTROPY_EXT,n)}if(this.mipmapping&&this.renderer.capabilities.isWebGL2){const t=256;let i=0;for(let e=Math.min(this.width,this.height);e>t;e/=2)i++;e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAX_LEVEL,i)}e.bindTexture(e.TEXTURE_2D,null);const s=new o.x;s.image={width:t,height:i},s.format=a.wk1,s.type=a.ywz,s.minFilter=this.mipmapping?a.vZf:a.wem,s.magFilter=a.wem,s.wrapS=a.uWy,s.wrapT=a.uWy,s.anisotropy=n;const c=this.renderer.properties.get(s);c.__webglTexture=r,c.__webglInit=!0,c.__currentAnisotropy=n;const h=new l(this.width,this.height,this.padding,{border:this.padding,smart:!1});this.textures.push(s),this.bins.push(h)}add(e,t){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(!t)throw new Error(`Trying to add invalid image to atlas (id=${e})`);if(t instanceof HTMLImageElement){if(!t.complete||t.width<=0||t.height<=0)throw new Error(`Trying to add incomplete image to atlas (id=${e} src=${t.src})`);if(t.width>this.width||t.height>this.height)throw new Error(`Image size to large for atlas (id=${e} src=${t.src})`)}if(this.mappings.has(e))return;const{loader:n,meta:r}=i,o={id:e,image:t,...this.remapping&&n&&{loader:n},page:-1,width:t.width,height:t.height,x:0,y:0,u0:0,v0:0,u:t.width/this.width,v:t.height/this.height,...r};this.mappings.set(e,o),this.newImages.push(o)}remove(e){const t=this.mappings.get(e);if(void 0===t)return!1;if(-1!==t.page){this.bins[t.page].remove(t)}else{const e=this.newImages.findIndex((e=>e===t));-1!==e&&this.newImages.splice(e,1)}return this.mappings.delete(e),!0}unassignMappingsAndCollect(){const e=[];for(const t of this.mappings.values())t.page=-1,t.image&&e.push(t);return e}beginTextureAtIndex(e){const t=this.renderer.getContext(),i=this.textures[e],n=this.renderer.properties.get(i).__webglTexture;t.activeTexture(t.TEXTURE0),t.bindTexture(t.TEXTURE_2D,n),t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL,!0),t.pixelStorei(t.UNPACK_PREMULTIPLY_ALPHA_WEBGL,!1),t.pixelStorei(t.UNPACK_ALIGNMENT,4)}endTextureAtIndex(e){const t=this.renderer.getContext();if(this.mipmapping){const i=this.textures[e],{width:n,height:r}=i.image,o=this.renderer.properties.get(i);t.generateMipmap(t.TEXTURE_2D),o.__maxMipLevel=Math.log(Math.max(n,r))*Math.LOG2E}t.bindTexture(t.TEXTURE_2D,null)}update(){if(!this.needsUpdate)return c.NOT_UPDATED;let e,t=!1;if(null===this.isLoadingImages){if(this.forceRemap||this.shouldRemap())return this.loadImages(),c.NOT_UPDATED;e=this.newImages}else{if(this.isLoadingImages)return c.NOT_UPDATED;this.isLoadingImages=null,e=this.unassignMappingsAndCollect(),this.bins.forEach((e=>e.reset(!0))),t=!0}if(this.newImages=[],0===e.length)return c.NOT_UPDATED;e.sort(((e,t)=>Math.max(t.width,t.height)-Math.max(e.width,e.height)));const i=this.renderer.getContext();let n=-1;for(const r of e){let e=this.bins.findIndex((e=>void 0!==e.add(r)));e!==n&&-1!==n&&this.endTextureAtIndex(n),-1===e&&(e=this.bins.length,this.createAtlasTexture(),this.bins[e].add(r)),e!==n&&(this.beginTextureAtIndex(e),n=e);const t=r.x,o=this.height-r.height-r.y,a=r.image;i.texSubImage2D(i.TEXTURE_2D,0,t,o,i.RGBA,i.UNSIGNED_BYTE,a),r.page=e,r.u0=(r.x+.5)/this.width,r.v0=(r.y+.5)/this.height,r.u=(r.width-1)/this.width,r.v=(r.height-1)/this.height,this.remapping&&!r.loader||(r.image=null)}return-1!==n&&this.endTextureAtIndex(n),this.forceRemap=!1,t?c.REMAPPED:c.UPDATED}shouldRemap(){if(null===this.remapCallback)return!1;for(const e of this.bins)if(this.remapCallback(e))return!0;return!1}async loadImages(){this.isLoadingImages=!0;const e=async e=>{try{e.image=await e.loader()}catch(t){console.warn(`Atlas repack - Failed loading ${e.id}`,t)}},t=[];for(const i of this.mappings.values())i.image||(i.loader?t.push(e(i)):console.warn(`Atlas repack - No loader for ${i.id}`));await Promise.all(t),this.isLoadingImages=!1}getPageTextures(){return this.textures}getMapping(e){const t=this.mappings.get(e);return t&&-1!==t.page?t:void 0}getMappingUnsafe(e){return this.mappings.get(e)}clear(){this.mappings.clear(),this.bins.forEach((e=>e.reset(!0)))}dispose(){this.mappings.clear(),this.textures.forEach((e=>e.dispose())),this.textures=[],this.bins=[]}isMutableAtlasMapper(){}}function u(e){return e&&"object"==typeof e&&"isMutableAtlasMapper"in e}},72243:(e,t,i)=>{i.d(t,{bv:()=>u,C:()=>x,P1:()=>y,UG:()=>C,Hs:()=>M,xK:()=>L,FA:()=>I,TO:()=>R,BV:()=>V,JX:()=>G,pc:()=>W,eH:()=>Y,kr:()=>Q,Is:()=>te,Rq:()=>oe,C$:()=>de,mh:()=>ae,Rj:()=>me,uh:()=>K,sH:()=>fe,u2:()=>ge});i(53703),i(5741),i(19202);var n=i(53754),r=i(28388),o=i(18498),a=i(9166),s=i(58375),l=i(72342);i(37554);class c extends Error{constructor(e){super(e),this.name="RenderSystemError"}}class h extends c{constructor(e,t){super(`${e} capacity exceeded${t?`(${t})`:""}`),this.name="SystemCapacityExceeded"}}class d extends c{constructor(e){super(`Required option "${e}" is missing`),this.name="RequiredOptionMissing"}}let u;!function(e){e.default="default",e.normal="default",e.gradient="gradient",e.pixelSelection="pixelSelection",e.boxSelection="boxSelection",e.depth="depth",e.addAlpha="addAlpha",e.terrain="terrain",e.masked="masked",e.pulse="pulse",e.coloredGradient="coloredGradient"}(u||(u={}));const f=16383,m=e=>Math.max(Math.min(e,1),0),g=new n.F,p=new r.P,v=new l.Zm(1,1,1,1);class x{isRenderSystem=!0;$name="system";_color=new l.Zm(1,1,1,1);_fillColor=new l.Zm(1,0,0,1);maskTexture=null;_maskResolution=new n.F(5e3,5e3);_scale=new n.F;_offset=new n.F;_alignDisplacement=new n.F(0,1);_uniformScale=1;_verticalScale=1;_rotationSkew=new n.F(0,0);_uTime={value:0};scene=null;atlasMapper=null;renderOrder=0;mode=u.default;materialParameters={};geometries=[];instances=[];count=0;_enabled=!0;_visible=!0;constructor(e){this.maxBillboards=e,this.maxGeometries=Math.floor((e+f-1)/f),this.updateSizeUniform()}init(e){var t;if(!e.scene)throw new d("scene");if(!e.atlasMapper)throw new d("atlasMapper");Object.assign(this,e);const i=x.context.deref().shaderLib.getProgram(`billboard.${this.mode}`);this.materialParameters={...i,blending:o.bdR,depthTest:!1,depthWrite:(null===(t=e.materialParameters)||void 0===t?void 0:t.depthTest)??!1,transparent:!0,...e.materialParameters},this.createBuffers();const n=this.atlasMapper.getPageTextures()[0];return this.instances.push(this.createInstance(n,!1)),this.color.set(e.color??this.color),this.uniformScale=e.uniformScale??this.uniformScale,this.verticalScale=e.verticalScale??this.verticalScale,this.rotation=e.rotation??this.rotation,this.skew=e.skew??this.skew,this}get color(){return this._color}set color(e){this._color.set(e)}get alpha(){return this._color.a}set alpha(e){this._color.a=e}get uniformScale(){return this._uniformScale}set uniformScale(e){this._uniformScale=e,this.updateSizeUniform()}get verticalScale(){return this._verticalScale}set verticalScale(e){this._verticalScale=e,this.updateSizeUniform()}get offset(){return this._offset}set offset(e){this._offset.copy(e)}get align(){return this._alignDisplacement.x}set align(e){this._alignDisplacement.x=e}get displacement(){return this._alignDisplacement.y}set displacement(e){this._alignDisplacement.y=e}get fillColor(){return this._fillColor}set fillColor(e){this._fillColor.set(e)}get maskResolution(){return this._maskResolution}set maskResolution(e){this._maskResolution.copy(e)}get rotation(){return this._rotationSkew.x}set rotation(e){this._rotationSkew.x=e}get skew(){return this._rotationSkew.y}set skew(e){this._rotationSkew.y=e}get time(){return this._uTime.value}set time(e){this._uTime.value=e}get enabled(){return this._enabled}set enabled(e){const t=e&&this.visible;this.instances.forEach((e=>e.forEach((e=>e.visible=t)))),this._enabled=e}get visible(){return this._visible}set visible(e){const t=e&&this.enabled;this.instances.forEach((e=>e.forEach((e=>e.visible=t)))),this._visible=e}static get sharedVertexBuffers(){const{vertexBufferLib:e}=x.context.deref();return[e.getBuffer("1x1Index"),e.getBuffer("1x1VertexIndex")]}get vertexBuffers(){const e=x.sharedVertexBuffers;return this.geometries.flatMap((t=>(0,l.yr)(t,(t=>e.includes(t)))))}get batchCount(){return this.instances.reduce(((e,t)=>e+t.length),0)}updateSizeUniform(){this._scale.set(this._uniformScale,this._uniformScale/this._verticalScale)}createBuffers(){const{vertexBufferLib:e}=x.context.deref(),t=e.getBuffer("1x1Index"),i=e.getBuffer("1x1VertexIndex"),n=[["position",Float32Array,3],["size",Float32Array,1],["uvSize",Uint16Array,2,!0],["uv0",Uint16Array,2,!0],["offset",Float32Array,2],["displacement",Float32Array,2],["rotation",Float32Array,1],["pivot",Float32Array,1],["color",Uint8Array,4,!0]];this.mode===u.coloredGradient&&n.push(["gradientPulse",Uint8Array,4,!0]);const r=new l.ww(n);for(let a=0;a<this.maxGeometries;++a){const e=4*(a===this.maxGeometries-1&&this.maxBillboards!==f?this.maxBillboards%f:f),n=r.createGeometry(e,{usage:o.dj0});n.setIndex(t),n.setAttribute("vertexIndex",i),(0,l.Ae)(n),n.setDrawRange(0,0),this.geometries.push(n)}}createInstance(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];const{width:i,height:r}=e.image,o={uColor:{value:this._color},uSize:{value:this._scale},uOffset:{value:this._offset},uAlignDisplacement:{value:this._alignDisplacement},uRotationSkew:{value:this._rotationSkew},uTime:this._uTime,uTextureSize:{value:new n.F(i,r)},texture:{value:e}};this.maskTexture&&(o.maskTexture={value:this.maskTexture},o.uMaskResolution={value:this._maskResolution});const c=new a.F({uniforms:o,...this.materialParameters}),h=[];for(let n of this.geometries){t&&(n=(0,l.Vy)(n),n.setDrawRange(0,0));const e=new s.K(n,c);e.renderOrder=this.renderOrder,this.scene&&this.scene.add(e),h.push(e)}return h}begin(){this.count=0;const e=this.atlasMapper.getPageTextures();for(let t=this.instances.length;t<e.length;++t)this.instances.push(this.createInstance(e[t]))}billboard(e){let{image:t,id:i,position:n=p,offset:r=g,displacement:o=g,size:a=1,rotation:s=0,color:c=v,gradient:d=p}=e;if(!t){if(!i)return;if(t=this.atlasMapper.getMapping(i),!t)return void console.warn(`unknown billboard id: ${i}`)}const{scale:u=1}=t;1!==u&&(a/=u);const S=t.pivot??g,{u:y=1,v:_=1,u0:w=0,v0:b=0}=t;let C=Math.floor(this.count/f);const P=this.geometries[C];if(!P||this.count>=this.maxBillboards){const{onError:e}=x.context.deref();return void e(new h("Billboard system",this.maxBillboards))}const M=this.count%f*4,A=l.e3.create(P,"position",M),T=l.e3.create(P,"size",M),L=l.e3.create(P,"uvSize",M),D=l.e3.create(P,"uv0",M),I=l.e3.create(P,"offset",M),E=l.e3.create(P,"displacement",M),R=l.e3.create(P,"rotation",M),U=l.e3.create(P,"pivot",M),N=l.e3.create(P,"color",M),B=l.e3.create(P,"gradientPulse",M);A.setXYZ(n.x,n.y,n.z??0),T.setX(a),I.setVec2(r),E.setVec2(o),L.setXY(65535*m(y),65535*m(_)),D.setXY(65535*m(w),65535*m(b)),R.setX(s),U.setX((0,l.Db)(512,S.x,S.y)),N.setXYZW(128*m(c.r),128*m(c.g),128*m(c.b),255*m(c.a)),null==B||B.setXYZ(255*d.x,255*d.y,255*d.z),A.next().setX(t.page),++this.count}end(){const e=new Array(this.instances.length+1);e[0]=0;const t=e=>e.usage===o.dj0,i=this.geometries.map((e=>(0,l.yr)(e,t)));let n=0;for(let r=0;r<this.instances.length;++r){for(let e=n;e<this.count;++e){const t=Math.floor(e/f),o=this.instances[r][t].geometry,a=e%f*4,s=l.e3.create(o,"position",a+1);if(s.getX()===r){const o=Math.floor(n/f),c=n%f*4,h=i[o];if(e!==n){const e=i[t];for(const[t,i]of h.entries()){const n=(0,l.J7)(i),r=c*n,o=i.array,s=e[t].array,h=a*n;(0,l.bD)(s,h,o,r,n)}const n=this.instances[r][o].geometry,d=l.e3.create(n,"position",c+1);s.setX(d.getX())}for(const e of h){const t=(0,l.J7)(e),i=c*t,n=i+t,r=e.array;r.copyWithin(n,i,n),r.copyWithin(n+t,i,n+t)}++n}}e[r+1]=n}for(const r of i)for(const e of r)e.needsUpdate=!0;for(const[r,o]of this.instances.entries()){for(const{geometry:e}of o)e.setDrawRange(0,0);const t=Math.floor(e[r]/f),i=Math.floor(e[r+1]/f);for(let n=t;n<=i;++n){const{geometry:a}=o[n],s=n===t?e[r]%f:0,l=n===i?e[r+1]%f:f,c=6;a.setDrawRange(s*c,(l-s)*c)}}}setGlobalMaskResolution(e,t){this.maskResolution.set(e,t)}dispose(){this.scene&&(this.scene.remove(...this.scene.children),this.scene=null);for(const e of this.instances)e.forEach((e=>{let{geometry:t}=e;return t.dispose()}));this.instances=[],this.geometries.length=0,this.atlasMapper=null,this.count=0}static context=new l.gJ;static initShared(e,t){this.context.reset(e);const{shaderLib:i}=e,{defines:n}=t;i.addSource("vertex","billboard.default","precision highp float;uniform mat4 modelViewMatrix;uniform mat4 projectionMatrix;uniform vec4 uColor;uniform vec2 uTextureSize;uniform vec2 uSize;uniform vec2 uOffset;uniform vec2 uAlignDisplacement;\n#ifdef EXTENDED_TRANSFORMS\nuniform vec2 uRotationSkew;\n#endif\nattribute float vertexIndex;attribute vec3 position;attribute float size;attribute vec2 uvSize;attribute vec2 uv0;attribute vec2 offset;attribute vec2 displacement;attribute float rotation;attribute float pivot;attribute vec4 color;varying vec2 vUV;varying vec4 vColor;varying vec4 vBColor;mat2 a(float b){float c=cos(b);float d=sin(b);return mat2(c,d,-d,c);}vec2 e(in float f){return vec2(mod(f,1024.0)-512.0,floor(f/1024.0)-512.0);}vec2 g(in float h){return vec2(mod(h,2.0),floor(h/2.0));}void i(in vec2 j,in vec2 k,in vec2 l,out vec2 m){m=k+l*j;m.y=1.0-m.y;}vec2 n(in vec2 j,in vec2 o){return j*o+1.0;}void p(in vec4 q,out vec2 r){r=q.xy*2.0;}void s(in vec4 q,in vec4 t,out vec4 u){vec3 v=q.xyz*2.0;u=vec4(t.xyz*min(v,vec3(1.0)),q.w*t.w);}void w(in vec4 q,in vec4 t,out vec4 u,out vec4 x){vec3 v=q.xyz*2.0;u=vec4(t.xyz*min(v,vec3(1.0)),q.w*t.w);x=vec4(max(v-vec3(1.0),vec3(0.0)),0.0);}vec4 y(in vec3 z,in float A,in vec2 B,in vec2 C,in vec2 m,in vec2 D,in float E,in float F,in vec2 G,in vec2 H,in float I,in float J){vec2 K=e(F);vec2 L=(m-vec2(0.5))*D;L-=K;L*=A;L*=a(E);L+=B;L+=H;L.x+=D.x*I;L*=G;L+=z.xy;L+=C*J;return vec4(L,z.z,1.0);}vec4 M(in vec3 z,in float A,in vec2 B,in vec2 C,in vec2 m,in vec2 D,in float E,in float F,in vec2 G,in float N,in float O,in vec2 H,in float I,in float J){vec2 K=e(F);vec2 L=(m-vec2(0.5))*D;L-=K;L*=A;L*=a(E);L+=B;L+=H;L.x+=D.x*I;L*=G;L.x+=L.y*O;L*=a(N);L+=z.xy;L+=C*J;return vec4(L,z.z,1.0);}void main(){vec2 m=g(vertexIndex);i(uvSize,uv0,m,vUV);w(color,uColor,vColor,vBColor);\n#ifdef EXTENDED_TRANSFORMS\nvec4 P=M(position,size,offset,displacement,m,n(uvSize,uTextureSize),rotation,pivot,uSize,uRotationSkew.x,uRotationSkew.y,uOffset,uAlignDisplacement.x,uAlignDisplacement.y);\n#else\nvec4 P=y(position,size,offset,displacement,m,n(uvSize,uTextureSize),rotation,pivot,uSize,uOffset,uAlignDisplacement.x,uAlignDisplacement.y);\n#endif\ngl_Position=projectionMatrix*modelViewMatrix*P;}"),i.addSource("vertex","billboard.simple","precision highp float;uniform mat4 modelViewMatrix;uniform mat4 projectionMatrix;uniform vec4 uColor;uniform vec2 uTextureSize;uniform vec2 uSize;uniform vec2 uOffset;uniform vec2 uAlignDisplacement;\n#ifdef EXTENDED_TRANSFORMS\nuniform vec2 uRotationSkew;\n#endif\nattribute float vertexIndex;attribute vec3 position;attribute float size;attribute vec2 uvSize;attribute vec2 uv0;attribute vec2 offset;attribute vec2 displacement;attribute float rotation;attribute float pivot;attribute vec4 color;varying vec2 vUV;varying vec4 vColor;mat2 a(float b){float c=cos(b);float d=sin(b);return mat2(c,d,-d,c);}vec2 e(in float f){return vec2(mod(f,1024.0)-512.0,floor(f/1024.0)-512.0);}vec2 g(in float h){return vec2(mod(h,2.0),floor(h/2.0));}void i(in vec2 j,in vec2 k,in vec2 l,out vec2 m){m=k+l*j;m.y=1.0-m.y;}vec2 n(in vec2 j,in vec2 o){return j*o+1.0;}void p(in vec4 q,out vec2 r){r=q.xy*2.0;}void s(in vec4 q,in vec4 t,out vec4 u){vec3 v=q.xyz*2.0;u=vec4(t.xyz*min(v,vec3(1.0)),q.w*t.w);}void w(in vec4 q,in vec4 t,out vec4 u,out vec4 x){vec3 v=q.xyz*2.0;u=vec4(t.xyz*min(v,vec3(1.0)),q.w*t.w);x=vec4(max(v-vec3(1.0),vec3(0.0)),0.0);}vec4 y(in vec3 z,in float A,in vec2 B,in vec2 C,in vec2 m,in vec2 D,in float E,in float F,in vec2 G,in vec2 H,in float I,in float J){vec2 K=e(F);vec2 L=(m-vec2(0.5))*D;L-=K;L*=A;L*=a(E);L+=B;L+=H;L.x+=D.x*I;L*=G;L+=z.xy;L+=C*J;return vec4(L,z.z,1.0);}vec4 M(in vec3 z,in float A,in vec2 B,in vec2 C,in vec2 m,in vec2 D,in float E,in float F,in vec2 G,in float N,in float O,in vec2 H,in float I,in float J){vec2 K=e(F);vec2 L=(m-vec2(0.5))*D;L-=K;L*=A;L*=a(E);L+=B;L+=H;L.x+=D.x*I;L*=G;L.x+=L.y*O;L*=a(N);L+=z.xy;L+=C*J;return vec4(L,z.z,1.0);}void main(){vec2 m=g(vertexIndex);i(uvSize,uv0,m,vUV);s(color,uColor,vColor);\n#ifdef EXTENDED_TRANSFORMS\nvec4 P=M(position,size,offset,displacement,m,n(uvSize,uTextureSize),rotation,pivot,uSize,uRotationSkew.x,uRotationSkew.y,uOffset,uAlignDisplacement.x,uAlignDisplacement.y);\n#else\nvec4 P=y(position,size,offset,displacement,m,n(uvSize,uTextureSize),rotation,pivot,uSize,uOffset,uAlignDisplacement.x,uAlignDisplacement.y);\n#endif\ngl_Position=projectionMatrix*modelViewMatrix*P;}"),i.addProgram("billboard.default",{vertexName:"billboard.default",fragmentShader:"precision highp float;uniform sampler2D texture;varying vec2 vUV;varying vec4 vColor;varying vec4 vBColor;void main(){vec4 a=texture2D(texture,vUV);if(a.w<0.1){discard;}gl_FragColor=vColor*a+vBColor;}",defines:n}),i.addProgram("billboard.addAlpha",{vertexName:"billboard.simple",fragmentShader:"precision highp float;uniform sampler2D texture;varying vec2 vUV;varying vec4 vColor;void main(){vec4 a=texture2D(texture,vUV);gl_FragColor=vec4(vec3(0.0),a.z*vColor.w);}",defines:n}),i.addProgram("billboard.boxSelection",{vertexShader:"precision highp float;uniform mat4 modelViewMatrix;uniform mat4 projectionMatrix;uniform vec4 uColor;uniform vec2 uTextureSize;uniform vec2 uSize;uniform vec2 uOffset;uniform vec2 uAlignDisplacement;attribute float vertexIndex;attribute vec3 position;attribute float size;attribute vec2 uvSize;attribute vec2 offset;attribute vec2 displacement;attribute float rotation;attribute float pivot;attribute vec4 color;varying vec4 vColor;mat2 a(float b){float c=cos(b);float d=sin(b);return mat2(c,d,-d,c);}vec2 e(in float f){return vec2(mod(f,1024.0)-512.0,floor(f/1024.0)-512.0);}vec2 g(in float h){return vec2(mod(h,2.0),floor(h/2.0));}void i(in vec2 j,in vec2 k,in vec2 l,out vec2 m){m=k+l*j;m.y=1.0-m.y;}vec2 n(in vec2 j,in vec2 o){return j*o+1.0;}void p(in vec4 q,out vec2 r){r=q.xy*2.0;}void s(in vec4 q,in vec4 t,out vec4 u){vec3 v=q.xyz*2.0;u=vec4(t.xyz*min(v,vec3(1.0)),q.w*t.w);}void w(in vec4 q,in vec4 t,out vec4 u,out vec4 x){vec3 v=q.xyz*2.0;u=vec4(t.xyz*min(v,vec3(1.0)),q.w*t.w);x=vec4(max(v-vec3(1.0),vec3(0.0)),0.0);}vec4 y(in vec3 z,in float A,in vec2 B,in vec2 C,in vec2 m,in vec2 D,in float E,in float F,in vec2 G,in vec2 H,in float I,in float J){vec2 K=e(F);vec2 L=(m-vec2(0.5))*D;L-=K;L*=A;L*=a(E);L+=B;L+=H;L.x+=D.x*I;L*=G;L+=z.xy;L+=C*J;return vec4(L,z.z,1.0);}vec4 M(in vec3 z,in float A,in vec2 B,in vec2 C,in vec2 m,in vec2 D,in float E,in float F,in vec2 G,in float N,in float O,in vec2 H,in float I,in float J){vec2 K=e(F);vec2 L=(m-vec2(0.5))*D;L-=K;L*=A;L*=a(E);L+=B;L+=H;L.x+=D.x*I;L*=G;L.x+=L.y*O;L*=a(N);L+=z.xy;L+=C*J;return vec4(L,z.z,1.0);}void main(){s(color,uColor,vColor);vec4 P=y(position,size,offset,displacement,g(vertexIndex),n(uvSize,uTextureSize),rotation,pivot,uSize,uOffset,uAlignDisplacement.x,uAlignDisplacement.y);gl_Position=projectionMatrix*modelViewMatrix*P;}",fragmentShader:"precision highp float;varying vec4 vColor;void main(){gl_FragColor=vColor;}",defines:n}),i.addProgram("billboard.depth",{vertexName:"billboard.simple",fragmentShader:"precision highp float;uniform sampler2D texture;varying vec2 vUV;varying vec4 vColor;void main(){gl_FragColor=texture2D(texture,vUV)*vColor.w;}",defines:n}),i.addProgram("billboard.gradient",{vertexShader:"precision highp float;uniform mat4 modelViewMatrix;uniform mat4 projectionMatrix;uniform vec4 uColor;uniform vec2 uTextureSize;uniform vec2 uSize;uniform vec2 uOffset;uniform vec2 uAlignDisplacement;attribute float vertexIndex;attribute vec3 position;attribute float size;attribute vec2 uvSize;attribute vec2 uv0;attribute vec2 offset;attribute vec2 displacement;attribute float rotation;attribute float pivot;attribute vec4 color;varying vec2 vUV;varying vec2 vGradient;varying vec4 vColor;mat2 a(float b){float c=cos(b);float d=sin(b);return mat2(c,d,-d,c);}vec2 e(in float f){return vec2(mod(f,1024.0)-512.0,floor(f/1024.0)-512.0);}vec2 g(in float h){return vec2(mod(h,2.0),floor(h/2.0));}void i(in vec2 j,in vec2 k,in vec2 l,out vec2 m){m=k+l*j;m.y=1.0-m.y;}vec2 n(in vec2 j,in vec2 o){return j*o+1.0;}void p(in vec4 q,out vec2 r){r=q.xy*2.0;}void s(in vec4 q,in vec4 t,out vec4 u){vec3 v=q.xyz*2.0;u=vec4(t.xyz*min(v,vec3(1.0)),q.w*t.w);}void w(in vec4 q,in vec4 t,out vec4 u,out vec4 x){vec3 v=q.xyz*2.0;u=vec4(t.xyz*min(v,vec3(1.0)),q.w*t.w);x=vec4(max(v-vec3(1.0),vec3(0.0)),0.0);}vec4 y(in vec3 z,in float A,in vec2 B,in vec2 C,in vec2 m,in vec2 D,in float E,in float F,in vec2 G,in vec2 H,in float I,in float J){vec2 K=e(F);vec2 L=(m-vec2(0.5))*D;L-=K;L*=A;L*=a(E);L+=B;L+=H;L.x+=D.x*I;L*=G;L+=z.xy;L+=C*J;return vec4(L,z.z,1.0);}vec4 M(in vec3 z,in float A,in vec2 B,in vec2 C,in vec2 m,in vec2 D,in float E,in float F,in vec2 G,in float N,in float O,in vec2 H,in float I,in float J){vec2 K=e(F);vec2 L=(m-vec2(0.5))*D;L-=K;L*=A;L*=a(E);L+=B;L+=H;L.x+=D.x*I;L*=G;L.x+=L.y*O;L*=a(N);L+=z.xy;L+=C*J;return vec4(L,z.z,1.0);}void main(){vec2 m=g(vertexIndex);i(uvSize,uv0,m,vUV);p(color,vGradient);s(color,uColor,vColor);vec4 P=y(position,size,offset,displacement,m,n(uvSize,uTextureSize),rotation,pivot,uSize,uOffset,uAlignDisplacement.x,uAlignDisplacement.y);gl_Position=projectionMatrix*modelViewMatrix*P;}",fragmentShader:"precision highp float;uniform sampler2D texture;uniform vec4 uFillColor;varying vec2 vUV;varying vec2 vGradient;varying vec4 vColor;void main(){vec4 a=texture2D(texture,vUV);float b=-min(a.r-vGradient.y,0.0);b*=max(a.r-vGradient.x,0.0);b=min(b*1024.0,1.0);float c=a.b*vColor.w*b;if(c<0.2){discard;}gl_FragColor=vec4(vec3(b)*uFillColor.xyz,c);}",defines:n}),i.addProgram("billboard.coloredGradient",{vertexShader:"precision highp float;uniform mat4 modelViewMatrix;uniform mat4 projectionMatrix;uniform vec4 uColor;uniform vec2 uTextureSize;uniform vec2 uSize;uniform vec2 uOffset;uniform vec2 uAlignDisplacement;attribute float vertexIndex;attribute vec3 position;attribute float size;attribute vec2 uvSize;attribute vec2 uv0;attribute vec2 offset;attribute vec2 displacement;attribute float rotation;attribute float pivot;attribute vec4 color;attribute vec4 gradientPulse;varying vec2 vUV;varying vec4 vGradientPulse;varying vec4 vColor;varying vec4 vBColor;mat2 a(float b){float c=cos(b);float d=sin(b);return mat2(c,d,-d,c);}vec2 e(in float f){return vec2(mod(f,1024.0)-512.0,floor(f/1024.0)-512.0);}vec2 g(in float h){return vec2(mod(h,2.0),floor(h/2.0));}void i(in vec2 j,in vec2 k,in vec2 l,out vec2 m){m=k+l*j;m.y=1.0-m.y;}vec2 n(in vec2 j,in vec2 o){return j*o+1.0;}void p(in vec4 q,out vec2 r){r=q.xy*2.0;}void s(in vec4 q,in vec4 t,out vec4 u){vec3 v=q.xyz*2.0;u=vec4(t.xyz*min(v,vec3(1.0)),q.w*t.w);}void w(in vec4 q,in vec4 t,out vec4 u,out vec4 x){vec3 v=q.xyz*2.0;u=vec4(t.xyz*min(v,vec3(1.0)),q.w*t.w);x=vec4(max(v-vec3(1.0),vec3(0.0)),0.0);}vec4 y(in vec3 z,in float A,in vec2 B,in vec2 C,in vec2 m,in vec2 D,in float E,in float F,in vec2 G,in vec2 H,in float I,in float J){vec2 K=e(F);vec2 L=(m-vec2(0.5))*D;L-=K;L*=A;L*=a(E);L+=B;L+=H;L.x+=D.x*I;L*=G;L+=z.xy;L+=C*J;return vec4(L,z.z,1.0);}vec4 M(in vec3 z,in float A,in vec2 B,in vec2 C,in vec2 m,in vec2 D,in float E,in float F,in vec2 G,in float N,in float O,in vec2 H,in float I,in float J){vec2 K=e(F);vec2 L=(m-vec2(0.5))*D;L-=K;L*=A;L*=a(E);L+=B;L+=H;L.x+=D.x*I;L*=G;L.x+=L.y*O;L*=a(N);L+=z.xy;L+=C*J;return vec4(L,z.z,1.0);}void main(){vec2 m=g(vertexIndex);i(uvSize,uv0,m,vUV);vGradientPulse=gradientPulse;w(color,uColor,vColor,vBColor);vec4 P=y(position,size,offset,displacement,m,n(uvSize,uTextureSize),rotation,pivot,uSize,uOffset,uAlignDisplacement.x,uAlignDisplacement.y);gl_Position=projectionMatrix*modelViewMatrix*P;}",fragmentShader:"precision highp float;uniform sampler2D texture;uniform float uTime;varying vec2 vUV;varying vec4 vGradientPulse;varying vec4 vColor;vec4 a(vec4 b,vec4 c,float d){float e=abs(sin(0.002*d));return vec4(mix(b.rgb,c.rgb,e),b.a);}void main(){vec4 f=texture2D(texture,vUV);float g=-min(f.r-vGradientPulse.y,0.0);g*=max(f.r-vGradientPulse.x,0.0);g=min(g*1024.0,1.0);float h=f.b*vColor.w*g;if(h<0.2){discard;}vec4 b=vec4(vec3(g)*vColor.xyz,h);vec4 c=clamp(b+vec4(0.2*vGradientPulse.z),vec4(0.0),vec4(1.0));gl_FragColor=a(b,c,uTime);}",defines:n}),i.addProgram("billboard.masked",{vertexShader:"precision highp float;uniform mat4 modelViewMatrix;uniform mat4 projectionMatrix;uniform vec4 uColor;uniform vec2 uTextureSize;uniform vec2 uSize;uniform vec2 uOffset;uniform vec2 uAlignDisplacement;uniform vec2 uMaskResolution;attribute float vertexIndex;attribute vec3 position;attribute float size;attribute vec2 uvSize;attribute vec2 uv0;attribute vec2 offset;attribute vec2 displacement;attribute float rotation;attribute float pivot;attribute vec4 color;varying vec2 vUV;varying vec2 vMUV;varying vec4 vColor;varying vec4 vBColor;mat2 a(float b){float c=cos(b);float d=sin(b);return mat2(c,d,-d,c);}vec2 e(in float f){return vec2(mod(f,1024.0)-512.0,floor(f/1024.0)-512.0);}vec2 g(in float h){return vec2(mod(h,2.0),floor(h/2.0));}void i(in vec2 j,in vec2 k,in vec2 l,out vec2 m){m=k+l*j;m.y=1.0-m.y;}vec2 n(in vec2 j,in vec2 o){return j*o+1.0;}void p(in vec4 q,out vec2 r){r=q.xy*2.0;}void s(in vec4 q,in vec4 t,out vec4 u){vec3 v=q.xyz*2.0;u=vec4(t.xyz*min(v,vec3(1.0)),q.w*t.w);}void w(in vec4 q,in vec4 t,out vec4 u,out vec4 x){vec3 v=q.xyz*2.0;u=vec4(t.xyz*min(v,vec3(1.0)),q.w*t.w);x=vec4(max(v-vec3(1.0),vec3(0.0)),0.0);}vec4 y(in vec3 z,in float A,in vec2 B,in vec2 C,in vec2 m,in vec2 D,in float E,in float F,in vec2 G,in vec2 H,in float I,in float J){vec2 K=e(F);vec2 L=(m-vec2(0.5))*D;L-=K;L*=A;L*=a(E);L+=B;L+=H;L.x+=D.x*I;L*=G;L+=z.xy;L+=C*J;return vec4(L,z.z,1.0);}vec4 M(in vec3 z,in float A,in vec2 B,in vec2 C,in vec2 m,in vec2 D,in float E,in float F,in vec2 G,in float N,in float O,in vec2 H,in float I,in float J){vec2 K=e(F);vec2 L=(m-vec2(0.5))*D;L-=K;L*=A;L*=a(E);L+=B;L+=H;L.x+=D.x*I;L*=G;L.x+=L.y*O;L*=a(N);L+=z.xy;L+=C*J;return vec4(L,z.z,1.0);}void main(){vec2 m=g(vertexIndex);i(uvSize,uv0,m,vUV);w(color,uColor,vColor,vBColor);vec4 P=y(position,size,offset,displacement,m,n(uvSize,uTextureSize),rotation,pivot,uSize,uOffset,uAlignDisplacement.x,uAlignDisplacement.y);gl_Position=projectionMatrix*modelViewMatrix*P;vMUV=P.xy/uMaskResolution;vMUV.y=1.0-vMUV.y;}",fragmentShader:"precision highp float;uniform sampler2D texture;uniform sampler2D maskTexture;varying vec2 vUV;varying vec4 vColor;varying vec4 vBColor;varying vec2 vMUV;void main(){vec4 a=texture2D(maskTexture,vMUV);gl_FragColor=vColor*texture2D(texture,vUV)+vBColor;gl_FragColor.w*=a.z;}",defines:n}),i.addProgram("billboard.pixelSelection",{vertexName:"billboard.simple",fragmentShader:"precision highp float;uniform sampler2D texture;varying vec2 vUV;varying vec4 vColor;void main(){if(texture2D(texture,vUV).w<0.02){discard;}gl_FragColor=vColor;}",defines:n}),i.addProgram("billboard.terrain",{vertexName:"billboard.simple",fragmentShader:"precision highp float;uniform sampler2D texture;varying vec2 vUV;varying vec4 vColor;void main(){vec4 a=texture2D(texture,vUV);vec3 b=vec3(a.x*(1.0-a.y*2.0),a.x*(1.0-a.y),a.x+a.y);gl_FragColor=vec4(b,a.w*vColor.w);}",defines:n}),i.addProgram("billboard.pulse",{vertexShader:"precision highp float;uniform mat4 modelViewMatrix;uniform mat4 projectionMatrix;uniform vec4 uColor;uniform vec2 uTextureSize;uniform vec2 uSize;uniform vec2 uOffset;uniform vec2 uAlignDisplacement;attribute float vertexIndex;attribute vec3 position;attribute float size;attribute vec2 uvSize;attribute vec2 uv0;attribute vec2 offset;attribute vec2 displacement;attribute float rotation;attribute float pivot;attribute vec4 color;varying vec2 vUV;varying vec4 vColor;varying vec4 vBColor;varying float vPulse;mat2 a(float b){float c=cos(b);float d=sin(b);return mat2(c,d,-d,c);}vec2 e(in float f){return vec2(mod(f,1024.0)-512.0,floor(f/1024.0)-512.0);}vec2 g(in float h){return vec2(mod(h,2.0),floor(h/2.0));}void i(in vec2 j,in vec2 k,in vec2 l,out vec2 m){m=k+l*j;m.y=1.0-m.y;}vec2 n(in vec2 j,in vec2 o){return j*o+1.0;}void p(in vec4 q,out vec2 r){r=q.xy*2.0;}void s(in vec4 q,in vec4 t,out vec4 u){vec3 v=q.xyz*2.0;u=vec4(t.xyz*min(v,vec3(1.0)),q.w*t.w);}void w(in vec4 q,in vec4 t,out vec4 u,out vec4 x){vec3 v=q.xyz*2.0;u=vec4(t.xyz*min(v,vec3(1.0)),q.w*t.w);x=vec4(max(v-vec3(1.0),vec3(0.0)),0.0);}vec4 y(in vec3 z,in float A,in vec2 B,in vec2 C,in vec2 m,in vec2 D,in float E,in float F,in vec2 G,in vec2 H,in float I,in float J){vec2 K=e(F);vec2 L=(m-vec2(0.5))*D;L-=K;L*=A;L*=a(E);L+=B;L+=H;L.x+=D.x*I;L*=G;L+=z.xy;L+=C*J;return vec4(L,z.z,1.0);}vec4 M(in vec3 z,in float A,in vec2 B,in vec2 C,in vec2 m,in vec2 D,in float E,in float F,in vec2 G,in float N,in float O,in vec2 H,in float I,in float J){vec2 K=e(F);vec2 L=(m-vec2(0.5))*D;L-=K;L*=A;L*=a(E);L+=B;L+=H;L.x+=D.x*I;L*=G;L.x+=L.y*O;L*=a(N);L+=z.xy;L+=C*J;return vec4(L,z.z,1.0);}void main(){vec2 m=g(vertexIndex);i(uvSize,uv0,m,vUV);w(color,uColor,vColor,vBColor);vec4 P=y(position,size,offset,displacement,m,n(uvSize,uTextureSize),0.0,pivot,uSize,uOffset,uAlignDisplacement.x,uAlignDisplacement.y);vPulse=rotation;gl_Position=projectionMatrix*modelViewMatrix*P;}",fragmentShader:"precision highp float;uniform sampler2D texture;uniform float uTime;uniform float uPulse;varying vec2 vUV;varying vec4 vColor;varying vec4 vBColor;varying float vPulse;vec4 a(vec4 b,vec4 c,float d){float e=abs(sin(0.002*d));return vec4(mix(b.rgb,c.rgb,e),b.a);}void main(){vec4 f=texture2D(texture,vUV);if(f.w<0.2){discard;}vec4 b=vColor*f;vec4 c=clamp(b+vec4(0.2)*vPulse,vec4(0.0),vec4(1.0));vec4 g=a(b,c,uTime);gl_FragColor=g+vBColor;}",defines:n})}static releaseShared(){this.context.reset()}}const S=16383;class y{isRenderSystem=!0;$name="system";resolution=4;uvResolution=64;_verticalScale=1;uniforms={texture:{value:null}};material=null;geometries=[];meshes=[];scene=null;renderOrder=0;count=0;_enabled=!0;_visible=!0;constructor(e){this.maxCircles=e}get verticalScale(){return this._verticalScale}set verticalScale(e){this._verticalScale=e}get enabled(){return this._enabled}set enabled(e){const t=e&&this.visible;this.meshes.forEach((e=>e.visible=t)),this._enabled=e}get visible(){return this._visible}set visible(e){const t=e&&this.enabled;this.meshes.forEach((e=>e.visible=t)),this._visible=e}init(e){const{scene:t,texture:i,materialParameters:n,renderOrder:r=0,resolution:a=4,uvResolution:s=64,verticalScale:c=1}=e;if(!t)throw new d("scene");if(!i)throw new d("texture");this.scene=t,this.renderOrder=r,this.resolution=a,this.uvResolution=s,this.verticalScale=c;const h=y.context.deref().vertexBufferLib.getBuffer("1x1Index"),u=new l.ww([["position",Float32Array,2],["uv",Uint16Array,2,!0],["color",Uint8Array,4,!0]]);let f=this.maxCircles;for(;f>0;){const e=Math.min(S,f);f-=e;const t=4*e,i=u.createGeometry(t,{usage:o.dj0});i.setIndex(h),(0,l.Ae)(i),i.setDrawRange(0,0),this.geometries.push(i)}return this.createMesh(i,n),this}static get sharedVertexBuffers(){const{vertexBufferLib:e}=y.context.deref();return[e.getBuffer("1x1Index")]}get vertexBuffers(){const e=y.sharedVertexBuffers;return this.geometries.flatMap((t=>(0,l.yr)(t,(t=>e.includes(t)))))}get textures(){return[this.uniforms.texture.value].filter(Boolean)}get batchCount(){return this.geometries.length}createMesh(e,t){(0,l.N6)(e,{wrapS:o.rpg,wrapT:o.rpg}),this.uniforms.texture.value=e;const i=y.context.deref().shaderLib.getProgram("circle");this.material=new a.F({uniforms:this.uniforms,...i,blending:o.bdR,depthTest:!1,transparent:!0,...t});for(const r of this.geometries){var n;const e=new s.K(r,this.material);this.meshes.push(e),e.renderOrder=this.renderOrder,null===(n=this.scene)||void 0===n||n.add(e)}}begin(){for(const e of this.geometries)e.setDrawRange(0,0);this.count=0}circle(e,t,i,n){const r=Math.floor(2*Math.PI*t/this.resolution),o=Math.floor(2*Math.PI*(t+this.uvResolution)/this.uvResolution);n=new l.Zm(n).multiplyScalar(255);for(let a=0;a<r;++a){const s=this.geometries[Math.floor(this.count/S)];if(!s||this.count>=this.maxCircles){const{onError:e}=y.context.deref();e(new h("Circle system",this.maxCircles));break}const c=this.count%S*4,d=l.e3.create(s,"position",c),u=l.e3.create(s,"uv",c),f=l.e3.create(s,"color",c);for(let l=0;l<4;++l){const s=(a+(1&l))/r,c=s*Math.PI*2,h=t-((2&l)-.2)*i*.5,m=e.x+Math.cos(c)*h,g=e.y+Math.sin(c)*h*this._verticalScale,p=o*s,v=.5*(2&l);d.setXY(m,g).next(),u.setXY(65535*p,65535*(1-v)).next(),f.setVec4(n).next()}this.count++}}end(){let e=this.count;for(const t of this.geometries){if(0===e)break;const i=Math.min(S,e);e-=i,t.setDrawRange(0,2*i*3),t.getAttribute("position").needsUpdate=!0,t.getAttribute("uv").needsUpdate=!0,t.getAttribute("color").needsUpdate=!0}}dispose(){var e;if(this.scene){const{scene:e}=this;this.meshes.forEach((t=>e.remove(t))),this.scene=null}this.meshes=[],this.material=null,null===(e=this.uniforms.texture.value)||void 0===e||e.dispose(),this.uniforms.texture.value=null,this.geometries.forEach((e=>e.dispose())),this.geometries.length=0,this.count=0}static context=new l.gJ;static initShared(e,t){this.context.reset(e);const{shaderLib:i}=e,{defines:n}=t;i.addProgram("circle",{vertexShader:"precision highp float;uniform mat4 modelViewMatrix;uniform mat4 projectionMatrix;attribute vec2 position;attribute vec2 uv;attribute vec4 color;varying vec2 vUV;varying vec4 vColor;void main(){vUV=uv;vColor=color;vec4 a=modelViewMatrix*vec4(position,0.0,1.0);gl_Position=projectionMatrix*a;}",fragmentShader:"precision highp float;uniform sampler2D texture;varying vec2 vUV;varying vec4 vColor;void main(){gl_FragColor=texture2D(texture,vUV)*vColor;}",defines:n})}static releaseShared(){this.context.reset()}}var _=i(67585),w=i(84232);const b=16383;class C{isRenderSystem=!0;$name="system";_color=new l.Zm("#ffffffff");_uniformScale=1;_verticalScale=1;material=null;geometries=[];meshes=[];scene=null;renderOrder=0;_enabled=!0;_visible=!0;constructor(e){this.maxCloudQuads=e,this.maxGeometries=Math.floor((e+b-1)/b),this.uniforms={uColor:{value:this._color},uSize:{value:new n.F(1,1)},uCenter:{value:new n.F(0,0)},uResolution:{value:new n.F(2,4)},uMapSize:{value:new n.F(1e3,1e3)},uTime:{value:0},uContinuous:{value:0},sClouds:{value:null}}}init(e){const{scene:t,texture:i,materialParameters:n,renderOrder:r=0}=e;this.scene=t,this.renderOrder=r,i.generateMipmaps=!0,i.magFilter=o.wem,i.minFilter=o.FDw,i.wrapS=o.rpg,i.wrapT=o.rpg,i.needsUpdate=!0,this.uniforms.sClouds.value=i,this.createGeometry(),this.createMaterialAndMesh(n)}get color(){return this._color}set color(e){this._color.set(e)}get alpha(){return this._color.a}set alpha(e){this._color.a=e}get uniformScale(){return this._uniformScale}set uniformScale(e){this._uniformScale=e,this.updateSizeUniform()}get verticalScale(){return this._verticalScale}set verticalScale(e){this._verticalScale=e,this.updateSizeUniform()}get center(){return this.uniforms.uCenter.value}set center(e){this.uniforms.uCenter.value.copy(e)}get time(){return this.uniforms.uTime.value}set time(e){this.uniforms.uTime.value=e}get continuous(){return this.uniforms.uContinuous.value}set continuous(e){this.uniforms.uContinuous.value=e}get mapSize(){return this.uniforms.uMapSize.value}set mapSize(e){this.uniforms.uMapSize.value.copy(e)}get enabled(){return this._enabled}set enabled(e){const t=e&&this.visible;this.meshes.forEach((e=>e.visible=t)),this._enabled=e}get visible(){return this._visible}set visible(e){const t=e&&this.enabled;this.meshes.forEach((e=>e.visible=t)),this._visible=e}get textures(){return[this.uniforms.sClouds.value].filter(Boolean)}get batchCount(){return this.geometries.length}updateSizeUniform(){this.uniforms.uSize.value.set(this._uniformScale,this._uniformScale/this._verticalScale)}createGeometry(){let e=0;for(let t=0;t<this.maxGeometries;++t){const i=new _.u;this.geometries[t]=i;const n=t===this.maxGeometries-1&&this.maxCloudQuads!==b?this.maxCloudQuads%b:b,r=new Float32Array(4*n*4),o=new Uint16Array(2*n*3);let a=0;for(let t=0;t<n;++t){const i=Math.random(),n=Math.random(),s=e/this.maxCloudQuads;for(let o=0;o<4;++o)r[e++]=i,r[e++]=n,r[e++]=s,r[e++]=4*t+o;const l=4*t;o[a++]=l+0,o[a++]=l+2,o[a++]=l+1,o[a++]=l+1,o[a++]=l+2,o[a++]=l+3}++e,i.setIndex(new w.Tl(o,1).onUpload(l._c)),i.setAttribute("position",new w.Tl(r,4).onUpload(l._c)),(0,l.Ae)(i),i.setDrawRange(0,2*n*3)}}createMaterialAndMesh(e){const t=C.context.deref().shaderLib.getProgram("cloud");this.material=new a.F({uniforms:this.uniforms,...t,blending:o.bdR,depthTest:!1,transparent:!0,...e});for(let i=0;i<this.maxGeometries;++i){const e=new s.K(this.geometries[i],this.material);this.meshes[i]=e,e.renderOrder=this.renderOrder,this.scene&&this.scene.add(e)}}dispose(){var e;if(this.scene){const{scene:e}=this;this.meshes.forEach((t=>e.remove(t))),this.scene=null}this.meshes=[],this.material=null,null===(e=this.uniforms.sClouds.value)||void 0===e||e.dispose(),this.uniforms.sClouds.value=null,this.geometries.forEach((e=>e.dispose())),this.geometries.length=0}static context=new l.gJ;static initShared(e,t){this.context.reset(e);const{shaderLib:i}=e,{defines:n}=t;i.addProgram("cloud",{vertexShader:"precision highp float;uniform mat4 modelViewMatrix;uniform mat4 projectionMatrix;uniform vec4 uColor;uniform vec2 uSize;uniform vec2 uCenter;uniform vec2 uResolution;uniform float uTime;uniform float uContinuous;uniform vec2 uMapSize;attribute vec4 position;varying vec2 vUV;varying vec4 vColor;void main(){vec2 a=vec2(mod(position.w,2.0),mod(floor(position.w/2.0),2.0));vUV=(floor(mod(position.yz*12.137,uResolution))+vec2(a.x,1.0-a.y))/uResolution;float b=clamp(400.0/(0.8+uSize.x*0.5),100.0,500.0);float c=1.5+position.z;float d=min((b+c*b)*uSize.x,300.0)/clamp(uSize.x,0.5,10.0);vec2 e=a-0.5;e.x*=2.0;vec2 f=vec2(15000.0,10000.0);vec2 g=f*0.5;vec2 h=vec2(uTime*10.0*c,0.0);vec2 i=vec2(modelViewMatrix[3][0],modelViewMatrix[3][1]);vec2 j=i-uCenter;vec2 k=position.xy*f+h+j*c*0.05+i;vec2 l=mod(k,f);mat4 m=modelViewMatrix;m[3][0]=-f.x*0.1;m[3][1]=-f.y*0.1;vec4 n=vec4(l+e*d,0.0,1.0);vec4 o=m*n;gl_Position=projectionMatrix*o;float p=3.1416*0.5;vec2 q=clamp(gl_Position.xy,-1.0,1.0);float r=(1.0-cos(q.x*p))*(1.0-cos(q.y*p));float s=clamp(pow(r,3.0)-0.1,0.0,0.4);float t=uSize.x*140.0;float u=(1.0-uContinuous);s*=clamp(abs(gl_Position.y)-0.5,0.1,1.0);s+=clamp(1.0-(n.x-i.x+m[3][0]+10000.0-t)*0.0001,0.0,u);s+=clamp(1.0-(n.y-i.y+m[3][1]+5100.0-t)*0.0002,0.0,1.0);s+=clamp((n.x-i.x-uMapSize.x+m[3][0]+500.0+t)*0.0001,0.0,u);s+=clamp((n.y-i.y-uMapSize.y+m[3][1]+500.0+t)*0.0002,0.0,1.0);vColor=vec4(vec3(1.0),s);}",fragmentShader:"precision highp float;uniform sampler2D sClouds;varying vec2 vUV;varying vec4 vColor;void main(){gl_FragColor=texture2D(sClouds,vUV)*vColor;}",defines:n})}static releaseShared(){this.context.reset()}}const P=16383;class M{isRenderSystem=!0;$name="system";_color=new l.Zm("#7f00ff");_uniformScale=1;_verticalScale=1;material=null;geometries=[];meshes=[];scene=null;renderOrder=0;count=0;_enabled=!0;_visible=!0;constructor(e){this.maxRects=e,this.uniforms={uColor:{value:this._color},uSize:{value:new n.F(1,1)},uDisplacement:{value:1}},this.updateSizeUniform()}init(e){const{scene:t,materialParameters:i,renderOrder:n=0}=e;if(!t)throw new d("scene");return this.scene=t,this.renderOrder=n,this.createGeometry(),this.createMaterialAndMesh(i),this.color.set(e.color??this.color),this.uniformScale=e.uniformScale??this.uniformScale,this.verticalScale=e.verticalScale??this.verticalScale,this}get color(){return this._color}set color(e){this._color.set(e)}get alpha(){return this._color.a}set alpha(e){this._color.a=e}get uniformScale(){return this._uniformScale}set uniformScale(e){this._uniformScale=e,this.updateSizeUniform()}get verticalScale(){return this._verticalScale}set verticalScale(e){this._verticalScale=e,this.updateSizeUniform()}get displacement(){return this.uniforms.uDisplacement.value}set displacement(e){this.uniforms.uDisplacement.value=e}get enabled(){return this._enabled}set enabled(e){const t=e&&this.visible;this.meshes.forEach((e=>e.visible=t)),this._enabled=e}get visible(){return this._visible}set visible(e){const t=e&&this.enabled;this.meshes.forEach((e=>e.visible=t)),this._visible=e}get batchCount(){return this.geometries.length}updateSizeUniform(){this.uniforms.uSize.value.set(this._uniformScale,this._uniformScale/this._verticalScale)}createGeometry(){const e=new l.ww([["rectPosition",Float32Array,2],["rectSize",Uint16Array,2],["position",Float32Array,2],["displacement",Float32Array,2],["color",Uint8Array,4,!0]]);let t=this.maxRects;for(;t>0;){const i=Math.min(P,t);t-=i;const n=4*i,r=new Float32Array(n),a=new Uint16Array(2*i*3);let s=0,c=0;for(let e=0;e<i;++e){for(let e=0;e<4;++e)r[s++]=e;const t=4*e;a[c++]=t+0,a[c++]=t+2,a[c++]=t+1,a[c++]=t+1,a[c++]=t+2,a[c++]=t+3}const h=e.createGeometry(n,{usage:o.dj0});h.setAttribute("vertexIndex",new w.Tl(r,1).onUpload(l._c)),h.setIndex(new w.Tl(a,1).onUpload(l._c)),(0,l.Ae)(h),h.setDrawRange(0,0),this.geometries.push(h)}}createMaterialAndMesh(e){const t=M.context.deref().shaderLib.getProgram("colorRect");this.material=new a.F({uniforms:this.uniforms,...t,blending:o.bdR,depthTest:!1,transparent:!0,...e});for(const n of this.geometries){var i;const e=new s.K(n,this.material);this.meshes.push(e),e.renderOrder=this.renderOrder,null===(i=this.scene)||void 0===i||i.add(e)}}begin(){for(const e of this.geometries)e.setDrawRange(0,0);this.count=0}rect(e,t,i,n){const r=this.geometries[Math.floor(this.count/P)];if(!r||this.count>=this.maxRects){const{onError:e}=M.context.deref();return void e(new h("Color rect system",this.maxRects))}const o=this.count%P*4,a=l.e3.create(r,"rectPosition",o),s=l.e3.create(r,"rectSize",o),c=l.e3.create(r,"position",o),d=l.e3.create(r,"displacement",o),u=l.e3.create(r,"color",o);t=new l.Zm(t).multiplyScalar(255);for(let l=0;l<4;++l)a.setXY(e.x,e.y).next(),s.setXY(e.width,e.height).next(),c.setVec2(i).next(),d.setVec2(n).next(),u.setVec4(t).next();this.count++}end(){let e=this.count;for(const t of this.geometries){if(0===e)break;const i=Math.min(P,e);e-=i,t.setDrawRange(0,2*i*3),t.getAttribute("rectPosition").needsUpdate=!0,t.getAttribute("rectSize").needsUpdate=!0,t.getAttribute("position").needsUpdate=!0,t.getAttribute("displacement").needsUpdate=!0,t.getAttribute("color").needsUpdate=!0}}dispose(){if(this.scene){const{scene:e}=this;this.meshes.forEach((t=>e.remove(t))),this.scene=null}this.meshes=[],this.material=null,this.geometries.forEach((e=>e.dispose())),this.geometries.length=0,this.count=0}static context=new l.gJ;static initShared(e,t){this.context.reset(e);const{shaderLib:i}=e,{defines:n}=t;i.addProgram("colorRect",{vertexShader:"precision highp float;uniform mat4 modelViewMatrix;uniform mat4 projectionMatrix;uniform vec4 uColor;uniform vec2 uSize;uniform float uDisplacement;attribute vec2 rectPosition;attribute vec2 rectSize;attribute vec2 position;attribute vec2 displacement;attribute vec4 color;attribute float vertexIndex;varying vec4 vColor;void main(){vec2 a=vec2(mod(vertexIndex,2.0),floor(vertexIndex/2.0));vColor=color*uColor;vec4 b=vec4((rectPosition+a*rectSize)*uSize+position+displacement*uDisplacement,0.0,1.0);gl_Position=projectionMatrix*(modelViewMatrix*b);}",fragmentShader:"precision highp float;varying vec4 vColor;void main(){gl_FragColor=vColor;}",defines:n})}static releaseShared(){this.context.reset()}}var A=i(42342);const T=16383;class L{isRenderSystem=!0;$name="system";_color=new l.Zm(1,1,1,1);material=null;geometries=[];meshes=[];scene=null;renderOrder=0;minLength=.01;count=0;_enabled=!0;_visible=!0;constructor(e){this.maxConnections=e,this.uniforms={texture:{value:null},size:{value:1},repeat:{value:1},typeCount:{value:0},color:{value:this._color}}}init(e){const{scene:t,materialParameters:i,renderOrder:n,addAlpha:r=!1,minLength:o}=e;if(!t)throw new d("scene");return this.scene=t,void 0!==n&&(this.renderOrder=n),void 0!==o&&o>=0&&(this.minLength=o),this.createGeometry(),this.createTexture(e),this.createMaterialAndMesh(r,i),this}get color(){return this._color}set color(e){this._color.set(e)}get alpha(){return this._color.a}set alpha(e){this._color.a=e}get uniformScale(){return this.uniforms.size.value}set uniformScale(e){this.uniforms.size.value=e}get repeat(){return this.uniforms.repeat.value}set repeat(e){this.uniforms.repeat.value=e}get typeCount(){return this.uniforms.typeCount.value}get enabled(){return this._enabled}set enabled(e){const t=e&&this.visible;this.meshes.forEach((e=>e.visible=t)),this._enabled=e}get visible(){return this._visible}set visible(e){const t=e&&this.enabled;this.meshes.forEach((e=>e.visible=t)),this._visible=e}get texture(){return this.uniforms.texture.value}static get sharedVertexBuffers(){const{vertexBufferLib:e}=L.context.deref();return[e.getBuffer("1x1Uv"),e.getBuffer("1x1Index")]}get vertexBuffers(){const e=L.sharedVertexBuffers;return this.geometries.flatMap((t=>(0,l.yr)(t,(t=>e.includes(t)))))}get textures(){return[this.uniforms.texture.value].filter(Boolean)}get batchCount(){return this.geometries.length}createGeometry(){const{vertexBufferLib:e}=L.context.deref(),t=e.getBuffer("1x1Index"),i=e.getBuffer("1x1Uv"),n=new l.ww([["position",Uint16Array,2],["lengthType",Uint16Array,2],["normal",Int16Array,2,!0]]);let r=this.maxConnections;for(;r>0;){const e=Math.min(T,r);r-=e;const a=4*e,s=n.createGeometry(a,{usage:o.dj0});s.setIndex(t),s.setAttribute("uv",i),(0,l.Ae)(s),s.setDrawRange(0,0),this.geometries.push(s)}}createMaterialAndMesh(e,t){const i="connection."+(e?"addAlpha":"default"),n=L.context.deref().shaderLib.getProgram(i);this.material=new a.F({uniforms:this.uniforms,...n,blending:o.bdR,depthTest:!1,depthWrite:!1,transparent:!0,...t});for(const o of this.geometries){var r;const e=new s.K(o,this.material);this.meshes.push(e),e.renderOrder=this.renderOrder,null===(r=this.scene)||void 0===r||r.add(e)}}createTexture(e){const{kinds:t=[]}=e;let{texture:i}=e;if(!(i instanceof A.x)){const{textureWidth:n=32,textureHeight:r=32}=e,a=document.createElement("canvas");a.width=n,a.height=r;const s=a.getContext("2d"),l=n/t.length;for(const[e,i]of t.entries()){const t=e*l,{alpha:n=1,image:o}=i;if(o&&o.width>0&&o.height>0){const e=Math.min(o.width,l);s.globalAlpha=n,s.drawImage(o,t+(l-e)/2,0,e,r)}else{const{color:e="#000",width:o=1}=i;s.strokeStyle=e,s.globalAlpha=n,s.lineWidth=o,s.beginPath(),s.moveTo(t+l/2,0),s.lineTo(t+l/2,r),s.stroke()}}i=new A.x(a),i.generateMipmaps=!1,i.magFilter=o.wem,i.minFilter=o.wem,i.wrapS=o.rpg,i.wrapT=o.rpg,i.needsUpdate=!0}this.uniforms.typeCount.value=t.length,this.uniforms.texture.value=i}begin(){for(const e of this.geometries)e.setDrawRange(0,0);this.count=0}connection(e,t,i,n,r){if("object"==typeof e&&"object"==typeof t?(r=i,n=t.y,i=t.x,t=e.y,e=e.x):(e=e,t=t,i=i,n=n),r??(r=0),r<0&&r>=this.typeCount){const{onError:e}=L.context.deref();return void e(new c("Kind index out of bounds."))}const o=this.geometries[Math.floor(this.count/T)];if(!o||this.count>=this.maxConnections){const{onError:e}=L.context.deref();return void e(new h("Connection system",this.maxConnections))}const a=this.count%T*4,s=l.e3.create(o,"position",a),d=l.e3.create(o,"lengthType",a),u=l.e3.create(o,"normal",a),f=i-e,m=n-t,g=(0,l.zj)(f,m);if(g<this.minLength)return;const[p,v]=(0,l.kn)(f/g,m/g);s.setXY(e,t).next(),d.setXY(g,r).next(),u.setXY((0,l.Mg)(p),(0,l.Mg)(v)).next(),s.setXY(e,t).next(),d.setXY(g,r).next(),u.setXY((0,l.Mg)(-p),(0,l.Mg)(-v)).next(),s.setXY(i,n).next(),d.setXY(g,r).next(),u.setXY((0,l.Mg)(p),(0,l.Mg)(v)).next(),s.setXY(i,n).next(),d.setXY(g,r).next(),u.setXY((0,l.Mg)(-p),(0,l.Mg)(-v)).next(),this.count++}end(){let e=this.count;for(const t of this.geometries){if(0===e)break;const i=Math.min(T,e);e-=i,t.setDrawRange(0,2*i*3),t.getAttribute("position").needsUpdate=!0,t.getAttribute("lengthType").needsUpdate=!0,t.getAttribute("normal").needsUpdate=!0}}dispose(){var e;if(this.scene){const{scene:e}=this;this.meshes.forEach((t=>e.remove(t))),this.scene=null}this.meshes=[],this.material=null,null===(e=this.uniforms.texture.value)||void 0===e||e.dispose(),this.uniforms.texture.value=null,this.geometries.forEach((e=>e.dispose())),this.geometries.length=0,this.count=0}static context=new l.gJ;static initShared(e,t){this.context.reset(e);const{shaderLib:i}=e,{defines:n}=t;i.addSource("vertex","connection.default","precision highp float;uniform mat4 modelViewMatrix;uniform mat4 projectionMatrix;uniform float size;uniform float repeat;uniform float typeCount;attribute vec2 position;attribute vec2 lengthType;attribute vec2 normal;attribute vec2 uv;varying vec2 vUV;void main(){vUV=uv;vUV.x=(vUV.x+lengthType.y)/typeCount;vUV.y*=lengthType.x*repeat;vec4 a=vec4(position.xy+normal*size,0.0,1.0);vec4 b=modelViewMatrix*a;gl_Position=projectionMatrix*b;}"),i.addProgram("connection.default",{vertexName:"connection.default",fragmentShader:"precision highp float;uniform sampler2D texture;uniform vec4 color;varying vec2 vUV;void main(){gl_FragColor=color*texture2D(texture,vUV);}",defines:n}),i.addProgram("connection.addAlpha",{vertexName:"connection.default",fragmentShader:"precision highp float;uniform sampler2D texture;uniform vec4 color;varying vec2 vUV;void main(){vec4 a=texture2D(texture,vUV);gl_FragColor=vec4(vec3(0.0),a.x*color.w);}",defines:n})}static releaseShared(){this.context.reset()}}const D=16383;class I{isRenderSystem=!0;$name="system";imageFont=null;filter=!1;_color=new l.Zm("#00ffffff");_rotationSkew=new n.F(0,0);material=null;geometries=[];meshes=[];scene=null;renderOrder=0;count=0;_enabled=!0;_visible=!0;constructor(e){this.maxDigits=e,this.uniforms={globalColor:{value:this._color},uRotationSkew:{value:this._rotationSkew},globalOffset:{value:new n.F(0,0)},screenScale:{value:1},verticalScale:{value:1},globalDisplacement:{value:1},texture:{value:null},textureSize:{value:new n.F},digitPosition:{type:"fv1",value:[]},digitWidth:{type:"fv1",value:[]},digitHeight:{value:0}}}init(e){const{scene:t,imageFont:i,filter:n=!1,materialParameters:r,renderOrder:o=0}=e;if(!t)throw new d("scene");if(!i||!i.chars||!i.texture)throw new d("image font");return this.scene=t,this.imageFont=i,this.filter=n,this.renderOrder=o,this.createGeometry(),this.createMaterialAndMesh(r),this.color.set(e.color??this.color),this.uniformScale=e.uniformScale??this.uniformScale,this.verticalScale=e.verticalScale??this.verticalScale,this.rotation=e.rotation??this.rotation,this.skew=e.skew??this.skew,this}get color(){return this._color}set color(e){this._color.set(e)}get alpha(){return this._color.a}set alpha(e){this._color.a=e}get offset(){return this.uniforms.globalOffset.value}set offset(e){this.uniforms.globalOffset.value.copy(e)}get uniformScale(){return this.screenScale}set uniformScale(e){this.screenScale=e}get screenScale(){return this.uniforms.screenScale.value}set screenScale(e){this.uniforms.screenScale.value=e}get verticalScale(){return this.uniforms.verticalScale.value}set verticalScale(e){this.uniforms.verticalScale.value=e}get displacement(){return this.uniforms.globalDisplacement.value}set displacement(e){this.uniforms.globalDisplacement.value=e}get rotation(){return this._rotationSkew.x}set rotation(e){this._rotationSkew.x=e}get skew(){return this._rotationSkew.y}set skew(e){this._rotationSkew.y=e}get enabled(){return this._enabled}set enabled(e){const t=e&&this.visible;this.meshes.forEach((e=>e.visible=t)),this._enabled=e}get visible(){return this._visible}set visible(e){const t=e&&this.enabled;this.meshes.forEach((e=>e.visible=t)),this._visible=e}static get sharedVertexBuffers(){const{vertexBufferLib:e}=I.context.deref();return[e.getBuffer("1x1Uv"),e.getBuffer("1x1Index")]}get vertexBuffers(){const e=I.sharedVertexBuffers;return this.geometries.flatMap((t=>(0,l.yr)(t,(t=>e.includes(t)))))}get textures(){return[this.uniforms.texture.value].filter(Boolean)}get batchCount(){return this.geometries.length}createGeometry(){const{vertexBufferLib:e}=I.context.deref(),t=e.getBuffer("1x1Index"),i=e.getBuffer("1x1Uv"),n=[["position",Float32Array,3],["offset",Float32Array,1],["displacement",Float32Array,2],["color",Uint8Array,4,!0],["digit",Float32Array,1]],r=new l.ww(n);let a=this.maxDigits;for(;a>0;){const e=Math.min(D,a);a-=e;const n=4*e,s=r.createGeometry(n,{usage:o.dj0});s.setAttribute("uv",i),s.setIndex(t),(0,l.Ae)(s),s.setDrawRange(0,0),this.geometries.push(s)}}createMaterialAndMesh(e){if(!this.imageFont)return;const{chars:t}=this.imageFont,i=this.uniforms.digitPosition.value,n=this.uniforms.digitWidth.value;this.uniforms.digitHeight.value=this.imageFont.height,["0","1","2","3","4","5","6","7","8","9","?"].forEach((e=>{const r=t[e];if(r)i.push(r.posX),n.push(r.w);else{const{onError:e}=I.context.deref();e(new c(`DigitSystem - Character '${r}' missing in image font`))}}));const r=I.context.deref().shaderLib.getProgram("digit"),l=new a.F({uniforms:this.uniforms,...r,blending:o.bdR,depthTest:!1,depthWrite:!1,transparent:!0,...e});this.material=l;const{texture:h}=this.imageFont;this.uniforms.texture.value=h;const d=this.uniforms.textureSize.value;d.width=h.image.width,d.height=h.image.height,this.filter?(h.magFilter=o.wem,h.minFilter=o.wem,h.anisotropy=2,d.multiplyScalar(.5)):(h.magFilter=o.TyD,h.minFilter=o.TyD),h.generateMipmaps=!1,h.needsUpdate=!0;for(const o of this.geometries){var u;const e=new s.K(o,this.material);this.meshes.push(e),e.renderOrder=this.renderOrder,null===(u=this.scene)||void 0===u||u.add(e)}}begin(){for(const e of this.geometries)e.setDrawRange(0,0);this.count=0}digit(e,t,i,n){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:new l.Zm(1,1,1,1);const o=this.geometries[Math.floor(this.count/D)];if(!o||this.count>=this.maxDigits){const{onError:e}=I.context.deref();return void e(new h("Digit system",this.maxDigits))}r=new l.Zm(r).multiplyScalar(255);const a=this.count%D*4,s=l.e3.create(o,"position",a),c=l.e3.create(o,"offset",a),d=l.e3.create(o,"displacement",a),u=l.e3.create(o,"color",a),f=l.e3.create(o,"digit",a);for(let h=0;h<4;++h)s.setXYZ(e.x,e.y,e.z??0).next(),c.setX((0,l.Db)(128,t.x,t.y)).next(),d.setVec2(i).next(),u.setVec4(r).next(),f.setX(n).next();++this.count}numberLeftAligned(e,t,i,r,o){if(!this.imageFont)return;r=Math.floor(r);const{overlap:a}=this.imageFont;if(r<0)this.digit(e,t,i,10);else{const s=this.uniforms.digitWidth.value;let l;const c=[];t=new n.F(t.x,t.y);do{c.push(r%10),r=Math.floor(r/10)}while(r>0);for(let n=c.length-1;n>=0;--n)l=c[n],this.digit(e,t,i,l,o),t.x+=s[l]-a}}numberRightAligned(e,t,i,r,o){if(!this.imageFont)return;r=Math.floor(r);const{overlap:a}=this.imageFont,s=this.uniforms.digitWidth.value;let l;if(t=new n.F(t.x+a,t.y),r<0)l=10,t.x-=s[l],this.digit(e,t,i,l,o);else do{l=r%10,t.x-=s[l]+a,this.digit(e,t,i,l,o),r=Math.floor(r/10)}while(r>0)}number(){this.numberRightAligned(...arguments)}end(){let e=this.count;for(const t of this.geometries){if(0===e)break;const i=Math.min(D,e);e-=i,t.setDrawRange(0,2*i*3),t.getAttribute("position").needsUpdate=!0,t.getAttribute("offset").needsUpdate=!0,t.getAttribute("displacement").needsUpdate=!0,t.getAttribute("color").needsUpdate=!0,t.getAttribute("digit").needsUpdate=!0}}dispose(){var e;if(this.scene){const{scene:e}=this;this.meshes.forEach((t=>e.remove(t))),this.scene=null}this.meshes=[],this.material=null,null===(e=this.uniforms.texture.value)||void 0===e||e.dispose(),this.uniforms.texture.value=null,this.geometries.forEach((e=>e.dispose())),this.geometries.length=0,this.count=0}static context=new l.gJ;static initShared(e,t){this.context.reset(e);const{shaderLib:i}=e,{defines:n}=t;i.addProgram("digit",{vertexShader:"precision highp float;uniform mat4 modelViewMatrix;uniform mat4 projectionMatrix;uniform vec2 globalOffset;uniform float screenScale;uniform float verticalScale;uniform float globalDisplacement;uniform vec2 textureSize;uniform float digitPosition[11];uniform float digitWidth[11];uniform float digitHeight;attribute vec3 position;attribute float offset;attribute vec2 displacement;attribute vec4 color;attribute float digit;attribute vec2 uv;varying vec2 vUV;varying vec4 vColor;mat2 a(float b){float c=cos(b);float d=sin(b);return mat2(c,d,-d,c);}void main(){int e=int(digit+0.5);vUV=vec2((digitPosition[e]+uv.x*digitWidth[e])/textureSize.x,1.0-uv.y*digitHeight/textureSize.y);vColor=color;vec2 f=(uv-0.5)*vec2(digitWidth[e],digitHeight/verticalScale)/screenScale;vec2 g=vec2(mod(offset,256.0)-128.0,floor(offset/256.0)-128.0);vec2 h=(g+globalOffset-vec2(0.0,digitHeight*0.5))/screenScale;h+=f;h+=position.xy;h+=displacement*globalDisplacement;gl_Position=projectionMatrix*(modelViewMatrix*vec4(h,position.z,1.0));}",fragmentShader:"precision highp float;uniform sampler2D texture;uniform vec4 globalColor;varying vec2 vUV;varying vec4 vColor;void main(){vec4 a=globalColor*vColor*texture2D(texture,vUV);gl_FragColor=a;}",defines:n})}static releaseShared(){this.context.reset()}}const E=16383;class R{isRenderSystem=!0;$name="system";_color=new l.Zm("#ff447f");material=null;geometries=[];meshes=[];scene=null;renderOrder=0;count=0;_enabled=!0;_visible=!0;constructor(e){this.maxQuads=e,this.uniforms={uSize:{value:10},uColor:{value:this._color}}}init(e){const{scene:t,materialParameters:i,renderOrder:n=0}=e;if(!t)throw new d("scene");this.scene=t,this.renderOrder=n;let r=this.maxQuads;for(;r>0;){const e=Math.min(E,r);r-=e;const t=new _.u;this.geometries.push(t);const i=new Uint16Array(2*e*3),n=new Float32Array(4*e*2),a=new Uint8Array(4*e*4);t.setIndex(new w.Tl(i,1).setUsage(o.dj0)),t.setAttribute("position",new w.Tl(n,2).setUsage(o.dj0)),t.setAttribute("colorAlpha",new w.Tl(a,4,!0).setUsage(o.dj0)),(0,l.Ae)(t),t.setDrawRange(0,0)}return this.createMaterialAndMesh(i),this.color.set(e.color??this.color),this}get color(){return this._color}set color(e){this._color.set(e)}get alpha(){return this._color.a}set alpha(e){this._color.a=e}get uniformScale(){return this.uniforms.uSize.value}set uniformScale(e){this.uniforms.uSize.value=e}get enabled(){return this._enabled}set enabled(e){const t=e&&this.visible;this.meshes.forEach((e=>e.visible=t)),this._enabled=e}get visible(){return this._visible}set visible(e){const t=e&&this.enabled;this.meshes.forEach((e=>e.visible=t)),this._visible=e}get batchCount(){return this.geometries.length}createMaterialAndMesh(e){const t=R.context.deref().shaderLib.getProgram("geometry");this.material=new a.F({uniforms:this.uniforms,...t,blending:o.bdR,depthTest:!1,transparent:!0,side:o.ehD,...e});for(const n of this.geometries){var i;const e=new s.K(n,this.material);this.meshes.push(e),e.renderOrder=this.renderOrder,null===(i=this.scene)||void 0===i||i.add(e)}}begin(){for(const e of this.geometries)e.setDrawRange(0,0);this.count=0}quad(e,t,i,n,r){const o=this.geometries[Math.floor(this.count/E)];if(!o||this.count>=this.maxQuads){const{onError:e}=R.context.deref();return void e(new h("Geometry system",this.maxQuads))}const a=o.getAttribute("position").array,s=o.getAttribute("colorAlpha").array,c=o.getIndex().array,d=this.count%E*4;let u=2*d,f=4*d;r=new l.Zm(r).multiplyScalar(255),a[u+0]=e.x,a[u+1]=e.y,s[f+0]=r.r,s[f+1]=r.g,s[f+2]=r.b,s[f+3]=r.a,u+=2,f+=4,a[u+0]=t.x,a[u+1]=t.y,s[f+0]=r.r,s[f+1]=r.g,s[f+2]=r.b,s[f+3]=r.a,u+=2,f+=4,a[u+0]=i.x,a[u+1]=i.y,s[f+0]=r.r,s[f+1]=r.g,s[f+2]=r.b,s[f+3]=r.a,u+=2,f+=4,a[u+0]=n.x,a[u+1]=n.y,s[f+0]=r.r,s[f+1]=r.g,s[f+2]=r.b,s[f+3]=r.a,u=this.count%E*2*3,c[u++]=d+0,c[u++]=d+1,c[u++]=d+2,c[u++]=d+3,c[u++]=d+2,c[u++]=d+1,++this.count}end(){let e=this.count;for(const t of this.geometries){if(0===e)break;const i=Math.min(E,e);e-=i,t.setDrawRange(0,2*i*3),t.getAttribute("position").needsUpdate=!0,t.getAttribute("colorAlpha").needsUpdate=!0,t.getIndex().needsUpdate=!0}}dispose(){if(this.scene){const{scene:e}=this;this.meshes.forEach((t=>e.remove(t))),this.scene=null}this.meshes=[],this.material=null,this.geometries.forEach((e=>e.dispose())),this.geometries.length=0,this.count=0}static context=new l.gJ;static initShared(e,t){this.context.reset(e);const{shaderLib:i}=e,{defines:n}=t;i.addProgram("geometry",{vertexShader:"precision highp float;uniform mat4 modelViewMatrix;uniform mat4 projectionMatrix;uniform vec3 uColor;uniform float uSize;attribute vec2 position;attribute vec4 colorAlpha;varying vec4 vColor;void main(){vColor=vec4(colorAlpha.xyz*uColor,colorAlpha.w);vec4 a=vec4(position,0.0,1.0);gl_Position=projectionMatrix*modelViewMatrix*a;}",fragmentShader:"precision highp float;varying vec4 vColor;void main(){gl_FragColor=vColor;}",defines:n})}static releaseShared(){this.context.reset()}}i(49573),i(29396);function U(e,t){let i=2,n=6;return e&&(i+=2,n+=6),t&&(i+=4,n+=6),[i,n]}const[N,B]=U(!0,!0),F=Math.floor(65536/N)-1,O=N*F,z=B*F;function k(e,t,i,n){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.01,o=i-e,a=n-t;const s=(0,l.zj)(o,a);return s>r?(o/=s,a/=s):(o=0,a=-1),(0,l.kn)(o,a)}let V;!function(e){e.default="default",e.normal="default",e.vertexColor="vertexColor",e.screenSpace="screenSpace"}(V||(V={}));class G{isRenderSystem=!0;$name="system";locked=!0;version=0;_color=new l.Zm(1,1,1,1);_uniformScale=1;_lineWidth=1;_offset=new n.F;_shadowOffset=new n.F(3,-22);material=null;geometries=[];meshes=[];scene=null;mode=V.default;minLength=.01;highQualitySegments=!1;miterLimit=.6;batchIndex=0;batchVertexCount=[];batchIndexCount=[];_enabled=!0;_visible=!0;constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;this.maxLines=e,Number.isInteger(e),this.static=0===e,this.uniforms={globalSize:{value:1},globalColor:{value:this._color},texture:{value:null},globalDisplacement:{value:1},globalOffset:{value:this._offset},shadowOffset:{value:this._shadowOffset}},this.updateSizeUniform()}get initialized(){return this.geometries.length>0}init(e){if(this.initialized)throw new Error("double init");const{scene:t,renderOrder:i=0,materialParameters:n={},texture:r,radius:o=32,mode:a=V.default,color:s,lineWidth:l,minLength:c,highQualitySegments:h,miterLimit:u}=e;if(this.mode=a,this.minLength=Math.max(0,c??this.minLength),this.highQualitySegments=h??!1,this.miterLimit=u??this.miterLimit,this.miterLimit>=-1&&this.miterLimit,!t)throw new d("scene");return this.scene=t,r?this.createFromTexture(r):this.createTexture(o),this.createMaterial(n),this.createMesh(t,i),void 0!==s&&this.color.set(s),void 0!==l&&(this.lineWidth=l),this}get color(){return this._color}set color(e){this._color.set(e)}get alpha(){return this._color.a}set alpha(e){this._color.a=e}get uniformScale(){return this._uniformScale}set uniformScale(e){this._uniformScale=e,this.updateSizeUniform()}get lineWidth(){return this._lineWidth}set lineWidth(e){this._lineWidth=e,this.updateSizeUniform()}get displacement(){return this.uniforms.globalDisplacement.value}set displacement(e){this.uniforms.globalDisplacement.value=e}get offset(){return this._offset}set offset(e){this._offset.copy(e)}get shadowOffset(){return this._shadowOffset}set shadowOffset(e){this._shadowOffset.copy(e)}get enabled(){return this._enabled}set enabled(e){const t=e&&this.visible;this.meshes.forEach((e=>e.visible=t)),this._enabled=e}get visible(){return this._visible}set visible(e){const t=e&&this.enabled;this.meshes.forEach((e=>e.visible=t)),this._visible=e}get textures(){return[this.uniforms.texture.value].filter(Boolean)}get batchCount(){return this.geometries.length}updateSizeUniform(){this.uniforms.globalSize.value=this._uniformScale*this._lineWidth}createTexture(e){const t=document.createElement("canvas");t.width=e,t.height=e;const i=t.getContext("2d");i.clearRect(0,0,t.width,t.height),i.beginPath(),i.arc(e/2,e/2,e/2-1,0,2*Math.PI,!0),i.closePath(),i.fillStyle="rgba(255, 255, 255, 1.0)",i.fill();const n=new A.x(t);n.generateMipmaps=!0,n.magFilter=o.wem,n.minFilter=o.wem,n.anisotropy=4,n.needsUpdate=!0,this.uniforms.texture.value=n}createFromTexture(e){e.generateMipmaps=!0,e.magFilter=o.wem,e.minFilter=o.wem,e.anisotropy=4,e.needsUpdate=!0,this.uniforms.texture.value=e}createMaterial(e){const t=G.context.deref().shaderLib.getProgram(`line.${this.mode}`);this.material=new a.F({uniforms:this.uniforms,...t,blending:o.bdR,depthTest:!0,depthWrite:!1,transparent:!0,...e})}createMesh(e,t){const i=[["position",this.mode===V.screenSpace?Float32Array:Uint16Array,2],["normal",Uint16Array,2,!0],["uv",Uint16Array,2,!0]];this.mode===V.vertexColor?i.push(["color",Uint8Array,4,!0]):this.mode===V.screenSpace&&(i.push(["size",Int16Array,2]),i.push(["displacement",Int16Array,2]));const n=new l.ww(i),r=this.static?o.W2J:o.dj0,{batchVertexCount:a,batchIndexCount:c}=this;a.length,c.length,this.static||c.length;let h=this.maxLines;for(;h>0;){const e=Math.min(F,h);h-=e,a.push(e*N),c.push(e*B)}const d=this.batchIndexCount.length;for(let u=0;u<d;++u){const i=this.batchVertexCount[u],a=this.batchIndexCount[u],c=n.createGeometry(i,{usage:r});this.geometries.push(c);const h=new w.Tl(new Uint16Array(a),1).setUsage(r);r===o.W2J&&h.onUpload(l._c),c.setIndex(h),(0,l.Ae)(c),c.setDrawRange(0,0);const d=new s.K(c,this.material);this.meshes.push(d),d.renderOrder=t,e.add(d)}}begin(){if(!this.locked)throw new Error("line system not locked");if(this.static&&this.version>0)throw new Error("cannot update static line system");this.locked=!1,this.batchIndex=0,this.batchVertexCount.fill(0),this.batchIndexCount.fill(0);for(const e of this.geometries)e.drawRange.count=0}getBufferCapacity(e){if(!this.initialized)return[O,z];const t=this.geometries[e];return t?[t.attributes.position.count,t.index.count]:[0,0]}static INVALID_BATCH=[-1,0,0];updateBatch(e,t){if(this.locked)throw new Error("line system locked");let{batchIndex:i}=this,n=this.batchVertexCount[i]??0,r=this.batchIndexCount[i]??0,o=n+e,a=r+t;const[s,l]=this.getBufferCapacity(i);if(o>s||a>l){if(i++,this.initialized&&i>=this.geometries.length){const{onError:e}=G.context.deref();return e(new h("Line system")),G.INVALID_BATCH}const[s,l]=this.getBufferCapacity(i);if(e>s||t>l){const{onError:e}=G.context.deref();return e(new c("Line system cannot handle requested geometry")),G.INVALID_BATCH}this.batchIndex=i,n=0,r=0,o=e,a=t}return this.batchVertexCount[i]=o,this.batchIndexCount[i]=a,[i,n,r]}createAttributeIterators(e,t,i){const n=this.geometries[e];if(n)return{positionAttr:l.e3.create(n,"position",t),normalAttr:l.e3.create(n,"normal",t),uvAttr:l.e3.create(n,"uv",t),colorAttr:l.e3.create(n,"color",t),sizeAttr:l.e3.create(n,"size",t),displacementAttr:l.e3.create(n,"displacement",t),index:l.e3.createIndex(n,i)}}writeLineSegment(e,t,i,n,r,o,a,s,c,h,d,u){const{positionAttr:f,normalAttr:m,uvAttr:g,colorAttr:p,sizeAttr:v,displacementAttr:x,index:S}=e,[y,_]=(0,l.fO)(s,c),w=f.index;let b=w;o&&(f.setXY(t,i).next(),g.setXY(0,0).next(),m.setXY(65535*(.25*(-y+s)+.5),65535*(.25*(-_+c)+.5)).next(),f.setXY(t,i).next(),g.setXY(65535,0).next(),m.setXY(65535*(.25*(-y-s)+.5),65535*(.25*(-_-c)+.5)).next(),S.setX(b+0).next(),S.setX(b+2).next(),S.setX(b+1).next(),S.setX(b+1).next(),S.setX(b+2).next(),S.setX(b+3).next(),b+=2),f.setXY(t,i).next(),g.setXY(0,32767.5).next(),m.setXY(65535*(.25*h+.5),65535*(.25*d+.5)).next(),f.setXY(t,i).next(),g.setXY(65535,32767.5).next(),m.setXY(65535*(.25*-h+.5),65535*(.25*-d+.5)).next(),S.setX(b+0).next(),S.setX(b+2).next(),S.setX(b+1).next(),S.setX(b+1).next(),S.setX(b+2).next(),S.setX(b+3).next(),a&&(f.setXY(n,r).next(),g.setXY(0,32767.5).next(),m.setXY(65535*(.25*s+.5),65535*(.25*c+.5)).next(),f.setXY(n,r).next(),g.setXY(65535,32767.5).next(),m.setXY(65535*(.25*-s+.5),65535*(.25*-c+.5)).next(),f.setXY(n,r).next(),g.setXY(0,65535).next(),m.setXY(65535*(.25*(y+s)+.5),65535*(.25*(_+c)+.5)).next(),f.setXY(n,r).next(),g.setXY(65535,65535).next(),m.setXY(65535*(.25*(y-s)+.5),65535*(.25*(_-c)+.5)).next(),b+=2,S.setX(b+0).next(),S.setX(b+2).next(),S.setX(b+1).next(),S.setX(b+1).next(),S.setX(b+2).next(),S.setX(b+3).next());const C=f.index-w;if(p){const{color:e=l.Zm.ALL_ZEROS}=u,t=255*e.r,i=255*e.g,n=255*e.b,r=255*e.a;for(let o=0;o<C;++o)p.setXYZW(t,i,n,r).next()}if(v&&x){const{size:e={x:0,y:0},displacement:t={x:0,y:0}}=u;for(let i=0;i<C;++i)v.setXY(e.x,e.y*((4&i)>>2)).next(),x.setVec2(t).next()}}line(e,t,i,n){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:{};const[o,a]=U(!0,!0),[s,l,c]=this.updateBatch(o,a),h=this.createAttributeIterators(s,l,c);if(!h)return;"object"==typeof i&&(r=i),"number"==typeof e&&"number"==typeof t&&"number"==typeof i&&"number"==typeof n||(n=t.y,i=t.x,t=e.y,e=e.x);const[d,u]=k(e,t,i,n,this.minLength);this.writeLineSegment(h,e,t,i,n,!0,!0,d,u,d,u,r)}lineStrip(e,t,i){let n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};"object"==typeof t&&(n=t,t=void 0);const r=new l.nK(e,t,i);if(r.length<2)throw new Error("line strip requires at least 2 points");const o=e=>[e[2],e[3]],a=new Array(r.length-1),s=r.length-2;for(let l=0;l<=s;++l){const[e,t]=k(...r.at(l),...r.at(l+1),this.minLength);a[l]=[!1,!1,e,t,e,t]}let c=0,h=0,d=!0;const{highQualitySegments:u,miterLimit:f}=this;for(let x=0;x<a.length;++x){const e=a[x],t=0===x;let i=u||x===s;if(!u){const n=o(e),r=t?n:o(a[x-1]),s=i?n:o(a[x+1]);if((0,l.aJ)(...n,...s)>f){if(d&&!t){const t=(0,l.gr)(n[0]+r[0],n[1]+r[1]);[e[4],e[5]]=t}d=!0}else d=!1;i||(i=!d)}const[n,r]=U(t,i);c+=n,h+=r,e[0]=t,e[1]=i}const[m,g,p]=this.updateBatch(c,h),v=this.createAttributeIterators(m,g,p);if(v)for(let l=0;l<a.length;++l){const[e,t]=r.at(l),[i,o]=r.at(l+1);this.writeLineSegment(v,e,t,i,o,...a[l],n)}}end(){if(this.locked)throw new Error("line system locked");if(this.locked=!0,this.initialized){this.version++;for(const[e,t]of this.geometries.entries()){const i=this.batchIndexCount[e];if(t.drawRange.count=i,i>0){const{attributes:e}=t;e.position.needsUpdate=!0,e.normal.needsUpdate=!0,e.uv.needsUpdate=!0,e.color&&(e.color.needsUpdate=!0),e.size&&(e.size.needsUpdate=!0),e.displacement&&(e.displacement.needsUpdate=!0),t.index.needsUpdate=!0}}}}dispose(){var e;if(this.scene){const{scene:e}=this;this.meshes.forEach((t=>e.remove(t))),this.scene=null}this.meshes.length=0,this.geometries.forEach((e=>e.dispose())),this.geometries.length=0,this.material=null,null===(e=this.uniforms.texture.value)||void 0===e||e.dispose(),this.uniforms.texture.value=null,this.locked=!0,this.version=0,this.batchIndex=0,this.batchVertexCount.length=0,this.batchIndexCount.length=0}static context=new l.gJ;static initShared(e,t){this.context.reset(e);const{shaderLib:i}=e,{defines:n}=t;i.addProgram("line.default",{vertexShader:"precision highp float;uniform mat4 modelViewMatrix;uniform mat4 projectionMatrix;uniform float globalSize;attribute vec2 position;attribute vec2 normal;attribute vec2 uv;varying vec2 vUV;void main(){vUV=uv;vec2 a=(normal-0.5)*4.0;vec4 b=vec4(position.x+a.x*globalSize,position.y+a.y*globalSize,0.0,1.0);vec4 c=modelViewMatrix*b;gl_Position=projectionMatrix*c;}",fragmentShader:"precision highp float;uniform sampler2D texture;uniform vec4 globalColor;varying vec2 vUV;void main(){gl_FragColor=globalColor*texture2D(texture,vUV);}",defines:n}),i.addProgram("line.vertexColor",{vertexShader:"precision highp float;uniform mat4 modelViewMatrix;uniform mat4 projectionMatrix;uniform vec4 globalColor;uniform float globalSize;attribute vec2 position;attribute vec2 normal;attribute vec2 uv;attribute vec4 color;varying vec2 vUV;varying vec4 vColor;void main(){vUV=uv;vColor=color*globalColor;vec2 a=(normal-0.5)*4.0;vec4 b=vec4(position.x+a.x*globalSize,position.y+a.y*globalSize,0.0,1.0);vec4 c=modelViewMatrix*b;gl_Position=projectionMatrix*c;}",fragmentShader:"precision highp float;uniform sampler2D texture;varying vec2 vUV;varying vec4 vColor;void main(){gl_FragColor=vColor*texture2D(texture,vUV);}",defines:n}),i.addProgram("line.screenSpace",{vertexShader:"precision highp float;uniform mat4 modelViewMatrix;uniform mat4 projectionMatrix;uniform float globalSize;uniform float globalDisplacement;uniform vec2 globalOffset;uniform vec2 shadowOffset;attribute vec2 position;attribute vec2 normal;attribute vec2 uv;attribute vec2 size;attribute vec2 displacement;varying vec2 vUV;void main(){vUV=uv;vec2 a=(normal-0.5)*size.x;float b=globalSize*2.0;a.y-=size.y*0.5;vec2 c=position+displacement*globalDisplacement+(globalOffset+shadowOffset)*globalSize+a*b;vec4 d=modelViewMatrix*vec4(c,0.0,1.0);gl_Position=projectionMatrix*d;}",fragmentName:"line.default",defines:n})}static releaseShared(){this.context.reset()}}var H=i(35880);class W{isRenderSystem=!0;$name="system";_color=new l.Zm(1,1,1,1);material=null;geometry=null;mesh=null;scene=null;count=0;_enabled=!0;_visible=!0;constructor(e){this.maxParticles=e,this.uniforms={uSize:{value:1},uColor:{value:this._color},texture:{value:null}}}init(e){const{scene:t,texture:i,materialParameters:n,renderOrder:r=0,color:s,uniformScale:c}=e;if(!t)throw new d("scene");if(!i)throw new d("texture");this.scene=t,this.geometry=new _.u;const h=new Float32Array(3*this.maxParticles),u=new Uint8Array(4*this.maxParticles);this.geometry.setAttribute("position",new w.Tl(h,3).setUsage(o.dj0)),this.geometry.setAttribute("colorAlpha",new w.Tl(u,4,!0).setUsage(o.dj0)),(0,l.Ae)(this.geometry),this.geometry.setDrawRange(0,0),this.uniforms.texture.value=i,i.needsUpdate=!0;const f=W.context.deref().shaderLib.getProgram("particle");return this.material=new a.F({uniforms:this.uniforms,...f,blending:o.bdR,depthTest:!1,transparent:!0,...n}),this.mesh=new H.w(this.geometry,this.material),this.mesh.renderOrder=r,this.scene.add(this.mesh),this.color.set(s??this.color),this.uniformScale=c??this.uniformScale,this}get color(){return this._color}set color(e){this._color.set(e)}get alpha(){return this._color.a}set alpha(e){this._color.a=e}get uniformScale(){return this.uniforms.uSize.value}set uniformScale(e){this.uniforms.uSize.value=e}get enabled(){return this._enabled}set enabled(e){this.mesh&&(this.mesh.visible=e&&this.visible),this._enabled=e}get visible(){return this._visible}set visible(e){this.mesh&&(this.mesh.visible=e&&this.enabled),this._visible=e}get geometries(){return this.geometry?[this.geometry]:[]}get textures(){var e,t;const i=null===(e=this.uniforms)||void 0===e||null===(t=e.texture)||void 0===t?void 0:t.value;return i?[i]:[]}get batchCount(){return this.geometry?1:0}begin(){this.count=0}emit(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new l.Zm(1,1,1,1);if(!this.geometry||this.count>=this.maxParticles){const{onError:e}=W.context.deref();return void e(new h("Particle system max",this.maxParticles))}const i=this.geometry.getAttribute("position").array,n=this.geometry.getAttribute("colorAlpha").array;let r=3*this.count;i[r+0]=e.x,i[r+1]=e.y,i[r+2]=e.z,r=4*this.count,n[r+0]=255*t.r,n[r+1]=255*t.g,n[r+2]=255*t.b,n[r+3]=255*t.a,++this.count}end(){this.geometry&&(this.geometry.getAttribute("position").needsUpdate=!0,this.geometry.getAttribute("colorAlpha").needsUpdate=!0,this.geometry.setDrawRange(0,this.count))}dispose(){var e;this.scene&&(this.mesh&&this.scene.remove(this.mesh),this.scene=null),this.mesh=null,this.material=null,null===(e=this.uniforms.texture.value)||void 0===e||e.dispose(),this.uniforms.texture.value=null,this.geometry&&(this.geometry.dispose(),this.geometry=null),this.count=0}static context=new l.gJ;static initShared(e,t){this.context.reset(e);const{shaderLib:i}=e,{defines:n}=t;i.addProgram("particle",{vertexShader:"precision highp float;uniform mat4 modelViewMatrix;uniform mat4 projectionMatrix;attribute vec3 position;attribute vec4 colorAlpha;uniform float uSize;uniform vec4 uColor;varying vec4 vColor;void main(){vColor=uColor*colorAlpha;vec4 a=modelViewMatrix*vec4(position.xy,0.0,1.0);gl_PointSize=uSize*position.z;gl_Position=projectionMatrix*a;}",fragmentShader:"precision highp float;uniform sampler2D texture;varying vec4 vColor;void main(){gl_FragColor=vColor*texture2D(texture,gl_PointCoord);}",defines:n})}static releaseShared(){this.context.reset()}}const X=Math.floor(8192)-1,j=e=>Math.max(Math.min(e,1),0);class Y{isRenderSystem=!0;$name="system";_color=new l.Zm(1,1,1,1);color1=new l.Zm(0,0,0,1).multiplyScalar(255);color2=new l.Zm(1,1,1,1).multiplyScalar(255);lineWidth=1;animation=0;repeat=.1;speed=200;material=null;geometries=[];meshes=[];scene=null;minLength=.01;count=0;_enabled=!0;_visible=!0;constructor(e){this.maxLines=e,this.uniforms={uGlobalColor:{value:this._color},uSize:{value:1},uTime:{value:0},uDisplacement:{value:1},texture:{value:null}}}init(e){if(0===this.maxLines)return this;const{scene:t,renderOrder:i=0,materialParameters:n={},radius:r=32,outline:o=0}=e;if(!t)throw new d("scene");return this.scene=t,this.createTexture(r,o),this.createMaterial(n),this.createMesh(t,i),this.color.set(e.color??this.color),this.lineWidth=e.lineWidth??this.lineWidth,this.repeat=j(e.repeat??this.repeat),this.speed=e.speed??this.speed,this.minLength=Math.max(0,e.minLength??this.minLength),this}get color(){return this._color}set color(e){this._color.set(e)}get alpha(){return this._color.a}set alpha(e){this._color.a=e}get uniformScale(){return this.uniforms.uSize.value}set uniformScale(e){this.uniforms.uSize.value=e}get displacement(){return this.uniforms.uDisplacement.value}set displacement(e){this.uniforms.uDisplacement.value=e}get time(){return this.uniforms.uTime.value}set time(e){this.uniforms.uTime.value=e}get enabled(){return this._enabled}set enabled(e){const t=e&&this.visible;this.meshes.forEach((e=>e.visible=t)),this._enabled=e}get visible(){return this._visible}set visible(e){const t=e&&this.enabled;this.meshes.forEach((e=>e.visible=t)),this._visible=e}static get sharedVertexBuffers(){const{vertexBufferLib:e}=Y.context.deref();return[e.getBuffer("3x1Uv"),e.getBuffer("3x1Index")]}get vertexBuffers(){const e=Y.sharedVertexBuffers;return this.geometries.flatMap((t=>(0,l.yr)(t,(t=>e.includes(t)))))}get textures(){return[this.uniforms.texture.value].filter(Boolean)}get batchCount(){return this.geometries.length}createTexture(e,t){const i=document.createElement("canvas");i.width=e,i.height=e;const n=i.getContext("2d"),r=t>.1?0:1,a=new ImageData(e,e);for(let o=0;o<a.data.length;)a.data[o++]=255,a.data[o++]=255,a.data[o++]=255,a.data[o++]=r;n.putImageData(a,0,0),t>.1&&(n.beginPath(),n.arc(e/2,e/2,e/2-1,0,2*Math.PI,!0),n.closePath(),n.fillStyle="rgba(0, 0, 0, 1.0)",n.fill()),n.beginPath(),n.arc(e/2,e/2,e/2-1-t,0,2*Math.PI,!0),n.closePath(),n.fillStyle="rgba(255, 255, 255, 1.0)",n.fill();const s=new A.x(i);s.generateMipmaps=!1,s.magFilter=o.wem,s.minFilter=o.wem,s.anisotropy=1,s.needsUpdate=!0,this.uniforms.texture.value=s}createMaterial(e){const t=Y.context.deref().shaderLib.getProgram("stencilLine");this.material=new a.F({uniforms:this.uniforms,...t,blending:o.bdR,depthTest:!1,transparent:!0,...e})}createMesh(e,t){const{vertexBufferLib:i}=Y.context.deref(),n=i.getBuffer("3x1Index"),r=i.getBuffer("3x1Uv"),a=new l.ww([["position",Float32Array,2],["direction",Int16Array,2,!0],["normal",Int16Array,2,!0],["animation",Float32Array,1],["size",Float32Array,1],["speed",Float32Array,1],["end",Float32Array,1],["repeat",Float32Array,1],["color1",Uint8Array,4,!0],["color2",Uint8Array,4,!0]]);let c=this.maxLines;for(;c>0;){const i=Math.min(X,c);c-=i;const h=8*i,d=a.createGeometry(h,{usage:o.dj0});d.setAttribute("uv",r),d.setIndex(n),(0,l.Ae)(d),d.setDrawRange(0,0),this.geometries.push(d);const u=new s.K(d,this.material);this.meshes.push(u),u.renderOrder=t,e.add(u)}}begin(){this.count=0;for(const e of this.geometries)e.setDrawRange(0,0)}line(e,t,i,n,r){"object"==typeof e&&"object"==typeof t?(r=i,n=t.y,i=t.x,t=e.y,e=e.x):(e=e,t=t,i=i,n=n),r??(r=1);const o=this.geometries[Math.floor(this.count/X)];if(!o||this.count>=this.maxLines){const{onError:e}=Y.context.deref();return void e(new h("Stencil line system",this.maxLines))}const a=this.count%X*8,s=l.e3.create(o,"position",a),c=l.e3.create(o,"direction",a),d=l.e3.create(o,"normal",a),u=l.e3.create(o,"animation",a),f=l.e3.create(o,"size",a),m=l.e3.create(o,"speed",a),g=l.e3.create(o,"end",a),p=l.e3.create(o,"repeat",a),v=l.e3.create(o,"color1",a),x=l.e3.create(o,"color2",a),[S,y]=[i-e,n-t],_=(0,l.zj)(S,y);if(_<this.minLength)return;const w=this.animation+_,[b,C]=[S/_,y/_],[P,M]=[-C,b];s.setXY(e,t).next(),c.setXY((0,l.Mg)(b),(0,l.Mg)(C)).next();let[A,T]=(0,l.gr)(-b+P,-C+M);d.setXY((0,l.Mg)(A),(0,l.Mg)(T)).next(),u.setX(this.animation).next(),f.setX(this.lineWidth).next(),m.setX(r).next(),g.setX(0).next(),p.setX(this.repeat).next(),v.setVec4(this.color1).next(),x.setVec4(this.color2).next(),s.setXY(e,t).next(),c.setXY((0,l.Mg)(b),(0,l.Mg)(C)).next(),[A,T]=(0,l.gr)(-b-P,-C-M),d.setXY((0,l.Mg)(A),(0,l.Mg)(T)).next(),u.setX(this.animation).next(),f.setX(this.lineWidth).next(),m.setX(r).next(),g.setX(0).next(),p.setX(this.repeat).next(),v.setVec4(this.color1).next(),x.setVec4(this.color2).next(),s.setXY(e,t).next(),c.setXY((0,l.Mg)(b),(0,l.Mg)(C)).next(),d.setXY((0,l.Mg)(P),(0,l.Mg)(M)).next(),u.setX(this.animation).next(),f.setX(this.lineWidth).next(),m.setX(r).next(),g.setX(0).next(),p.setX(this.repeat).next(),v.setVec4(this.color1).next(),x.setVec4(this.color2).next(),s.setXY(e,t).next(),c.setXY((0,l.Mg)(b),(0,l.Mg)(C)).next(),d.setXY((0,l.Mg)(-P),(0,l.Mg)(-M)).next(),u.setX(this.animation).next(),f.setX(this.lineWidth).next(),m.setX(r).next(),g.setX(0).next(),p.setX(this.repeat).next(),v.setVec4(this.color1).next(),x.setVec4(this.color2).next(),s.setXY(e,t).next(),c.setXY((0,l.Mg)(b),(0,l.Mg)(C)).next(),d.setXY((0,l.Mg)(P),(0,l.Mg)(M)).next(),u.setX(w).next(),f.setX(this.lineWidth).next(),m.setX(r).next(),g.setX(_).next(),p.setX(this.repeat).next(),v.setVec4(this.color1).next(),x.setVec4(this.color2).next(),s.setXY(e,t).next(),c.setXY((0,l.Mg)(b),(0,l.Mg)(C)).next(),d.setXY((0,l.Mg)(-P),(0,l.Mg)(-M)).next(),u.setX(w).next(),f.setX(this.lineWidth).next(),m.setX(r).next(),g.setX(_).next(),p.setX(this.repeat).next(),v.setVec4(this.color1).next(),x.setVec4(this.color2).next(),s.setXY(e,t).next(),c.setXY((0,l.Mg)(b),(0,l.Mg)(C)).next(),[A,T]=(0,l.gr)(b+P,C+M),d.setXY((0,l.Mg)(A),(0,l.Mg)(T)).next(),u.setX(w).next(),f.setX(this.lineWidth).next(),m.setX(r).next(),g.setX(_).next(),p.setX(this.repeat).next(),v.setVec4(this.color1).next(),x.setVec4(this.color2).next(),s.setXY(e,t).next(),c.setXY((0,l.Mg)(b),(0,l.Mg)(C)).next(),[A,T]=(0,l.gr)(b-P,C-M),d.setXY((0,l.Mg)(A),(0,l.Mg)(T)).next(),u.setX(w).next(),f.setX(this.lineWidth).next(),m.setX(r).next(),g.setX(_).next(),p.setX(this.repeat).next(),v.setVec4(this.color1).next(),x.setVec4(this.color2).next(),this.animation=w,this.count++}end(){let e=this.count;for(const t of this.geometries){if(0===e)break;const i=Math.min(X,e);e-=i,t.setDrawRange(0,6*i*3);const{attributes:n}=t;n.position.needsUpdate=!0,n.direction.needsUpdate=!0,n.normal.needsUpdate=!0,n.animation.needsUpdate=!0,n.size.needsUpdate=!0,n.speed.needsUpdate=!0,n.end.needsUpdate=!0,n.repeat.needsUpdate=!0,n.color1.needsUpdate=!0,n.color2.needsUpdate=!0}}setLineWidth(e){this.lineWidth=e}setStencilColor(e,t){this.color1.set(e).multiplyScalar(255),this.color2.set(t).multiplyScalar(255)}setStencilRepeat(e){this.repeat=j(e)}setStencilSpeed(e){this.speed=e}setStencilStart(){this.animation=0}updateTime(e){void 0===e&&(e=Date.now()),this.time=e/this.speed%1e3}dispose(){var e;if(this.scene){const{scene:e}=this;this.meshes.forEach((t=>e.remove(t))),this.scene=null}this.meshes=[],this.geometries.forEach((e=>e.dispose())),this.geometries.length=0,this.material=null,null===(e=this.uniforms.texture.value)||void 0===e||e.dispose(),this.uniforms.texture.value=null,this.count=0}static context=new l.gJ;static initShared(e,t){this.context.reset(e);const{shaderLib:i}=e,{defines:n}=t;i.addProgram("stencilLine",{vertexShader:"precision highp float;uniform mat4 modelViewMatrix;uniform mat4 projectionMatrix;uniform vec4 uGlobalColor;uniform float uSize;uniform float uTime;uniform float uDisplacement;attribute vec2 position;attribute vec2 direction;attribute vec2 normal;attribute float animation;attribute float size;attribute float speed;attribute float end;attribute float repeat;attribute vec4 color1;attribute vec4 color2;attribute vec2 uv;varying vec2 vUV;varying vec4 vColor1;varying vec4 vColor2;varying float vAnim;void main(){vUV=uv;vColor1=color1*uGlobalColor;vColor2=color2*uGlobalColor;float a=size*uSize;vAnim=(animation+(uv.y*2.0-1.0)*a)*repeat/uSize-uTime*speed;vec4 b=vec4(position+direction*end*uDisplacement+normal*a,0.0,1.0);gl_Position=projectionMatrix*(modelViewMatrix*b);}",fragmentShader:"precision highp float;uniform sampler2D texture;varying vec2 vUV;varying vec4 vColor1;varying vec4 vColor2;varying float vAnim;void main(){float a=floor(mod(vAnim,2.0));vec4 b=texture2D(texture,vUV);float c=1.0-b.x;gl_FragColor=b*mix(vColor1,vColor2,a)+vec4(vec3(c),0.0);}",defines:n})}static releaseShared(){this.context.reset()}}var q=i(74023),Z=i(67511);let $;async function K(){return $||($=await i.e(505).then(i.t.bind(i,69006,23))),$}const J=e=>"string"!=typeof e?e.toString():e.toLowerCase();class Q{isRenderSystem=!0;$name="system";fontConfig=null;rtl=!1;maxWidth=5e3;minWidth=1;maxCharactersPerBatch=8191;dynamic=!0;_color=new l.Zm(.9,.9,.9,1);_fillColor=new l.Zm(1,1,1,1);_outlineColor=new l.Zm(0,0,0,.5);_uniformScale=1;_verticalScale=1;scale=1;rotate=0;skew=0;material=null;geometries=[];meshes=[];scene=null;renderOrder=0;geoIdx=0;indexCount=[];vertexCount=[];boundingBoxes=new Map;positions=new Map;_enabled=!0;_visible=!0;constructor(){this.uniforms={texture:{value:null},uGlobalColor:{value:this._color},uFillColor:{value:this._fillColor},uOutlineColor:{value:this._outlineColor},uSize:{value:new n.F(1,1)},uSharpness:{value:new n.F(0,1)},uOutlineSharpness:{value:new n.F(0,1)},uOffset:{value:new n.F(0,0)},uOutlineAlphaSize:{value:1}},this.updateSizeUniform()}init(e){const{scene:t,texture:i,font:n,materialParameters:r,renderOrder:o=0}=e;if(!t)throw new d("scene");if(!i)throw new d("texture");if(!n)throw new d("font");const{width:a=1,align:s="left",lineHeight:l=16,letterSpacing:c=0}=e;return this.minWidth=a,this.fontConfig={font:n,width:a,align:s,lineHeight:l,letterSpacing:c},this.rtl=e.rtl??this.rtl,this.maxCharactersPerBatch=Math.min(8191,e.maxCharactersPerBatch??this.maxCharactersPerBatch),this.dynamic=e.dynamic??this.dynamic,this.scene=t,this.renderOrder=o,this.createMaterial(i,r),this.createMesh(),this.color.set(e.color??this.color),this.fillColor.set(e.fillColor??this.fillColor),this.outlineColor.set(e.outlineColor??this.outlineColor),this.sharpness=e.sharpness??this.sharpness,this.outlineSharpness=e.outlineSharpness??this.outlineSharpness,this.verticalScale=e.verticalScale??this.verticalScale,this.scale=e.scale??this.scale,this.rotate=e.rotate??this.rotate,this.skew=e.skew??this.skew,this}isInitialized(){return null!==this.fontConfig}getUsage(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;const t=this.geometries[e];if(!t)return[0,0];const i=t.getAttribute("positionUV").count,n=t.getIndex().count;return[this.vertexCount[e]/i,this.indexCount[e]/n]}get color(){return this._color}set color(e){this._color.set(e)}get alpha(){return this._color.a}set alpha(e){this._color.a=e}get fillColor(){return this._fillColor}set fillColor(e){this._fillColor.set(e)}get fillAlpha(){return this._fillColor.a}set fillAlpha(e){this._fillColor.a=e}get outlineColor(){return this._outlineColor}set outlineColor(e){this._outlineColor.set(e)}get outlineAlpha(){return this._outlineColor.a}set outlineAlpha(e){this._outlineColor.a=e}get uniformScale(){return this._uniformScale}set uniformScale(e){this._uniformScale=e,this.updateSizeUniform()}get verticalScale(){return this._verticalScale}set verticalScale(e){this._verticalScale=e,this.updateSizeUniform()}get offset(){return this.uniforms.uOffset.value}set offset(e){this.uniforms.uOffset.value.copy(e)}get sharpness(){return this.uniforms.uSharpness.value}set sharpness(e){this.uniforms.uSharpness.value.copy(e)}get outlineSharpness(){return this.uniforms.uOutlineSharpness.value}set outlineSharpness(e){this.uniforms.uOutlineSharpness.value.copy(e)}get outlineAlphaSize(){return this.uniforms.uOutlineAlphaSize.value}set outlineAlphaSize(e){this.uniforms.uOutlineAlphaSize.value=e}get enabled(){return this._enabled}set enabled(e){const t=e&&this.visible;this.meshes.forEach((e=>e.visible=t)),this._enabled=e}get visible(){return this._visible}set visible(e){const t=e&&this.enabled;this.meshes.forEach((e=>e.visible=t)),this._visible=e}get textures(){return[this.uniforms.texture.value].filter(Boolean)}get batchCount(){return this.geometries.length}updateSizeUniform(){this.uniforms.uSize.value.set(this._uniformScale,this._uniformScale/this._verticalScale)}createMaterial(e,t){(0,l.N6)(e,{generateMipmaps:!0,magFilter:o.wem,minFilter:o.FDw}),this.uniforms.texture.value=e;const i=Q.context.deref().shaderLib.getProgram("text");this.material=new a.F({uniforms:this.uniforms,...i,blending:o.bdR,depthTest:!1,depthWrite:!1,transparent:!0,...t})}createMesh(){var e;const t=[["position",Float32Array,2],["world",Float32Array,2],["uv",Uint16Array,2,!0]],i=new l.ww(t),n=this.dynamic?o.dj0:o.W2J,r=4*this.maxCharactersPerBatch,a=2*this.maxCharactersPerBatch*3,c=i.createGeometry(r,{usage:n});this.geometries.push(c);const h=new w.Tl(new Uint16Array(a),1).setUsage(n);this.dynamic||h.onUpload(l._c),c.setIndex(h),(0,l.Ae)(c),c.setDrawRange(0,0),this.indexCount.push(0),this.vertexCount.push(0);const d=new s.K(c,this.material);d.renderOrder=this.renderOrder,null===(e=this.scene)||void 0===e||e.add(d),this.meshes.push(d)}canUpdate(){var e,t;return this.dynamic||!(null===(e=this.geometries[0])||void 0===e||null===(t=e.getAttribute("position").array)||void 0===t||!t.length)}begin(){this.canUpdate()&&(this.indexCount.fill(0),this.vertexCount.fill(0),this.boundingBoxes.clear(),this.positions.clear(),this.geoIdx=0)}print(e,t,i,r,o,a){if(!this.fontConfig)throw new Error("text printer not initialized");if(!this.canUpdate())return;let s;if(r=r??this.scale,o=o??new n.F,a)s=a.originalGeometry;else{if(!t)return;if(this.rtl&&$){const{processBidirectionalText:e,applyArabicShaping:i}=$;[t]=e(i(t),[])}s=new Z.M({...this.fontConfig,text:t})}const c=s.getIndex().count,h=s.getAttribute("position").count;let d=this.indexCount[this.geoIdx],u=this.vertexCount[this.geoIdx],f=d+c,m=u+h;const g=this.geometries[this.geoIdx].getIndex().count,p=this.geometries[this.geoIdx].getAttribute("position").count;(f>g||m>p)&&(this.geometries[++this.geoIdx]||this.createMesh(),d=this.indexCount[this.geoIdx],u=this.vertexCount[this.geoIdx],f=d+c,m=u+h);const v=this.geometries[this.geoIdx],x=l.e3.createIndex(v,d),S=l.e3.createIndex(s);for(;S.valid;)x.setX(S.getX()+u),x.next(),S.next();const y=l.e3.create(v,"position",u),_=l.e3.create(v,"uv",u),w=l.e3.create(v,"world",u),b=l.e3.create(s,"position"),C=l.e3.create(s,"uv"),P=.5*-this.fontConfig.width,M=.33*this.fontConfig.lineHeight,A=new n.F;for(let n=0;n<h;++n){if(a)A.copy(a.vertices[n]),A.sub(a.center),A.multiplyScalar(r);else{let e=(b.getX()+P)*r+o.x;const t=(b.getY()+M)*r+o.y;if(e+=t*this.skew,0===this.rotate)A.set(e,t);else{const i=Math.sin(this.rotate),n=Math.cos(this.rotate);A.set(e*n-t*i,t*n+e*i)}}y.setVec2(A),_.setXY(65535*C.getX(),65535*C.getY()),w.setVec2(e),y.next(),_.next(),w.next(),b.next(),C.next()}s.computeBoundingBox();const{min:T,max:L}=s.boundingBox,D=new q.L(T.x+P,T.y+M,L.x+P,L.y+M);D.multiplyScalar(r);const I=i??t;this.setBoundingBox(I,D),this.setPosition(I,new n.F(e.x,e.y)),this.indexCount[this.geoIdx]=f,this.vertexCount[this.geoIdx]=m}precalculateBendedGeometry(e,t){if(!this.fontConfig)throw new Error("text printer not initialized");const{scale:i=this.scale,angle:r=0,flip:o=1}=t;e.includes(" ")?this.fontConfig.width=this.minWidth:this.fontConfig.width=this.maxWidth;const a=new Z.M({...this.fontConfig,text:e}),s=[],l=new q.L,c=new n.F,h=new n.F,{array:d,count:u}=a.getAttribute("position"),f=.5*-this.fontConfig.width,m=.33*this.fontConfig.lineHeight;for(let g=0;g<u;++g){let e=(d[2*g+0]+f)*i,t=(d[2*g+1]+m)*i;e+=t*this.skew;const a=1e3+100*i,u=Math.min(1-o,1),p=.25*t*o+a,v=e*(24e-5-1e-5*i);e=Math.sin(r+Math.PI*u+v*o)*p,t=Math.cos(r*o+Math.PI*u+v)*p;const x=Math.sin(this.rotate),S=Math.cos(this.rotate);h.set(e*S-t*x,t*S+e*x),c.add(h),0===g?l.set(h.x,h.y,h.x,h.y):l.set(Math.min(l.x,h.x),Math.min(l.y,h.y),Math.max(l.z,h.x),Math.max(l.w,h.y)),s.push(new n.F(h.x,h.y))}return c.divideScalar(u),{vertices:s,boundingBox:l,center:c,originalGeometry:a}}end(){if(this.canUpdate())for(const[e,t]of this.geometries.entries())t.getIndex().needsUpdate=!0,t.getAttribute("position").needsUpdate=!0,t.getAttribute("uv").needsUpdate=!0,t.getAttribute("world").needsUpdate=!0,t.setDrawRange(0,this.indexCount[e])}setBoundingBox(e,t){this.boundingBoxes.set(J(e),t)}getBoundingBox(e){return this.boundingBoxes.get(J(e))}hasBoundingBox(e){return this.boundingBoxes.has(J(e))}setPosition(e,t){this.positions.set(J(e),t)}getPosition(e){return this.positions.get(J(e))}hasPosition(e){return this.positions.has(J(e))}dispose(){var e;if(this.scene){const{scene:e}=this;this.meshes.forEach((t=>e.remove(t))),this.scene=null}this.meshes=[],this.geometries.forEach((e=>e.dispose())),this.geometries.length=0,this.material=null,null===(e=this.uniforms.texture.value)||void 0===e||e.dispose(),this.uniforms.texture.value=null,this.indexCount=[],this.vertexCount=[],this.boundingBoxes.clear(),this.positions.clear(),this.geoIdx=0}static context=new l.gJ;static initShared(e,t){this.context.reset(e);const{shaderLib:i}=e,{defines:n}=t;i.addProgram("text",{vertexShader:"precision highp float;uniform mat4 modelViewMatrix;uniform mat4 projectionMatrix;uniform vec2 uSize;uniform vec2 uOffset;attribute vec2 position;attribute vec2 uv;attribute vec2 world;varying vec2 vUV;void main(){vUV=uv;vec4 a=modelViewMatrix*vec4((position+uOffset)*uSize+world,0.0,1.0);gl_Position=projectionMatrix*a;}",fragmentShader:"precision highp float;uniform sampler2D texture;varying vec2 vUV;uniform vec2 uSharpness;uniform vec2 uOutlineSharpness;uniform vec4 uGlobalColor;uniform vec4 uFillColor;uniform vec4 uOutlineColor;uniform float uOutlineAlphaSize;void main(){vec4 a=texture2D(texture,vUV);float b=clamp((a.w+uSharpness.x)*uSharpness.y,0.0,uOutlineAlphaSize);float c=clamp(a.w*uSharpness.y*uOutlineSharpness.y-uOutlineSharpness.x,0.0,1.0);vec4 d=vec4(uGlobalColor.xyz*uFillColor.xyz,uFillColor.w);vec4 e=mix(d,uOutlineColor,uOutlineAlphaSize-b);gl_FragColor=vec4(e.xyz,c*e.w*uGlobalColor.w);}",defines:n})}static releaseShared(){this.context.reset()}}const ee=16383;class te{isRenderSystem=!0;$name="system";_color=new l.Zm(1,1,1,1);_lightColor=new l.Zm(1,1,1,1);_uniformScale=1;_verticalScale=1;_mapRect=new q.L;_skew=0;material=null;geometries=[];meshes=[];scene=null;renderOrder=0;count=0;_enabled=!0;_visible=!0;constructor(e){this.maxTiles=e,this.uniforms={diffuse:{value:null},normal:{value:null},uColor:{value:this._color},uScale:{value:new n.F(1,1)},uLightPosition:{value:new r.P},uLightColor:{value:this._lightColor},uLightPower:{value:1},uWorldScale:{value:1},uMapRect:{value:this._mapRect},uSkew:{value:this._skew},uDiffuseFactor:{value:1},uSpecularFactor:{value:1}},this.updateSizeUniform()}init(e){const{scene:t,diffuseTexture:i,normalTexture:n,wrapS:r=o.rpg,wrapT:a=o.rpg,materialParameters:s,renderOrder:l=0,diffuseFactor:c=1,specularFactor:h=1}=e;if(!t)throw new d("scene");if(!i)throw new d("diffuseTexture");if(!n)throw new d("normalTexture");this.scene=t,this.renderOrder=l;for(const d of[i,n])d.generateMipmaps=!0,d.magFilter=o.wem,d.minFilter=o.FDw,d.wrapS=r,d.wrapT=a,d.anisotropy=2,d.needsUpdate=!0;return this.uniforms.uDiffuseFactor.value=c,this.uniforms.uSpecularFactor.value=h,this.createGeometry(),this.createMaterialAndMesh(i,n,s),this.mapRect=e.mapRect??this.mapRect,this.skew=e.skew??this.skew,void 0!==e.lightPower&&this.setLightPower(e.lightPower),this}get color(){return this._color}set color(e){this._color.set(e)}get alpha(){return this._color.a}set alpha(e){this._color.a=e}get uniformScale(){return this._uniformScale}set uniformScale(e){this._uniformScale=e,this.updateSizeUniform()}get verticalScale(){return this._verticalScale}set verticalScale(e){this._verticalScale=e,this.updateSizeUniform()}get mapRect(){return this._mapRect}set mapRect(e){this._mapRect.copy(e)}get skew(){return this._skew}set skew(e){this._skew=e,this.uniforms.uSkew.value=this._skew}get enabled(){return this._enabled}set enabled(e){const t=e&&this.visible;this.meshes.forEach((e=>e.visible=t)),this._enabled=e}get visible(){return this._visible}set visible(e){const t=e&&this.enabled;this.meshes.forEach((e=>e.visible=t)),this._visible=e}get textures(){return[this.uniforms.diffuse.value,this.uniforms.normal.value].filter(Boolean)}get batchCount(){return this.geometries.length}updateSizeUniform(){this.uniforms.uScale.value.set(this._uniformScale,this._uniformScale/this._verticalScale)}createGeometry(){const e=new l.ww([["position",Float32Array,2],["size",Float32Array,2],["uv",Float32Array,2],["scale",Float32Array,1],["rotation",Float32Array,1]]);let t=this.maxTiles;for(;t>0;){const i=Math.min(ee,t);t-=i;const n=4*i,r=new Uint16Array(2*i*3);let a=0;for(let e=0;e<i;++e){const t=4*e;r[a++]=t+0,r[a++]=t+2,r[a++]=t+1,r[a++]=t+1,r[a++]=t+2,r[a++]=t+3}const s=e.createGeometry(n,{usage:o.dj0});s.setIndex(new w.Tl(r,1).onUpload(l._c)),(0,l.Ae)(s),s.setDrawRange(0,0),this.geometries.push(s)}}createMaterialAndMesh(e,t,i){this.uniforms.diffuse={value:e},this.uniforms.normal={value:t};const n=te.context.deref().shaderLib.getProgram("tile");this.material=new a.F({uniforms:this.uniforms,...n,blending:o.bdR,depthTest:!1,transparent:!0,...i});for(const o of this.geometries){var r;const e=new s.K(o,this.material);this.meshes.push(e),e.renderOrder=this.renderOrder,null===(r=this.scene)||void 0===r||r.add(e)}}begin(){for(const e of this.geometries)e.setDrawRange(0,0);this.count=0}tile(e,t,i,n,r){const o=this.geometries[Math.floor(this.count/ee)];if(!o||this.count>=this.maxTiles){const{onError:e}=te.context.deref();return void e(new h("Tile system",this.maxTiles))}const a=this.count%ee*4,s=l.e3.create(o,"position",a),c=l.e3.create(o,"size",a),d=l.e3.create(o,"uv",a),u=l.e3.create(o,"scale",a),f=l.e3.create(o,"rotation",a);for(let l=0;l<4;++l){const r=(1&l)-.5,o=.5*(2&l)-.5;s.setXY(e.x,e.y).next(),c.setXY(r*e.width,o*e.height).next(),d.setXY(t.x+r*t.width,t.y+o*t.height).next(),u.setX(i).next(),f.setX(n).next()}this.count++}end(){let e=this.count;for(const t of this.geometries){if(0===e)break;const i=Math.min(ee,e);e-=i,t.setDrawRange(0,2*i*3),t.getAttribute("position").needsUpdate=!0,t.getAttribute("size").needsUpdate=!0,t.getAttribute("uv").needsUpdate=!0,t.getAttribute("scale").needsUpdate=!0,t.getAttribute("rotation").needsUpdate=!0}}setLight(e){this.uniforms.uLightPosition.value.copy(e.position),this.uniforms.uLightColor.value.copy(e.color)}setLightPower(e){this.uniforms.uLightPower.value=e}setScale(e){this.uniforms.uWorldScale.value=e}dispose(){var e,t;if(this.scene){const{scene:e}=this;this.meshes.forEach((t=>e.remove(t))),this.scene=null}this.meshes=[],this.material=null,null===(e=this.uniforms.diffuse.value)||void 0===e||e.dispose(),this.uniforms.diffuse.value=null,null===(t=this.uniforms.normal.value)||void 0===t||t.dispose(),this.uniforms.normal.value=null,this.geometries.forEach((e=>e.dispose())),this.geometries.length=0,this.count=0}static context=new l.gJ;static initShared(e,t){this.context.reset(e);const{shaderLib:i}=e,{defines:n}=t;i.addProgram("tile",{vertexShader:"precision highp float;uniform mat4 modelViewMatrix;uniform mat4 projectionMatrix;uniform vec2 uScale;\n#ifdef EXTENDED_TRANSFORMS\nuniform float uSkew;\n#endif\nattribute vec2 position;attribute vec2 size;attribute vec2 uv;attribute float scale;attribute float rotation;varying vec2 vUV;varying vec3 vPosition;varying vec2 vRotation;varying vec3 vOrgPosition;void main(){vUV=uv;float a=sin(rotation);float b=cos(rotation);vRotation=vec2(a,b);vec2 c=uScale*size*scale;vec4 d=vec4(position.x+c.x*b-c.y*a,position.y+c.y*b+c.x*a,0.0,1.0);\n#ifdef EXTENDED_TRANSFORMS\nd.x+=d.y*-uSkew;\n#endif\nvOrgPosition=d.xyz;vec4 e=modelViewMatrix*d;vPosition=e.xyz;gl_Position=projectionMatrix*e;}",fragmentShader:"precision highp float;uniform sampler2D diffuse;uniform sampler2D normal;uniform vec4 uLightColor;uniform vec3 uLightPosition;uniform float uLightPower;uniform float uWorldScale;uniform vec4 uMapRect;uniform float uDiffuseFactor;uniform float uSpecularFactor;varying vec2 vUV;varying vec3 vPosition;varying vec2 vRotation;varying vec3 vOrgPosition;vec3 a(vec4 b){vec2 c=b.xw*2.0-1.0;return vec3(c.x,c.y,sqrt(1.0-(c.x*c.x+c.y*c.y)));}void main(){vec4 d=texture2D(diffuse,vUV);vec3 e=a(texture2D(normal,vUV));vec3 f=vec3(vRotation.y*e.x-vRotation.x*e.y,vRotation.y*e.y+vRotation.x*e.x,e.z);vec3 g=uLightPosition/uWorldScale;vec3 h=vec3(0.0,0.0,-1.0);vec3 i=normalize(g-vPosition);float j=max(uMapRect.x-vOrgPosition.x,0.0)+max(uMapRect.y-vOrgPosition.y,0.0)+max(vOrgPosition.x-uMapRect.z,0.0)+max(vOrgPosition.y-uMapRect.w,0.0);j=max(1.0-j*0.0002,0.0);float k=max(dot(i,f),0.5)*1.1*j+0.3;vec3 l=reflect(i,f);float m=max(dot(l,h),0.0);float n=pow(m,uLightPower);vec3 o=d.xyz*uDiffuseFactor*k+uLightColor.xyz*n*uSpecularFactor*j;gl_FragColor=vec4(o,d.w);}",defines:n})}static releaseShared(){this.context.reset()}}const ie=16383,ne=8191,re=4095;class oe{_buffers=new Map;get buffers(){return this._buffers}getBuffer(e){let t=this._buffers.get(e);return void 0===t&&(t=this.createBuffer(e),this._buffers.set(e,t)),t}createBuffer(e){switch(e){case"1x1Index":{const e=new Uint16Array(98298);let t=0;for(let i=0;i<ie;++i){const n=4*i;e[t++]=n+0,e[t++]=n+2,e[t++]=n+1,e[t++]=n+1,e[t++]=n+2,e[t++]=n+3}return new w.Tl(e,1).onUpload(l._c)}case"1x1VertexIndex":{const e=new Uint16Array(65532);let t=0;for(let i=0;i<ie;++i)for(let n=0;n<4;++n)e[t++]=n;return new w.Tl(e,1).onUpload(l._c)}case"1x1Uv":{const e=new Uint16Array(131064);let t=0;for(let i=0;i<ie;++i)for(let n=0;n<4;++n)e[t++]=65535*(1&n),e[t++]=65535*(n>>1);return new w.Tl(e,2,!0).onUpload(l._c)}case"3x1Index":{const e=new Uint16Array(147438);let t=0;for(let i=0;i<ne;++i){const n=8*i,r=n+6;for(let i=n;i<r;i+=2)e[t++]=i+0,e[t++]=i+2,e[t++]=i+1,e[t++]=i+1,e[t++]=i+2,e[t++]=i+3}return new w.Tl(e,1).onUpload(l._c)}case"3x1Uv":{const e=new Uint16Array(131056),t=[0,.5,.5,1];let i=0;for(let n=0;n<ne;++n)for(let r=0;r<8;++r)e[i++]=65535*(1&r),e[i++]=65535*t[r>>1];return new w.Tl(e,2,!0).onUpload(l._c)}case"3x3Index":{const e=new Uint16Array(221130);let t=0;for(let i=0;i<re;++i){const n=16*i;for(let i=0;i<3;++i)for(let r=0;r<3;++r)e[t++]=n+4*(0+i)+0+r,e[t++]=n+4*(1+i)+0+r,e[t++]=n+4*(0+i)+1+r,e[t++]=n+4*(0+i)+1+r,e[t++]=n+4*(1+i)+0+r,e[t++]=n+4*(1+i)+1+r}return new w.Tl(e,1).onUpload(l._c)}case"3x3VertexIndex":{const e=new Uint16Array(65520);let t=0;for(let i=0;i<re;++i)for(let n=0;n<16;++n)e[t++]=n;return new w.Tl(e,1).onUpload(l._c)}default:throw new Error(`Unknown vertex buffer kind '${e}'`)}}dispose(){this._buffers.clear()}}let ae;!function(e){e.DEFAULT="default",e.SIMPLE="simple",e.DEFAULT_SELECTION="defaultSelection",e.SIMPLE_SELECTION="simpleSelection",e.DEFAULT_FLASH="defaultFlash"}(ae||(ae={}));const se=16,le=4095,ce=e=>(0,l.Ti)(256,e.x,e.y),he=["colorIndex","selectionColorIndex"];class de{isRenderSystem=!0;$name="system";mode=ae.DEFAULT;_color=new l.Zm(1,1,1,1);_flashColor=new l.Zm(1,1,1,1);_uniformScale=1;_verticalScale=1;_rotationSkew=new n.F(0,0);renderPassData=[];renderOrder=0;count=0;_enabled=!0;_visible=!0;constructor(e){this.maxWindows=e,this.uniforms={uColor:{value:this._color},uFlashColor:{value:this._flashColor},uSize:{value:new n.F(1,1)},uOffset:{value:new n.F(0,0)},uRotationSkew:{value:this._rotationSkew},uDisplacement:{value:1},uStage:{value:0},uScreenScale:{value:1},uMode:{value:0},uTime:{value:0},uColorArray:{type:"v4v",value:[]},texture:{value:null}},this.updateSizeUniform()}init(e){const{scene:t,selectionScene:i,texture:n,mode:r=ae.DEFAULT,materialParameters:a,renderOrder:s=0,patchColors:l=[]}=e;this.renderOrder=s,this.mode=r,n.generateMipmaps=!0,n.magFilter=o.wem,n.minFilter=o.FDw,n.anisotropy=2,n.needsUpdate=!0,this.uniforms.texture.value=n,this.uniforms.uColorArray.value=[...l];const c=[t],h=[];if(r===ae.DEFAULT_FLASH?h.push("defaultFlash"):r===ae.SIMPLE||r===ae.SIMPLE_SELECTION?h.push("simple"):h.push("default"),r===ae.DEFAULT_SELECTION||r===ae.SIMPLE_SELECTION){if(h.push("selection"),!i)throw new d("selectionScene");c.push(i)}const u=this.createGeometry(h.length,r!==ae.DEFAULT_FLASH);for(let o=0;o<u.length;++o)this.renderPassData.push(this.createRenderPassData(c[o],u[o],h[o],a));this.color.set(e.color??this.color),this.flashColor.set(e.flashColor??this.flashColor),this.uniformScale=e.uniformScale??this.uniformScale,this.verticalScale=e.verticalScale??this.verticalScale,this.screenScale=e.screenScale??this.screenScale,this.offset=e.offset??this.offset,this.displacement=e.displacement??this.displacement,this.rotation=e.rotation??this.rotation,this.skew=e.skew??this.skew,this.stage=e.stage??this.stage}get color(){return this._color}set color(e){this._color.set(e)}get alpha(){return this._color.a}set alpha(e){this._color.a=e}get flashColor(){return this._flashColor}set flashColor(e){this._flashColor.set(e)}get uniformScale(){return this._uniformScale}set uniformScale(e){this._uniformScale=e,this.updateSizeUniform()}get verticalScale(){return this._verticalScale}set verticalScale(e){this._verticalScale=e,this.updateSizeUniform()}get stage(){return this.uniforms.uStage.value}set stage(e){this.uniforms.uStage.value=e}get screenScale(){return this.uniforms.uScreenScale.value}set screenScale(e){this.uniforms.uScreenScale.value=e}get offset(){return this.uniforms.uOffset.value}set offset(e){this.uniforms.uOffset.value.copy(e)}get displacement(){return this.uniforms.uDisplacement.value}set displacement(e){this.uniforms.uDisplacement.value=e}get time(){return this.uniforms.uTime.value}set time(e){this.uniforms.uTime.value=e}get rotation(){return this._rotationSkew.x}set rotation(e){this._rotationSkew.x=e}get skew(){return this._rotationSkew.y}set skew(e){this._rotationSkew.y=e}get enabled(){return this._enabled}set enabled(e){const t=e&&this.visible;this.renderPassData.forEach((e=>{let{meshes:i}=e;return i.forEach((e=>e.visible=t))})),this._enabled=e}get visible(){return this._visible}set visible(e){const t=e&&this.enabled;this.renderPassData.forEach((e=>{let{meshes:i}=e;return i.forEach((e=>e.visible=t))})),this._visible=e}static get sharedVertexBuffers(){const{vertexBufferLib:e}=de.context.deref();return[e.getBuffer("3x3Index"),e.getBuffer("3x3VertexIndex")]}get vertexBuffers(){const e=[];for(const[t,{geometries:i}]of this.renderPassData.entries())if(0===t){const t=de.sharedVertexBuffers;e.push(...i.flatMap((e=>(0,l.yr)(e,(e=>t.includes(e))))))}else e.push(...i.map((e=>e.getAttribute("colorIndex"))));return e}get textures(){return[this.uniforms.texture.value].filter(Boolean)}get batchCount(){return this.renderPassData.reduce(((e,t)=>{let{geometries:i}=t;return e+i.length}),0)}updateSizeUniform(){this.uniforms.uSize.value.set(this._uniformScale,this._uniformScale/this._verticalScale)}createGeometry(e,t){const{vertexBufferLib:i}=de.context.deref(),n=i.getBuffer("3x3Index"),r=i.getBuffer("3x3VertexIndex"),a=[...Array(e)].map((()=>[])),s=[["position",Float32Array,3],["displacement",Float32Array,2],["offset",Float32Array,2],["sizes",Float32Array,3]];t||s.push(["colorIndexFlash",Uint16Array,2]);const c=new l.ww(s);let h=this.maxWindows;for(;h>0;){const i=Math.min(le,h);h-=i;const s=i*se,d=c.createGeometry(s,{usage:o.dj0});d.setIndex(n),d.setAttribute("vertexIndex",r),(0,l.Ae)(d),d.setDrawRange(0,0);for(let n=0;n<e;++n){const e=0===n?d:(0,l.Vy)(d);if(t){const t=new Uint16Array(s),i=new w.Tl(t,1).setUsage(o.dj0);e.setAttribute("colorIndex",i)}a[n].push(e)}}return a}createRenderPassData(e,t,i,n){const r=de.context.deref().shaderLib.getProgram(`window.${i}`),l=new a.F({uniforms:this.uniforms,...r,blending:o.bdR,depthTest:!0,depthWrite:!0,transparent:!0,...n}),c=t.map((t=>{const i=new s.K(t,l);return i.renderOrder=this.renderOrder,e.add(i),i}));return{material:l,geometries:t,meshes:c}}begin(){for(const{geometries:e}of this.renderPassData)for(const t of e)t.setDrawRange(0,0);this.count=0}emit(e){var t;const{position:i,offset:r=new n.F,displacement:o=new n.F,sizes:a,flash:s=0}=e,c=Math.floor(this.count/le),d=null===(t=this.renderPassData[0])||void 0===t?void 0:t.geometries[c];if(!d||this.count>=this.maxWindows){const{onError:e}=de.context.deref();return void e(new h("Window system",this.maxWindows))}const u=this.count%le*se,f=l.e3.create(d,"position",u),m=l.e3.create(d,"displacement",u),g=l.e3.create(d,"offset",u),p=l.e3.create(d,"sizes",u),{x:v,y:x,z:S=0}=i,y=ce(a[0]),_=ce(a[1]),w=ce(a[2]);for(let n=0;n<se;++n)f.setXYZ(v,x,S).next(),m.setVec2(o).next(),g.setVec2(r).next(),p.setXYZ(y,_,w).next();const b=l.e3.create(d,"colorIndexFlash",u);if(b){const{colorIndex:t}=e;for(let e=0;e<se;++e)b.setXY(t,s).next()}else for(let n=0;n<this.renderPassData.length;++n){const t=this.renderPassData[n].geometries[c],i=l.e3.create(t,"colorIndex",u),r=e[he[n]];for(let e=0;e<se;++e)i.setXY(r,s).next()}this.count++}end(){let e=this.count,t=0;for(;e>0;){const i=Math.min(le,e);e-=i;for(const{geometries:e}of this.renderPassData){const n=e[t];n.setDrawRange(0,18*i*3),n.getAttribute("position").needsUpdate=!0,n.getAttribute("displacement").needsUpdate=!0,n.getAttribute("offset").needsUpdate=!0,n.getAttribute("sizes").needsUpdate=!0;(n.getAttribute("colorIndex")??n.getAttribute("colorIndexFlash")).needsUpdate=!0}t++}}dispose(){var e;for(const{material:t,geometries:i,meshes:n}of this.renderPassData)n.forEach((e=>{var t;return null===(t=e.parent)||void 0===t?void 0:t.remove(e)})),t.dispose(),i.forEach((e=>e.dispose()));null===(e=this.uniforms.texture.value)||void 0===e||e.dispose(),this.uniforms.texture.value=null,this.count=0}static context=new l.gJ;static initShared(e,t){this.context.reset(e);const{shaderLib:i}=e,n={NUM_COLORS_LENGTH:32,...t.defines};i.addProgram("window.default",{vertexShader:"precision highp float;uniform mat4 modelViewMatrix;uniform mat4 projectionMatrix;uniform vec4 uColor;uniform vec2 uSize;uniform vec2 uOffset;uniform float uDisplacement;uniform float uStage;uniform float uScreenScale;uniform vec4 uColorArray[NUM_COLORS_LENGTH];\n#ifdef EXTENDED_TRANSFORMS\nuniform vec2 uRotationSkew;\n#endif\n\n#ifdef FLASH\nuniform vec4 uFlashColor;uniform float uTime;\n#endif\nattribute vec3 position;attribute vec2 displacement;attribute vec2 offset;attribute vec3 sizes;\n#ifdef FLASH\nattribute vec2 colorIndexFlash;\n#else\nattribute float colorIndex;\n#endif\nattribute float vertexIndex;varying vec2 vUV;varying vec4 vColor;varying vec4 vBorderColor;mat2 a(float b){float c=cos(b);float d=sin(b);return mat2(c,d,-d,c);}void main(){vec2 e=vec2(mod(vertexIndex,4.0),floor(vertexIndex/4.0))/3.0;vUV=e;\n#ifdef FLASH\nfloat f=colorIndexFlash.x+0.5;\n#else\nfloat f=colorIndex+0.5;\n#endif\n#ifdef SELECTION\nvec4 g=vec4(mod(floor(f/4096.0),64.0)/64.0,mod(floor(f/64.0),64.0)/64.0,mod(f,64.0)/64.0,1.0);\n#else\nint h=int(f)*2;vec4 g=uColorArray[h];\n#endif\ng*=uColor;\n#ifdef FLASH\nvec4 i=mix(uFlashColor,g,abs(sin(uTime*0.004))*0.5+0.5);g=mix(g,i,colorIndexFlash.y);\n#endif\nvColor=g;\n#ifdef BORDER\nvBorderColor=uColorArray[h+1];\n#endif\nvec2 j[3];j[0]=vec2(mod(sizes.x,256.0),floor(sizes.x/256.0));j[1]=vec2(mod(sizes.y,256.0),floor(sizes.y/256.0));j[2]=vec2(mod(sizes.z,256.0),floor(sizes.z/256.0));vec2 k;float l=clamp(uStage,0.0,1.9999);float m=l-floor(l);if(uStage<1.0){k=mix(j[0],j[1],m);}else{k=mix(j[1],j[2],m);}e-=0.5;vec2 n=k*sign(e)*0.5;n+=e*16.0;n.y-=k.y*0.5;n*=uSize;vec2 o=(n+offset+uOffset)/uScreenScale;\n#ifdef EXTENDED_TRANSFORMS\no.x+=o.y*uRotationSkew.y;o*=a(uRotationSkew.x);\n#endif\no+=position.xy+displacement*uDisplacement;gl_Position=projectionMatrix*(modelViewMatrix*vec4(o,position.z-0.1,1.0));}",fragmentShader:"precision highp float;uniform sampler2D texture;varying vec2 vUV;varying vec4 vColor;\n#ifdef BORDER\nvarying vec4 vBorderColor;\n#endif\nvoid main(){vec4 a=texture2D(texture,vUV);if(a.w<0.3){discard;}\n#ifdef BORDER\nvec4 b=vec4(vColor.xyz*a.y,a.w-a.x);gl_FragColor=(vBorderColor.xyzw*a.x+b)*vColor.w;\n#else\ngl_FragColor=a*vColor;\n#endif\n}",defines:{...n,BORDER:""}}),i.addProgram("window.selection",{vertexName:"window.default",fragmentShader:"precision highp float;uniform sampler2D texture;varying vec2 vUV;varying vec4 vColor;void main(){if(texture2D(texture,vUV).w<0.02){discard;}gl_FragColor=vColor;}",defines:{...n,SELECTION:""}}),i.addProgram("window.simple",{vertexName:"window.default",fragmentName:"window.default",defines:n}),i.addProgram("window.defaultFlash",{vertexName:"window.default",fragmentName:"window.default",defines:{...n,BORDER:"",FLASH:""}})}static releaseShared(){this.context.reset()}}const ue={BillboardSystem:x,CircleSystem:y,CloudSystem:C,ColorRectSystem:M,ConnectionSystem:L,DigitSystem:I,GeometrySystem:R,LineSystem:G,ParticleSystem:W,StencilLineSystem:Y,TextPrinter:Q,TileSystem:te,WindowSystem:de};function fe(e){let{shaderLib:t=new l.NO,vertexBufferLib:i=new oe,onError:n=(e=>{throw e}),...r}=e;const o={shaderLib:t,vertexBufferLib:i,onError:n},a={};r.extendedTransforms&&(a.EXTENDED_TRANSFORMS="");const s=Object.fromEntries(Object.keys(ue).map((e=>[e,a])));s.WindowSystem={...a,NUM_COLORS_LENGTH:r.windowColorsLength??32};for(const[l,c]of Object.entries(ue))c.initShared(o,{defines:s[l]})}function me(){for(const e of Object.values(ue))e.releaseShared()}function ge(e){return e&&"object"==typeof e&&"isRenderSystem"in e}},72342:(e,t,i)=>{i.d(t,{Zm:()=>u,KL:()=>ze,nK:()=>at,UL:()=>st,gJ:()=>ct,tm:()=>ht,NO:()=>dt,tI:()=>De,j$:()=>j,e3:()=>ut,ww:()=>pt,kA:()=>Ge,Bd:()=>Ue,M0:()=>Re,UP:()=>Be,uZ:()=>ke,qy:()=>Qe,XT:()=>se,$1:()=>J,vG:()=>s,dS:()=>q,_c:()=>R,nL:()=>S,wf:()=>y,ID:()=>w,yL:()=>Xe,qD:()=>We,aJ:()=>je,mP:()=>h,mE:()=>$e,Mg:()=>m,sZ:()=>U,yr:()=>F,yv:()=>c,H3:()=>l,wB:()=>Pe,$$:()=>Ae,TX:()=>be,EE:()=>Ce,O9:()=>Te,ht:()=>Le,Wu:()=>Ie,tT:()=>$,JG:()=>K,qR:()=>f,zj:()=>He,gr:()=>Ye,Vn:()=>ot,Db:()=>nt,Ti:()=>rt,bG:()=>Je,J0:()=>Ke,CI:()=>et,CL:()=>tt,kn:()=>Ze,fO:()=>qe,Ae:()=>N,Vy:()=>B,Qz:()=>it,hd:()=>n,bD:()=>a,$:()=>ie,N6:()=>Q,hg:()=>z,J7:()=>O});var n={};i.r(n),i.d(n,{TOTAL_KEY:()=>le,collectStatistics:()=>me,createUniforms:()=>se,flattenStats:()=>xe,forEachNumber:()=>ve,getTopUsage:()=>Se,mapNumber:()=>pe,prettyBytes:()=>ge,tagAsResourceContainer:()=>oe});const r=/^\[object (?:Float(?:32|64)|(?:Int|Uint)(?:8|16|32)|Uint8Clamped|Big(?:Int|Uint)64)Array\]$/;function o(e){return r.test(Object.prototype.toString.call(e))}function a(e,t,i,n,r){let o;for(let a=0;a<r;++a)o=e[t],e[t++]=i[n],i[n++]=o}function s(e,t){const i=.3*e.r+.59*e.g+.11*e.b;return e.r+=(i-e.r)*t,e.g+=(i-e.g)*t,e.b+=(i-e.b)*t,e}function l(e){let{r:t,g:i,b:n}=e;return(299*t+587*i+114*n)/1e3}function c(e,t,i,n){const r=(n-i)/(t-e);return t=>i+(t-e)*r}function h(e){return e.r=255*Math.min(e.r,1)>>0,e.g=255*Math.min(e.g,1)>>0,e.b=255*Math.min(e.b,1)>>0,e.a=255*Math.min(e.a,1)>>0,e}const d={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,grey:8421504,green:32768,greenyellow:11403055,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgrey:13882323,lightgreen:9498256,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662680,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14184595,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};class u{static ALL_ZEROS=Object.freeze(new u(0,0,0,0));static ALL_ONES=Object.freeze(new u(1,1,1,1));constructor(e,t,i,n){if(void 0===t){if(void 0!==e)return this.set(e);t=1}this.r=e??1,this.g=t,this.b=i??1,this.a=n??1}isColorRGBA(){}get x(){return this.r}get y(){return this.g}get z(){return this.b}get w(){return this.a}set(e){if(e)switch(typeof e){case"object":if("r"in e){const{r:t,g:i,b:n,a:r=1}=e;this.setRGBA(t,i,n,r)}else{const{x:t,y:i,z:n,w:r=1}=e;this.setRGBA(t,i,n,r)}break;case"number":this.setHex(e);break;case"string":this.setStyle(e)}return this}setRGBA(e,t,i){let n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;return this.r=e,this.g=t,this.b=i,this.a=n,this}setHex(e){return e>>>=0,this.r=(e>>>24&255)/255,this.g=(e>>>16&255)/255,this.b=(e>>>8&255)/255,this.a=(255&e)/255,this}getHSV(e){const{r:t,g:i,b:n}=this,r=Math.max(t,i,n),o=Math.min(t,i,n),a=r-o;let s;r===o?s=0:(s=r===t?(i-n)/a+(i<n?6:0):r===i?(n-t)/a+2:(t-i)/a+4,s/=6);const l=0===r?0:a/r,c=r;return e?(e.h=s,e.s=l,e.v=c):e={h:s,s:l,v:c},e}setHSV(e,t,i){const n=6*e>>>0,r=6*e-n,o=i*(1-t),a=i*(1-r*t),s=i*(1-(1-r)*t);switch(n%6){case 0:this.setRGBA(i,s,o);break;case 1:this.setRGBA(a,i,o);break;case 2:this.setRGBA(o,i,s);break;case 3:this.setRGBA(o,a,i);break;case 4:this.setRGBA(s,o,i);break;case 5:this.setRGBA(i,o,a)}return this}setStyle(e){let t;if(t=e.match(/^#([A-Fa-f0-9]+)$/)){const e=t[1];switch(e.length){case 3:this.r=parseInt(e.charAt(0)+e.charAt(0),16)/255,this.g=parseInt(e.charAt(1)+e.charAt(1),16)/255,this.b=parseInt(e.charAt(2)+e.charAt(2),16)/255,this.a=1;break;case 4:this.r=parseInt(e.charAt(0)+e.charAt(0),16)/255,this.g=parseInt(e.charAt(1)+e.charAt(1),16)/255,this.b=parseInt(e.charAt(2)+e.charAt(2),16)/255,this.a=parseInt(e.charAt(3)+e.charAt(3),16)/255;break;case 6:this.r=parseInt(e.charAt(0)+e.charAt(1),16)/255,this.g=parseInt(e.charAt(2)+e.charAt(3),16)/255,this.b=parseInt(e.charAt(4)+e.charAt(5),16)/255,this.a=1;break;case 8:this.r=parseInt(e.charAt(0)+e.charAt(1),16)/255,this.g=parseInt(e.charAt(2)+e.charAt(3),16)/255,this.b=parseInt(e.charAt(4)+e.charAt(5),16)/255,this.a=parseInt(e.charAt(6)+e.charAt(7),16)/255}}else if(t=e.match(/^rgba?\s*\(\s*([\d]+)\s*[, ]\s*([\d]+)\s*[, ]\s*([\d]+)(\s*[, ]\s*([\d.]+))?\s*\)$/))this.r=parseInt(t[1],10)/255,this.g=parseInt(t[2],10)/255,this.b=parseInt(t[3],10)/255,this.a=t[5]?parseFloat(t[5]):1;else if(e&&e.length>0){const t=d[e];void 0!==t&&(this.r=t>>16&255,this.g=t>>8&255,this.b=255&t,this.a=1)}return this}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this.a=e.a,this}setScalar(e){return this.r=e,this.g=e,this.b=e,this.a=e,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this.a+=e,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this.a*=e,this}fromArray(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this.a=e[t+3],this}toArray(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e[t+3]=this.a,e}}function f(e){return"a"===e||"r"===e||"g"===e||"b"===e}function m(e){return e<0?32768*e:32767*e}function g(e){return e&&"object"==typeof e&&"function"==typeof e.dispose}function p(e){return e&&"object"==typeof e&&"isMesh"in e}function v(e){const t=Math.min(10,e.length);for(let i=0;i<t;++i)if(g(e[i])||p(e[i]))return!0;return!1}function x(e){(function(e){return e&&"object"==typeof e&&"isShaderMaterial"in e})(e)&&Object.values(e.uniforms).map((e=>e.value)).filter(g).forEach((e=>e.dispose()))}function S(e){x(e),null==e||e.dispose()}function y(e){var t,i;e&&(null===(t=e.parent)||void 0===t||t.remove(e),null===(i=e.geometry)||void 0===i||i.dispose(),Array.isArray(e.material)?e.material.forEach(S):e.material&&S(e.material))}function _(e){g(e)?function(e){return e&&"object"==typeof e&&"isScene"in e}(e)||(x(e),e.dispose()):p(e)&&y(e)}function w(e){for(const t in e){if(!e.hasOwnProperty(t))continue;const i=e[t];if(Array.isArray(i)){if(v(i))for(let e=0;e<i.length;++e)_(i[e])}else _(i)}}i(53703);var b=i(9166),C=i(37025),P=i(78396),M=i(58375),A=i(15736),T=i(28388),L=i(26789),D=i(67585);function I(e){return e&&"object"==typeof e&&"isBufferGeometry"in e}function E(e){return e&&"object"==typeof e&&"isInterleavedBufferAttribute"in e}function R(){if(0!==this.array.length){const e=this.array.constructor;this.array=new e}}function U(e,t){const i=new b.F({vertexShader:"void main() { gl_Position = vec4(1.0); }",fragmentShader:"void main() { gl_FragColor = vec4(1.0); }"}),n=new C.x,r=new P.V;t.forEach((e=>n.add(new M.K(e,i)))),e.render(n,r)}function N(e){e.boundingSphere=new A.a(new T.P,1/0),e.boundingBox=new L.Z(new T.P(-1/0,-1/0,-1/0),new T.P(1/0,1/0,1/0))}function B(e){var t,i;const n=new D.u;n.name=e.name,n.setIndex(e.getIndex());for(const[r,o]of Object.entries(e.attributes))n.setAttribute(r,o);for(const[r,o]of Object.entries(e.morphAttributes))n.morphAttributes[r]=o;n.morphTargetsRelative=e.morphTargetsRelative;for(const{start:r,count:o,materialIndex:a}of e.groups)n.addGroup(r,o,a);return n.boundingBox=(null===(t=e.boundingBox)||void 0===t?void 0:t.clone())??null,n.boundingSphere=(null===(i=e.boundingSphere)||void 0===i?void 0:i.clone())??null,n.drawRange.start=e.drawRange.start,n.drawRange.count=e.drawRange.count,n}function F(e,t){const i=[];for(const n of Object.values(e.attributes)){const e=E(n)?n.data:n;t&&t(e)&&(i.includes(e)||i.push(e))}return i}function O(e){return e.stride??e.itemSize}function z(e){if(!o(e.array))return 0;let t=O(e)*e.array.BYTES_PER_ELEMENT*e.count;return t+=e.array.byteLength,t}function k(e){if(!e)return 0;return z(E(e)?e.data:e)}function V(e){if(!I(e))return 0;let t=k(e.index);const i=new Set;for(const n of Object.values(e.attributes)){if(E(n)){if(i.has(n.data))continue;i.add(n.data)}t+=k(n)}return t}var G=i(18498);function H(e){return e&&"object"==typeof e&&"isTexture"in e}function W(e){return e&&"object"==typeof e&&"isCompressedTexture"in e}function X(e){return e&&"object"==typeof e&&"isWebGLRenderTarget"in e}let j;!function(e){e.ASTC="astc",e.ETC="etc",e.ETC1="etc1",e.PVRTC="pvrtc",e.S3TC="s3tc",e.NONE="none"}(j||(j={}));const Y=[[j.ASTC,"WEBGL_compressed_texture_astc"],[j.ETC,"WEBGL_compressed_texture_etc"],[j.S3TC,"WEBGL_compressed_texture_s3tc"]];function q(e){for(const[t,i]of Y)if(e.getExtension(i))return t;return j.NONE}function Z(e,t){if(t)switch(e){case G.TyD:return G.YLQ;case G.wem:return G.aH4}else switch(e){case G.YLQ:case G.qyh:return G.TyD;case G.aH4:case G.D1R:return G.wem}return e}function $(e,t){e.image=t,e.format=G.wk1,e.type=G.ywz,e.minFilter=Z(e.minFilter,e.generateMipmaps),e.needsUpdate=!0}function K(e,t){const i=t.mipmaps(),n=i.length;e.image={width:t.pixelWidth,height:t.pixelHeight},0===t.glType?(e.format=t.glInternalFormat,e.mipmaps=i,e.unpackAlignment=4,e.flipY=!1,e.generateMipmaps=!1,Object.defineProperty(e,"isCompressedTexture",{value:!0})):(e.format=function(e){switch(e){case 6406:return G.OTo;case 6408:return G.wk1;case 6409:return G.Y8D;case 6410:return G.cRx;case 6402:return G.qkB;case 34041:return G.brP;default:return}}(t.glFormat)??G.wk1,e.type=function(e){switch(e){case 5120:return G.T95;case 5121:return G.ywz;case 5122:return G.iAb;case 5123:return G.LsT;case 5124:return G.Kz5;case 5125:return G.JQ4;case 5126:return G.VzW;case 5131:return G.cLu;case 32819:return G.k0A;case 32820:return G.irR;default:return}}(t.glType)??G.ywz,e.unpackAlignment=4,e.flipY=!1,1===n&&(t.pixelWidth>1||t.pixelHeight>1)?e.image.data=i[0].data:(e.mipmaps=i,e.generateMipmaps=!1),Object.defineProperty(e,"isDataTexture",{value:!0})),e.minFilter=Z(e.minFilter,n>1||e.generateMipmaps),e.needsUpdate=!0}function J(e){const{width:t,height:i}=e.image;e.image={width:t,height:i},e.mipmaps=[]}function Q(e,t){let i=!1;for(const[n,r]of Object.entries(t))e[n]===r||"generateMipmaps"===n&&W(e)&&r||(e[n]=r,i=!0);return i&&(e.needsUpdate=!0),e}function ee(e){switch(e){case G.ywz:case G.T95:return 1;case G.iAb:case G.LsT:return 2;case G.Kz5:case G.JQ4:case G.VzW:return 4;case G.cLu:case G.k0A:case G.irR:return 2;case G.wJv:return 4;default:return 0}}function te(e){switch(e){case G.OTo:case G.qkB:case G.Y8D:case G.hEm:case G.D9w:return 1;case G.cRx:case G.brP:case G.av9:case G.CtA:return 2;case G.wk1:case G.E2K:return 4;default:return 0}}function ie(e){var t,i;if(!H(e))return 0;const{width:n,height:r}=e.image??{};if(!Number.isFinite(n)||n<=0||!Number.isFinite(r)||r<=0)return 0;let o=Math.max(1,(null===(t=e.mipmaps)||void 0===t?void 0:t.length)??0);1===o&&(e.generateMipmaps||function(e){switch(e){case G.YLQ:case G.aH4:case G.qyh:case G.D1R:return!0;default:return!1}}(e.minFilter))&&(o=function(e,t){return 1+Math.floor(Math.log2(Math.max(e,t)))}(n,r));let a=0;const[s,l,c]=function(e,t){switch(e){case G.wuA:case G.BFQ:return[4,4,8];case G.v3W:case G.ILR:return[4,4,16];case G.fto:case G.l0P:return[4,4,8];case G.ekQ:case G.ptH:return[4,4,16];case G.y2t:return[5,5,16];case G.Djp:return[6,6,16];case G.xJs:return[8,8,16];case G.FUD:return[10,10,16];case G.SvJ:return[12,12,16]}return[1,1,ee(t)*te(e)]}(e.format,e.type);let h=Math.floor((n+s-1)/s),d=Math.floor((r+l-1)/l);for(let m=0;m<o;++m)a+=h*d*c,h=Math.max(1,h>>>1),d=Math.max(1,d>>>1);const u=e=>e instanceof ImageData?e.data.byteLength:0;a+=u(e.image);const f=null===(i=e.mipmaps)||void 0===i?void 0:i.reduce(((e,t)=>e+u(t)),0);return f>0&&(a+=f),a}function ne(e){const t=e.width*e.height;let i=0;if(e.texture){i=t*(ee(e.texture.type)*te(e.texture.format))}let n=0;if(e.depthBuffer){n+=t*2}e.depthTexture&&(n+=ie(e.depthTexture));let r=0;if(e.stencilBuffer){r+=t*1}return{color:i,depth:n,stencil:r}}function re(e){return e&&"object"==typeof e&&!0===e.isResourceContainer}function oe(e){Object.defineProperty(e,"isResourceContainer",{value:!0,enumerable:!1})}function ae(e){return e&&"object"==typeof e&&"string"==typeof e.$name}function se(e){Object.defineProperty(e,"$name",{value:"uniforms",enumerable:!1});return Object.defineProperty(e,"textures",{get:()=>Object.values(e).filter((e=>H(e.value))).map((e=>e.value)),enumerable:!1}),e}const le="$total",ce=(e,t)=>e+t;function he(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1/0;t=Math.min(t,e.length);let i=0;for(;(void 0===e[i]||null===e[i])&&i<t;)i++;return i<t&&"object"==typeof e[i]?i:-1}function de(e){for(var t=arguments.length,i=new Array(t>1?t-1:0),n=1;n<t;n++)i[n-1]=arguments[n];for(const[r,o]of Object.entries(e))if(o>0)for(const e of i)e[r]=(e[r]??0)+o}function ue(e,t){return!t.has(e.uuid)&&(t.add(e.uuid),!0)}function fe(e,t){const i=e=>ue(e,t),n={},{vertexBuffers:r,textures:o,batchCount:a}=e;if(r)n.geometry=r.map(z).reduce(ce,0);else{const{geometries:t}=e;t&&(n.geometry=t.filter(i).map(V).reduce(ce,0))}return o&&(n.texture=o.filter(i).map(ie).reduce(ce,0)),a&&(n.batchCount=a),n}function me(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new Set,i={},n={geometry:0},r={},o={texture:0},a={},s={texture:0},l={},c={},h={},d={geometry:0,texture:0,batchCount:0};const u=[],f=[],m=e=>ue(e,t),g=e=>{let i=t.has(e.texture.uuid);return i||t.add(e.texture.uuid),e.depthTexture&&(t.has(e.depthTexture.uuid)?i=!0:t.add(e.depthTexture.uuid)),!i},p=(e,t,i)=>{const n=l[e]??{};l[e]=n,n[t]=i;const r=c[e]??{};c[e]=r,Array.isArray(i)?i.forEach((e=>de(e,r,d))):de(i,r,d)};for(const[x,S]of Object.entries(e))if(S&&"object"==typeof S&&("string"!=typeof S.uuid||m(S)))if(I(S)){const e=V(S);i[x]=e,de({geometry:e},n,d)}else if(H(S)){const e=ie(S);r[x]=e,de({texture:e},o,d)}else if(X(S)){if(g(S)){const e=ne(S);a[x]=e,de({texture:Object.values(e).reduce(ce,0)},s,d)}}else if(ae(S))u.push([x,S]);else if(re(S))f.push([x,S]);else if(Array.isArray(S)){const e=he(S,10);if(-1!==e)if(I(S[e])){const e=S.filter(I).filter(m).map(V);i[x]=e,de({geometry:e.reduce(ce,0)},n,d)}else if(H(S[e])){const e=S.filter(H).filter(m).map(ie);r[x]=e,de({texture:e.reduce(ce,0)},o,d)}else if(X(S[e])){const e=S.filter(X).filter(g).map(ne);a[x]=e,de({texture:e.flatMap(Object.values).reduce(ce,0)},s,d)}else ae(S[e])?u.push([x,S]):re(S[e])&&f.push([x,S])}for(const[x,S]of u)if(Array.isArray(S)){const e=S.filter(ae).map((e=>fe(e,t)));p(S[he(S)].$name,x,e)}else p(S.$name,x,fe(S,t));for(const[x,S]of f)if(Array.isArray(S))h[x]=S.filter(re).map((e=>me(e,t))),h[x].forEach((e=>de(e[le],d)));else{const e=me(S,t);h[x]=e,de(e[le],d)}const v={};Object.keys(i).length>0&&(v.geometry=i),Object.keys(r).length>0&&(v.texture=r),Object.keys(a).length>0&&(v.target=a);for(const[x,S]of Object.entries(l))S[le]=c[x],v[x]=S;return Object.assign(v,h),v[le]=d,v}function ge(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:3;if(!Number.isFinite(e)||e<=0)return"0";const n=["","K","M","G","T"],r=t?1e3:1024,o=Math.min(n.length-1,Math.floor(Math.log(e)/Math.log(r)));return`${1*(e/Math.pow(1024,o)).toFixed(i)}${n[o]}`}function pe(e,t){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[];return"number"==typeof e?t(e,i):Array.isArray(e)?e.map((e=>pe(e,t,i))):"object"==typeof e&&e?Object.fromEntries(Object.entries(e).map((e=>{let[n,r]=e;return i.push(n),r=pe(r,t,i),i.pop(),[n,r]}))):e}function ve(e,t){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[];if("number"==typeof e)t(e,i);else if(Array.isArray(e))e.forEach((e=>ve(e,t,i)));else if("object"==typeof e&&e)for(const[n,r]of Object.entries(e))i.push(n),ve(r,t,i),i.pop()}function xe(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:()=>!0,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"/";const n=[];return ve(e,((e,r)=>{t(e,r)&&n.push([r.join(i),e])})),n}function Se(e){const t=xe(e,((e,t)=>e>0&&!t.includes(le)));return t.sort(((e,t)=>{let[,i]=e,[,n]=t;return n-i})),t}i(5741),i(19202);const ye=new Uint8Array(20),_e=new Int32Array(ye.buffer),we=new Float32Array(ye.buffer);function be(){let e=3735928559,t=1103547991;for(var i=arguments.length,n=new Array(i),r=0;r<i;r++)n[r]=arguments[r];for(const o of n){_e[0]=o;for(let i=0;i<4;++i)e=Math.imul(e^ye[i],2654435761),t=Math.imul(t^ye[i],1597334677)}return e=Math.imul(e^e>>>16,2246822507)^Math.imul(t^t>>>13,3266489909),t=Math.imul(t^t>>>16,2246822507)^Math.imul(e^e>>>13,3266489909),4294967296*(2097151&t)+(e>>>0)}function Ce(e,t){_e[0]=e,_e[1]=t;let i=3735928559,n=1103547991;for(let r=0;r<8;++r)i=Math.imul(i^ye[r],2654435761),n=Math.imul(n^ye[r],1597334677);return i=Math.imul(i^i>>>16,2246822507)^Math.imul(n^n>>>13,3266489909),n=Math.imul(n^n>>>16,2246822507)^Math.imul(i^i>>>13,3266489909),4294967296*(2097151&n)+(i>>>0)}function Pe(e,t){we[0]=e,we[1]=t;let i=3735928559,n=1103547991;for(let r=0;r<8;++r)i=Math.imul(i^ye[r],2654435761),n=Math.imul(n^ye[r],1597334677);return i=Math.imul(i^i>>>16,2246822507)^Math.imul(n^n>>>13,3266489909),n=Math.imul(n^n>>>16,2246822507)^Math.imul(i^i>>>13,3266489909),4294967296*(2097151&n)+(i>>>0)}function Me(e,t,i,n){we[0]=e,we[1]=t,we[2]=i,we[3]=n;let r=3735928559,o=1103547991;for(let a=0;a<16;++a)r=Math.imul(r^ye[a],2654435761),o=Math.imul(o^ye[a],1597334677);return r=Math.imul(r^r>>>16,2246822507)^Math.imul(o^o>>>13,3266489909),o=Math.imul(o^o>>>16,2246822507)^Math.imul(r^r>>>13,3266489909),4294967296*(2097151&o)+(r>>>0)}function Ae(e,t,i,n,r){we[0]=e,we[1]=t,we[2]=i,we[3]=n,we[3]=r;let o=3735928559,a=1103547991;for(let s=0;s<20;++s)o=Math.imul(o^ye[s],2654435761),a=Math.imul(a^ye[s],1597334677);return o=Math.imul(o^o>>>16,2246822507)^Math.imul(a^a>>>13,3266489909),a=Math.imul(a^a>>>16,2246822507)^Math.imul(o^o>>>13,3266489909),4294967296*(2097151&a)+(o>>>0)}function Te(e,t,i,n){return e>i||e===i&&t>n?Me(i,n,e,t):Me(e,t,i,n)}function Le(e,t){return Te(e.x,e.y,t.x,t.y)}class De{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;this.h1=3735928559^e,this.h2=1103547991^e}update(e){for(let t,i=0;i<e.length;i++)t=e.charCodeAt(i),this.h1=Math.imul(this.h1^t,2654435761),this.h2=Math.imul(this.h2^t,1597334677);return this}code(){let{h1:e,h2:t}=this;return e=Math.imul(e^e>>>16,2246822507)^Math.imul(t^t>>>13,3266489909),t=Math.imul(t^t>>>16,2246822507)^Math.imul(e^e>>>13,3266489909),4294967296*(2097151&t)+(e>>>0)}}function Ie(e,t){return new De(t).update(e).code()}const Ee=1e-6;function Re(e,t,i,n,r,o){return!(r<e||r>i||o<t||o>n)}function Ue(e,t,i,n,r,o,a,s){return e<=r&&a<=i&&t<=o&&s<=n}function Ne(e,t,i){const[n,r]=i;if(Math.abs(t)<Ee)return e<0;const o=e/t;if(t>0){if(o>r)return!1;o>n&&(i[0]=o)}else{if(o<n)return!1;o<r&&(i[1]=o)}return!0}function Be(e,t,i,n,r,o,a,s){return function(e,t,i,n,r){const[o,a]=e,[s,l]=t,c=s-o,h=l-a;if(void 0===n||void 0===r?(n=e,r=t):(n[0]=e[0],n[1]=e[1],r[0]=t[0],r[1]=t[1]),Math.abs(c)<Ee&&Math.abs(h)<Ee&&o>=i[0]&&o<=i[2]&&a>=i[1]&&a<=i[3])return!0;const d=[0,1];if(Ne(i[0]-o,c,d)&&Ne(o-i[2],-c,d)&&Ne(i[1]-a,h,d)&&Ne(a-i[3],-h,d)){const[e,t]=d;return t<1&&(r[0]=o+t*c,r[1]=a+t*h),e>0&&(n[0]+=e*c,n[1]+=e*h),!0}return!1}([r,o],[a,s],[e,t,i,n])}i(37554);function Fe(e){return 4*Math.floor((e+3)/4)}class Oe extends Error{constructor(e){super(e),this.name="KTXError"}}class ze{static HEADER_LEN=64;static MAX_TEXTURE_SIZE=4096;static MAX_ARRAY_TEXTURE_LAYERS=256;constructor(e){if(this.arrayBuffer=e,this.arrayBuffer.byteLength<ze.HEADER_LEN)throw new Oe("Buffer too small for KTX header");const t=new Uint8Array(this.arrayBuffer,0,12);if(171!==t[0]||75!==t[1]||84!==t[2]||88!==t[3]||32!==t[4]||49!==t[5]||49!==t[6]||187!==t[7]||13!==t[8]||10!==t[9]||26!==t[10]||10!==t[11])throw new Oe("Texture missing KTX identifier");const i=Uint32Array.BYTES_PER_ELEMENT,n=new DataView(this.arrayBuffer,12,13*i),r=67305985===n.getUint32(0,!0),o=e=>n.getUint32(e*i,r);this.glType=o(1),this.glTypeSize=o(2),this.glFormat=o(3),this.glInternalFormat=o(4),this.glBaseInternalFormat=o(5),this.pixelWidth=o(6),this.pixelHeight=o(7),this.pixelDepth=o(8),this.numberOfArrayElements=o(9),this.numberOfFaces=o(10),this.numberOfMipmapLevels=o(11),this.bytesOfKeyValueData=o(12);const{MAX_TEXTURE_SIZE:a,MAX_ARRAY_TEXTURE_LAYERS:s}=ze;if(this.pixelWidth<1||this.pixelWidth>a)throw new Oe("Invalid pixel width");if(this.pixelHeight>a)throw new Oe("Invalid pixel height");if(this.pixelDepth>a)throw new Oe("Invalid pixel depth");if(this.numberOfArrayElements>s)throw new Oe("Invalid number of array elements");if(1!==this.numberOfFaces&&6!==this.numberOfFaces)throw new Oe("Invalid number of cube faces");if(this.numberOfMipmapLevels>1&&this.numberOfMipmapLevels>(l=this.pixelWidth,c=this.pixelHeight,h=this.pixelDepth,1+Math.floor(Math.log2(Math.max(l,c,h)))))throw new Oe("Invalid number of mipmap levels");var l,c,h;let d;try{d=this.expectedByteSize()}catch(u){d=1/0}if(this.arrayBuffer.byteLength<d)throw new Oe("Buffer too small for image data");if(0===this.pixelHeight)throw new Oe("1D textures not supported");if(0!==this.pixelDepth)throw new Oe("3D textures not supported");if(0!==this.numberOfArrayElements)throw new Oe("Texture arrays not supported");if(1!==this.numberOfFaces)throw new Oe("Cube textures not supported");0===this.glType&&(this.numberOfMipmapLevels=Math.max(1,this.numberOfMipmapLevels))}iterateData(e){const t=Math.max(1,this.numberOfMipmapLevels),i=Math.max(1,this.numberOfArrayElements),n=this.numberOfFaces,r={offset:ze.HEADER_LEN+this.bytesOfKeyValueData,imageSize:0,width:this.pixelWidth,height:Math.max(1,this.pixelHeight),depth:Math.max(1,this.pixelDepth),face:0,element:0,level:(0,0)};for(;r.level<t;++r.level){for(r.imageSize=new Uint32Array(this.arrayBuffer,r.offset,1)[0],r.offset+=4,r.element=0;r.element<i;++r.element)for(r.face=0;r.face<n;r.face++)e(r),r.offset+=r.imageSize,r.offset=Fe(r.offset);r.offset=Fe(r.offset),r.width=Math.max(1,Math.floor(r.width/2)),r.height=Math.max(1,Math.floor(r.height/2)),r.depth=Math.max(1,Math.floor(r.depth/2))}}expectedByteSize(){let e=0;return this.iterateData((t=>{let{offset:i,imageSize:n}=t;e=i+n})),e}mipmaps(){let e=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];const t=[];return this.iterateData((i=>{let{offset:n,imageSize:r,width:o,height:a,level:s,element:l,face:c}=i;if(0!==l||0!==c)return;if(!e&&0!==s)return;const h=new Uint8ClampedArray(this.arrayBuffer,n,r);t.push({data:h,width:o,height:a})})),t}}const ke=(e,t,i)=>Math.max(Math.min(e,i),t),Ve=e=>Math.sign(e)*Math.round(Math.abs(e));function Ge(e,t,i,n){return[e+.5*(i-e),t+.5*(n-t)]}function He(e,t){return Math.sqrt(e*e+t*t)}function We(e,t,i,n){return(r=e-i)*r+(o=t-n)*o;var r,o}function Xe(e,t,i,n){return He(e-i,t-n)}function je(e,t,i,n){return e*i+t*n}function Ye(e,t){const i=He(e,t),n=0===i?0:1/i;return[e*n,t*n]}function qe(e,t){return[t,-e]}function Ze(e,t){return[-t,e]}function $e(e,t,i,n){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1e-6;return Math.abs(Math.atan2(t,e)-Math.atan2(n,i))<r}function Ke(e,t,i,n,r,o){const a=r-i,s=o-n,l=((e-i)*a+(t-n)*s)/(a*a+s*s);let c,h;l<0||i===r&&n===o?(c=i,h=n):l>1?(c=r,h=o):(c=i+l*a,h=n+l*s);const d=e-c,u=t-h;return d*d+u*u}function Je(e,t,i,n,r,o){return Math.sqrt(Ke(e,t,i,n,r,o))}function Qe(e,t,i,n,r,o){if(i===r&&n===o)return[i,n];let a,s;if(i===r)a=i,s=t;else if(n===o)a=e,s=n;else{const l=(n-o)/(i-r),c=-1/l;a=(-1*c*e+t-n+l*i)/(l-c),s=l*(a-i)+n}return Je(a,s,i,n,r,o)>.1?We(a,s,i,n)<We(a,s,r,o)?[i,n]:[r,o]:[a,s]}function et(e,t,i){let n=!1;const r=e.length;for(let o=0,a=r-1;o<r;a=o++){const{x:r,y:s}=e[o],{x:l,y:c}=e[a];s>i!=c>i&&t<(l-r)*(i-s)/(c-s)+r&&(n=!n)}return n}function tt(e,t,i){let n=!1;const r=e.length/2;for(let o=0,a=r-1;o<r;a=o++){const r=e[2*o],s=e[2*o+1],l=e[2*a],c=e[2*a+1];s>i!=c>i&&t<(l-r)*(i-s)/(c-s)+r&&(n=!n)}return n}function it(e,t){return e.some((e=>et(e,t.x,t.y)))}function nt(e,t,i){return Ve(t)+e+2*(Ve(i)+e)*e}function rt(e,t,i){return Math.round(t)+Math.round(i)*e}function ot(e){let t=0,i=7;for(let n=0,r=Math.min(arguments.length<=1?0:arguments.length-1,8);n<r;++n)t|=Number(n+1<1||arguments.length<=n+1?void 0:arguments[n+1])<<i,--i;return t|=Math.min(254,Math.max(0,Math.floor(255*e)))>>7-i,t/255}class at{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:e.length/2;this.array=e,this.start=t,this.end=i;const n=e.length/2;if(e.length%2!=0)throw new Error("invalid length for flattened 2d point array");if(t<0||t>=n)throw new Error("start not within range of point array");if(t>i)throw new Error("end less than start offset in point array");this.length=i-t}at(e){const t=(this.start+e<<1)%this.array.length;return[this.array[t],this.array[t+1]]}}class st{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;this.x=e,this.y=t,this.width=i,this.height=n}isRect(){}get centerX(){return this.x+this.width/2}get centerY(){return this.y+this.height/2}set(e,t,i,n){return this.x=e,this.y=t,this.width=i,this.height=n,this}copy(e){return this.x=e.x,this.y=e.y,this.width=e.width,this.height=e.height,this}reset(){return this.set(0,0,0,0)}clone(){return new st(this.x,this.y,this.width,this.height)}isEmpty(){return this.width<=0||this.height<=0}contains(e){const{x:t,y:i,width:n,height:r}=this;return e.x>=t&&e.x<=t+n&&e.y>=i&&e.y<=i+r}intersects(e){const{x:t,y:i,width:n,height:r}=this,{x:o,y:a,width:s,height:l}=e;return o<=t+n&&o+s>=t&&a<=i+r&&a+l>=i}intersection(e){const t=Math.max(this.x,e.x),i=Math.min(this.x+this.width,e.x+e.width);if(t<=i){const n=Math.max(this.y,e.y),r=Math.min(this.y+this.height,e.y+e.height);if(n<=r)return new st(t,n,i-t,r-n)}return null}intersectsLineSegment(e,t){const i=Math.min(e.x,t.x),n=Math.min(e.y,t.y),r=Math.max(e.x,t.x)-i,o=Math.max(e.y,t.y)-n,{x:a,y:s,width:l,height:c}=this;return a<=i+r&&a+l>=i&&s<=n+o&&s+c>=n}difference(e){if(e.width<=0||e.height<=0||!this.intersects(e))return[this.clone()];const t=[];let i=this.y,{height:n}=this;const r=this.x+this.width,o=this.y+this.height,a=e.x+e.width,s=e.y+e.height;return e.y>this.y&&(t.push(new st(this.x,this.y,this.width,e.y-this.y)),i=e.y,n-=e.y-this.y),s<o&&(t.push(new st(this.x,s,this.width,o-s)),n=s-i),e.x>this.x&&t.push(new st(this.x,i,e.x-this.x,n)),a<r&&t.push(new st(a,i,r-a,n)),t}union(e){if(e)if(0===this.width||0===this.height)this.copy(e);else if(e.width>0&&e.height>0){const t=Math.max(this.x+this.width,e.x+e.width),i=Math.max(this.y+this.height,e.y+e.height);this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.width=t-this.x,this.height=i-this.y}return this}addPoint(e,t){return 0===this.x&&0===this.width?this.x=e:e<this.x?(this.width+=this.x-e,this.x=e):e>this.x+this.width&&(this.width=e-this.x),0===this.y&&0===this.height?this.y=t:t<this.y?(this.height+=this.y-t,this.y=t):t>this.y+this.height&&(this.height=t-this.y),this}scale(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e;return this.x*=e,this.y*=t,this.width*=e,this.height*=t,this}translate(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return this.x+=e,this.y+=t,this}pad(e,t){return this.x-=e,this.y-=t,this.width+=e+e,this.height+=t+t,this}equals(e){if(!(e instanceof st))return!1;const{x:t,y:i,width:n,height:r}=this,{x:o,y:a,width:s,height:l}=e;return t===o&&i===a&&n===s&&r===l}toBoundsArray(){return[this.x,this.y,this.x+this.width,this.y+this.height]}toString(){const{x:e,y:t,width:i,height:n}=this;return`[${[e,t,i,n].join(", ")}]`}toFixed(e){const{x:t,y:i,width:n,height:r}=this;return`[${[t,i,n,r].map((t=>t.toFixed(e))).join(", ")}]`}}class lt extends Error{constructor(e){super(e),this.name="InvalidReferenceError"}}class ct{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;this.ref=e}reset(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;this.ref=e}deref(){if(!this.ref)throw new lt;return this.ref}}class ht{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:44218;this.seed=e}next(){return this.seed=(9301*this.seed+49297)%233280,this.seed/233280}}class dt{sources={vertex:new Map,fragment:new Map};programs=new Map;addSource(e,t,i){var n;return null===(n=this.sources[e])||void 0===n||n.set(t,i),this}getSource(e,t){var i;const n=null===(i=this.sources[e])||void 0===i?void 0:i.get(t);if(void 0===n)throw new Error(`Unknown ${e} shader source '${t}'`);return n}hasSource(e,t){var i;return!0===(null===(i=this.sources[e])||void 0===i?void 0:i.has(t))}addProgram(e,t){let i=t.vertexName;if(i){if(!this.hasSource("vertex",i))throw new Error(`Program '${e}': Unknown vertex shader '${i}'`)}else{if(!t.vertexShader)throw new Error(`Program '${e}': No vertex shader specified`);this.addSource("vertex",e,t.vertexShader),i=e}let n=t.fragmentName;if(n){if(!this.hasSource("fragment",n))throw new Error(`Program '${e}': Unknown fragment shader '${n}'`)}else{if(!t.fragmentShader)throw new Error(`Program '${e}': No fragment shader specified`);this.addSource("fragment",e,t.fragmentShader),n=e}return this.programs.set(e,{vertex:i,fragment:n,...t.defines?{defines:t.defines}:{}}),this}getProgram(e){const t=this.programs.get(e);if(void 0===t)throw new Error(`Unknown gpu program '${e}'`);const i={vertexShader:this.getSource("vertex",t.vertex),fragmentShader:this.getSource("fragment",t.fragment)};return t.defines&&(i.defines=t.defines),i}hasProgram(e){return this.programs.has(e)}compile(e){if(0===this.programs.size)return;const t=[];for(const o of this.programs.keys())t.push(new b.F(this.getProgram(o)));const i=new M.K(void 0,t),n=new P.V,r=`Compiling ${t.length} GPU programs`;console.time(r),e.compile(i,n),console.timeEnd(r)}}class ut{constructor(e){let t,i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;if(!o(e.array))throw new Error("Not a typed array");this.array=e.array,E(e)?(this.stride=e.data.stride,({offset:t}=e)):(this.stride=e.itemSize,t=0),this._offset=t+i*this.stride}static create(e,t,i){const n=e.getAttribute(t);return n?new ut(n,i):void 0}static createIndex(e,t){const i=e.getIndex();return i?new ut(i,t):void 0}get offset(){return this._offset}get index(){return this._offset/this.stride>>>0}get capacity(){return this.array.length/this.stride}get valid(){return this._offset<this.array.length}next(){return this._offset+=this.stride,this}getX(){return this.array[this._offset]}setX(e){return this.array[this._offset]=e,this}getY(){return this.array[this._offset+1]}setY(e){return this.array[this._offset+1]=e,this}getZ(){return this.array[this._offset+2]}setZ(e){return this.array[this._offset+2]=e,this}getW(){return this.array[this._offset+3]}setW(e){return this.array[this._offset+3]=e,this}setXY(e,t){return this.array[this._offset]=e,this.array[this._offset+1]=t,this}setXYZ(e,t,i){return this.array[this._offset]=e,this.array[this._offset+1]=t,this.array[this._offset+2]=i,this}setXYZW(e,t,i,n){return this.array[this._offset]=e,this.array[this._offset+1]=t,this.array[this._offset+2]=i,this.array[this._offset+3]=n,this}setVec2(e){return this.setXY(e.x,e.y)}setVec3(e){return this.setXYZ(e.x,e.y,e.z)}setVec4(e){return this.setXYZW(e.x,e.y,e.z,e.w)}}var ft=i(84232),mt=i(45899),gt=i(89176);class pt{attributes=[];constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],i=0,n=4;for(const[o,a,s,l=!1]of e){if(s<=0)throw new Error(`invalid size ${s} for attribute "${o}"`);const e=a.BYTES_PER_ELEMENT,r=Math.max(e,4),c=i%r;if(0!==c){if(!t)throw new Error(`misaligned attribute "${o}" ${a.name} at offset ${i}`);i+=r-c}this.attributes.push({name:o,type:a,normalized:l,size:s,offset:i}),i+=e*s,n=Math.max(n,r)}const r=i%n;if(0!==r){if(!t)throw new Error("vertex not packed");i+=n-r}this.byteLength=i}createAttributes(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:G.W2J,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:t===G.W2J;const n=[];for(const{name:r,type:o,normalized:a,size:s}of this.attributes){const l=new o(e*s),c=new ft.Tl(l,s,a).setUsage(t);i&&c.onUpload(R),n.push([r,c])}return n}createInterleavedAttributes(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:G.W2J,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:t===G.W2J;const n=new Map;for(const{name:o,type:a,normalized:s,size:l}of this.attributes){const e=[o,a,l,s],t=n.get(a);t?t.push(e):n.set(a,[e])}const r=[];for(const[o,a]of n){if(1===a.length){const[[n,,s,l]]=a,c=new o(e*s),h=new ft.Tl(c,s,l).setUsage(t);i&&h.onUpload(R),r.push([n,h]);continue}const n=new pt(a),s=o.BYTES_PER_ELEMENT,l=n.byteLength/s,c=new o(e*l),h=new mt.v(c,l).setUsage(t);i&&h.onUpload(R);for(const{name:e,normalized:t,size:i,offset:o}of n.attributes){const n=new gt.k(h,i,o/s,t);r.push([e,n])}}return r}createGeometry(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const{interleave:i=!0,usage:n=G.W2J,disposeOnUpload:r=n===G.W2J}=t,o=new D.u,a=this[i?"createInterleavedAttributes":"createAttributes"](e,n,r);for(const[s,l]of a)o.setAttribute(s,l);return o}}},4307:(e,t,i)=>{i.r(t),i.d(t,{default:()=>n});const n="precision highp float;uniform mat4 modelViewMatrix;uniform mat4 projectionMatrix;uniform vec4 uBlurRect;uniform vec4 uMapRect;uniform float uVerticalScale;attribute vec3 position;attribute vec2 uv;varying vec2 vUV;varying vec2 vMapUV;varying vec2 vBlurUV;varying vec3 vPosition;void main(){vUV=uv;vMapUV=uMapRect.xy+uv*uMapRect.zw;vMapUV.y*=uVerticalScale;vBlurUV=uBlurRect.xy+uv*uBlurRect.zw;vec4 a=modelViewMatrix*vec4(position,1.0);vPosition=a.xyz;gl_Position=projectionMatrix*a;}"},74389:(e,t,i)=>{i.r(t),i.d(t,{default:()=>n});const n="precision highp float;uniform sampler2D sPaperNormal;uniform sampler2D sReliefTarget;uniform sampler2D sFowTarget;uniform float uScale;uniform vec3 uLightPosition;uniform vec3 uHighlightColor;uniform float uHighlightPow;uniform float uLightPower;uniform float uAmbient;varying vec4 vColor;varying vec3 vPosition;varying vec3 vNormal;varying vec2 vUV;varying vec2 vRUV;varying float vCoastAlpha;vec3 a(vec4 b){vec2 c=b.xw*2.0-1.0;return vec3(c.x,c.y,sqrt(1.0-(c.x*c.x+c.y*c.y)));}void main(){vec3 d=uLightPosition/uScale;vec3 e=a(texture2D(sPaperNormal,vUV*0.004));vec4 f=texture2D(sReliefTarget,vRUV);vec4 g=texture2D(sFowTarget,vRUV);vec3 h=f.xyz*2.0-1.0;h.y=-h.y;vec3 i=normalize(vNormal);vec3 j=vec3(0.0,0.0,-1.0);vec3 k=normalize(mix(e+vNormal,h,f.w));vec3 l=normalize(d-vPosition);float m=dot(l,k)*uLightPower+uAmbient;vec3 n=reflect(l,k);float o=max(dot(n,j),0.0);float p=(1.0-i.z)*128.0;float q=min(0.15+f.w*0.15+p,0.5);float r=(min(0.8+f.w*0.2+p,1.0)-f.w*0.2);float s=mod(g.z,0.5)*2.0;q+=s*0.2;r=r*(1.0+s)-s;float t=pow(o,uHighlightPow*(1.0-s)+s*2.0);vec3 u=max(vColor.xyz*m*r+uHighlightColor*t*q,vec3(1.0/256.0));gl_FragColor=vec4(mix(u,vColor.xyz,0.3+g.y*0.6),vColor.w);}"},39279:(e,t,i)=>{i.r(t),i.d(t,{default:()=>n});const n="precision highp float;uniform mat4 modelViewMatrix;uniform mat4 projectionMatrix;attribute vec3 position;attribute vec4 color;attribute vec4 normal;varying vec4 vColor;varying vec3 vPosition;varying vec3 vNormal;varying vec2 vUV;varying vec2 vRUV;varying float vCoastAlpha;void main(){vColor=color;vUV=position.xy;vCoastAlpha=min(mod(color.w,0.5)*3.0,1.0);vNormal=normal.xyz*2.0-1.0;vec4 a=modelViewMatrix*vec4(position.xyz,1.0);vPosition=a.xyz;gl_Position=projectionMatrix*a;vRUV=gl_Position.xy/2.0+0.5;}"},63796:(e,t,i)=>{i.r(t),i.d(t,{default:()=>n});const n="precision highp float;varying vec4 vColor;void main(){gl_FragColor=vColor;}"},73508:(e,t,i)=>{i.r(t),i.d(t,{default:()=>n});const n="precision highp float;uniform mat4 modelViewMatrix;uniform mat4 projectionMatrix;attribute vec3 position;attribute vec4 color;varying vec4 vColor;void main(){vColor=color;vec4 a=modelViewMatrix*vec4(position.xyz,1.0);gl_Position=projectionMatrix*a;}"},81773:(e,t,i)=>{i.r(t),i.d(t,{default:()=>n});const n="precision highp float;uniform sampler2D sProvinceTarget;uniform sampler2D sFowTarget;uniform sampler2D sRelicTarget;uniform sampler2D sWaterNormal;uniform sampler2D sBlurTarget;uniform sampler2D sNoiseColor;uniform sampler2D sOceanTexture;uniform float uScale;uniform vec2 uOffset;uniform vec3 uLightPosition;uniform vec3 uHighlightColor;uniform float uHighlightPow;uniform vec3 uDeepWaterColor;uniform vec3 uDiffuseWaterColor;uniform vec2 uWaterMove1;uniform vec2 uWaterMove2;uniform float uContinuous;uniform float uTime;uniform vec2 uShadowLightDir;varying vec2 vUV;varying vec2 vMapUV;varying vec2 vBlurUV;varying vec3 vPosition;void a(float b,out float c,out float d){c=floor(b*2.0);}void e(float b,out float c,out float d){c=floor(b*2.0);d=floor(b*4.0)-c*2.0;}void f(float b,out float c,out float d,out float g){c=floor(b*2.0);d=floor(b*4.0)-c*2.0;g=floor(b*8.0)-c*4.0-d*2.0;}void h(float b,out float c,out float d,out float g,out float i){c=floor(b*2.0);d=floor(b*4.0)-c*2.0;g=floor(b*8.0)-c*4.0-d*2.0;i=floor(b*16.0)-c*8.0-d*4.0-g*2.0;}void j(float b,out float c,out float d,out float g,out float i,out float k){c=floor(b*2.0);d=floor(b*4.0)-c*2.0;g=floor(b*8.0)-c*4.0-d*2.0;i=floor(b*16.0)-c*8.0-d*4.0-g*2.0;k=floor(b*32.0)-c*16.0-d*8.0-g*4.0-i*2.0;}void l(float b,out float m){m=b;}void n(float b,out float c,out float m){b=min(254.0/255.0,b);c=floor(b*2.0);m=b*2.0-c;}void o(float b,out float c,out float d,out float m){b=min(254.0/255.0,b);c=floor(b*2.0);d=floor(b*4.0)-c*2.0;m=b*4.0-c*2.0-d*1.0;}void p(float b,out float c,out float d,out float g,out float m){b=min(254.0/255.0,b);c=floor(b*2.0);d=floor(b*4.0)-c*2.0;g=floor(b*8.0)-c*4.0-d*2.0;m=b*8.0-c*4.0-d*2.0-g;}void q(float b,out float c,out float d,out float g,out float i,out float m){b=min(254.0/255.0,b);c=floor(b*2.0);d=floor(b*4.0)-c*2.0;g=floor(b*8.0)-c*4.0-d*2.0;i=floor(b*16.0)-c*8.0-d*4.0-g*2.0;m=b*16.0-c*8.0-d*4.0-g*2.0-i;}vec3 r(vec4 s){vec2 t=s.xw*2.0-1.0;return vec3(t.x,t.y,sqrt(1.0-(t.x*t.x+t.y*t.y)));}vec3 u(float v,float w,vec3 x){vec3 y=vec3(0.6,0.8,1.0);float z=max(v,1.0);float A=log(max(2.0+v-w*2.0/z,0.1));vec3 B=mix(x,y,clamp(0.1-A*0.2,0.0,1.0));return B;}void main(){vec4 C=texture2D(sProvinceTarget,vUV);float D,E,F,G,H;q(C.w,D,G,E,F,H);vec4 I=texture2D(sFowTarget,vUV);vec4 J=texture2D(sRelicTarget,vUV);float m=mix(clamp(vBlurUV.x,0.0,1.0),mod(vBlurUV.x,1.0),uContinuous);vec4 K=texture2D(sBlurTarget,vec2(m,clamp(vBlurUV.y,0.0,1.0)));vec4 L=texture2D(sWaterNormal,vBlurUV*vec2(0.5,0.2));vec4 M=texture2D(sNoiseColor,vBlurUV*100.0);vec2 N=vec2(vMapUV.x,vMapUV.y)*0.0003;float O=texture2D(sOceanTexture,N).x;float P=O*1.5*clamp(1.0-K.x*4.0,0.2,1.0);float Q=clamp(0.3-2.0*K.x+P,0.0,1.0);vec3 R=vec3(0.06,0.176,0.25);vec3 S=mix(uDiffuseWaterColor,R,Q);vec3 T=uLightPosition/uScale;const vec3 U=vec3(0.0,0.0,-1.0);vec3 V=r(texture2D(sWaterNormal,(vMapUV+uWaterMove1)*0.007));vec3 W=r(texture2D(sWaterNormal,(vMapUV+uWaterMove2)*0.017));vec3 X=normalize(V+W);X.y=-X.y;vec3 Y=normalize(T-vPosition);float Z=max(dot(Y,X),0.0);vec2 ba=uShadowLightDir*uScale;vec4 bb=texture2D(sProvinceTarget,vUV+ba);float bc,bd,be,bf,bg;q(bb.w,bc,bf,bd,be,bg);vec3 bh=reflect(Y,X);float bi=max(dot(bh,U),0.0);float bj=pow(bi,uHighlightPow*0.4);vec3 bk=S*(0.5+Z*0.5)+uHighlightColor*bj*0.3;float bl=clamp(H*8.0-6.0,0.0,1.0);float bm=bl*I.y;float bn=1.0-bm;vec3 bo=vec3(C.x*0.299+C.y*0.587+C.z*0.0722);vec3 bp=mix(C.xyz,bo,0.2+log(uScale)*0.2);bp=mix(bp,vec3(1.0),0.3);vec3 bq=C.xyz*0.55+0.1;vec3 br=mix(bp,bq,bm);float bs=(vMapUV.x-vMapUV.y)*0.13;float bt=min(I.y+clamp(sin(bs),0.0,0.05)*6.0,1.0);br-=bt*0.2*F*(1.0-I.y);vec3 bu=vec3(1.0,0.0,0.0);float bv=(sin(uTime*5.0)*0.3+0.6)*clamp(uScale+0.5,0.2,1.0);float bw=bv*bt*bn*G*0.5;br*=(1.0-bw*0.5);br+=bw*bu;float bx=32.0;float by=min(sign(mod(vMapUV.x,bx)-mod(vMapUV.y,bx)),0.0);br*=1.0-by*0.1*E;bm=max(I.z*2.0-1.0,0.0);float bz=1.0-bm*0.6;float bA=max(K.x-0.3,0.3);br=min(br*(M.r*0.5+bA),1.0);br*=vec3(bz);br+=vec3(0.1*bm);br-=br*max((bc-D),0.0)*0.5;br+=vec3(D*0.1);vec3 x=max(br*bl,bk*(1.0-H));float bB=1.0-clamp(X.z*32.0-30.0,0.0,1.0);x+=vec3(bB)*clamp(K.y*2.0-0.2,0.0,0.4)*(1.0-bl);x=x*(0.8+I.x*0.25);x=x*(1.0-J.w)+J.xyz;x=u(uScale,vUV.y,x);gl_FragColor=vec4(x.rgb,1.0);}"},15739:(e,t,i)=>{i.r(t),i.d(t,{default:()=>n});const n="precision highp float;uniform sampler2D sProvinceTarget;uniform sampler2D sFowTarget;uniform sampler2D sRelicTarget;uniform sampler2D sBlurTarget;uniform float uScale;uniform vec3 uGreyColor;uniform float uContinuous;uniform float uGreyFade;uniform float uBorderBrightness;uniform float uBorderContrast;varying vec2 vUV;varying vec2 vMapUV;varying vec2 vBlurUV;varying vec3 vPosition;void a(float b,out float c,out float d){c=floor(b*2.0);}void e(float b,out float c,out float d){c=floor(b*2.0);d=floor(b*4.0)-c*2.0;}void f(float b,out float c,out float d,out float g){c=floor(b*2.0);d=floor(b*4.0)-c*2.0;g=floor(b*8.0)-c*4.0-d*2.0;}void h(float b,out float c,out float d,out float g,out float i){c=floor(b*2.0);d=floor(b*4.0)-c*2.0;g=floor(b*8.0)-c*4.0-d*2.0;i=floor(b*16.0)-c*8.0-d*4.0-g*2.0;}void j(float b,out float c,out float d,out float g,out float i,out float k){c=floor(b*2.0);d=floor(b*4.0)-c*2.0;g=floor(b*8.0)-c*4.0-d*2.0;i=floor(b*16.0)-c*8.0-d*4.0-g*2.0;k=floor(b*32.0)-c*16.0-d*8.0-g*4.0-i*2.0;}void l(float b,out float m){m=b;}void n(float b,out float c,out float m){b=min(254.0/255.0,b);c=floor(b*2.0);m=b*2.0-c;}void o(float b,out float c,out float d,out float m){b=min(254.0/255.0,b);c=floor(b*2.0);d=floor(b*4.0)-c*2.0;m=b*4.0-c*2.0-d*1.0;}void p(float b,out float c,out float d,out float g,out float m){b=min(254.0/255.0,b);c=floor(b*2.0);d=floor(b*4.0)-c*2.0;g=floor(b*8.0)-c*4.0-d*2.0;m=b*8.0-c*4.0-d*2.0-g;}void q(float b,out float c,out float d,out float g,out float i,out float m){b=min(254.0/255.0,b);c=floor(b*2.0);d=floor(b*4.0)-c*2.0;g=floor(b*8.0)-c*4.0-d*2.0;i=floor(b*16.0)-c*8.0-d*4.0-g*2.0;m=b*16.0-c*8.0-d*4.0-g*2.0-i;}void main(){vec4 r=texture2D(sProvinceTarget,vUV);vec4 s=texture2D(sFowTarget,vUV);vec4 t=texture2D(sRelicTarget,vUV);float u=s.r;float v=s.g;float w=s.b;float x=s.a;float y;float z;float A;float B;float C;j(r.a,z,A,B,C,y);float m=mix(clamp(vBlurUV.x,0.0,1.0),mod(vBlurUV.x,1.0),uContinuous);vec4 D=texture2D(sBlurTarget,vec2(m,clamp(vBlurUV.y,0.0,1.0)));vec3 E=vec3(0.125,0.22,0.3)+vec3(0.2,0.3,0.46)*(D.x);float F=y*v;float G=1.0-F;float H=(vMapUV.x-vMapUV.y*(1.0-B*2.0))*0.13;float I=min(clamp(sin(H),0.0,0.05)*6.0*C,1.0);vec3 J=vec3(r.x*0.299+r.y*0.587+r.z*0.0722);vec3 K=mix(r.xyz,J,0.6+log(uScale)*0.07);K-=I*0.2;vec3 L=r.xyz*0.55+0.15;vec3 M=mix(K,L,F);const vec4 N=vec4(0.7,0.3,0.1,1.0);M=mix(M,N.rgb,N.a*x);const vec4 O=vec4(1.0,1.0,1.0,0.2);M=mix(M,O.rgb,O.a*z);M*=1.0-w*0.3;vec3 P=mix(E,M,y);P=P*(0.8+s.x*0.25);P=P*(1.0-t.w)+t.xyz;gl_FragColor=vec4(P.rgb,1.0);}"}}]);
//# sourceMappingURL=render.8e1385.js.map